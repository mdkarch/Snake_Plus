
snake_software.elf:     file format elf32-littlenios2
snake_software.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000801b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x0000c944 memsz 0x0000c944 flags r-x
    LOAD off    0x0000d964 vaddr 0x0008c964 paddr 0x0008e3c0 align 2**12
         filesz 0x00001a5c memsz 0x00001a5c flags rw-
    LOAD off    0x0000fe1c vaddr 0x0008fe1c paddr 0x0008fe1c align 2**12
         filesz 0x00000000 memsz 0x000002ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000c444  000801b4  000801b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000036c  0008c5f8  0008c5f8  0000d5f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a5c  0008c964  0008e3c0  0000d964  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002ec  0008fe1c  0008fe1c  0000fe1c  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  0000f3c0  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000c78  00000000  00000000  0000f3e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000130e  00000000  00000000  00010060  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000228ab  00000000  00000000  0001136e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000077ca  00000000  00000000  00033c19  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001383b  00000000  00000000  0003b3e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001818  00000000  00000000  0004ec20  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000223b  00000000  00000000  00050438  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000bd46  00000000  00000000  00052673  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0005e3bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000009e0  00000000  00000000  0005e3d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00061b32  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  00061b35  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  00061b3a  2**0
                  CONTENTS, READONLY
 20 .stderr_dev   0000000b  00000000  00000000  00061b3b  2**0
                  CONTENTS, READONLY
 21 .stdin_dev    0000000b  00000000  00000000  00061b46  2**0
                  CONTENTS, READONLY
 22 .stdout_dev   0000000b  00000000  00000000  00061b51  2**0
                  CONTENTS, READONLY
 23 .sopc_system_name 0000000c  00000000  00000000  00061b5c  2**0
                  CONTENTS, READONLY
 24 .quartus_project_dir 0000002f  00000000  00000000  00061b68  2**0
                  CONTENTS, READONLY
 25 .jdi          000041ce  00000000  00000000  00061b97  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     00028796  00000000  00000000  00065d65  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
000801b4 l    d  .text	00000000 .text
0008c5f8 l    d  .rodata	00000000 .rodata
0008c964 l    d  .rwdata	00000000 .rwdata
0008fe1c l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000801ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 PS2.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00080404 l     F .text	00000058 __sprint_r
0008c692 l     O .rodata	00000010 blanks.3452
0008c682 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00082480 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00083ea8 l     F .text	00000058 std
00083fb4 l     F .text	00000008 __fp_lock
00083fbc l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0008c964 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 locale.c
0008e38c l     O .rwdata	00000004 charset
0008c6c8 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0008c810 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00088368 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00089494 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
00089dd0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00089e30 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00089f34 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008a058 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008a138 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008a298 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0008a4c8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0008e3b0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0008a780 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0008d320 l     O .rwdata	00001060 jtag_uart_0
0008a858 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0008aa98 l     F .text	00000228 altera_avalon_jtag_uart_irq
0008acc0 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0008b560 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0008b970 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0008bac0 l     F .text	000000f8 alt_file_locked
0008bd44 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0008c3e0 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0008c594 l     F .text	00000040 alt_sim_halt
00085c98 g     F .text	00000094 _mprec_log10
00085d84 g     F .text	00000088 __any_on
0008753c g     F .text	00000070 _isatty_r
0008c7e8 g     O .rodata	00000028 __mprec_tinytens
0008a2f8 g     F .text	0000006c alt_main
000802dc g     F .text	000000a0 _puts_r
0008fe78 g     O .bss	00000100 alt_irq
000875ac g     F .text	00000078 _lseek_r
0008e3c0 g       *ABS*	00000000 __flash_rwdata_start
00088e88 g     F .text	00000088 __eqdf2
00090108 g       *ABS*	00000000 __alt_heap_start
00080264 g     F .text	00000044 printf
00080000 g       *ABS*	00000000 __alt_mem_sram
00086ff4 g     F .text	00000068 __sseek
00083f10 g     F .text	000000a4 __sinit
00084c1c g     F .text	00000084 _setlocale_r
00084010 g     F .text	0000009c __sfmoreglue
0008a384 g     F .text	00000020 __malloc_unlock
00085714 g     F .text	000000e0 memmove
00084000 g     F .text	00000010 _cleanup
00085e0c g     F .text	000000bc _Balloc
00088f98 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00080000 g     F .entry	0000000c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
000874c8 g     F .text	00000074 _fstat_r
0008fe34 g     O .bss	00000004 errno
0008fe3c g     O .bss	00000004 alt_argv
00096380 g       *ABS*	00000000 _gp
0008d1a0 g     O .rwdata	00000180 alt_fd_list
0008bf68 g     F .text	00000094 alt_find_dev
00085674 g     F .text	000000a0 memcpy
00083ff4 g     F .text	0000000c _cleanup_r
00089130 g     F .text	000000f8 __floatsidf
0008ba48 g     F .text	00000078 alt_io_redirect
000890a8 g     F .text	00000088 __ltdf2
0008c5f8 g       *ABS*	00000000 __DTOR_END__
0008037c g     F .text	00000014 puts
0008bf48 g     F .text	00000020 altera_nios2_irq_init
00085be8 g     F .text	000000b0 __ratio
0008aed8 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
000802a8 g     F .text	00000034 _printf_r
000895d0 g     F .text	00000008 __udivsi3
00089f94 g     F .text	000000c4 isatty
0008c6f8 g     O .rodata	000000c8 __mprec_tens
00084bf8 g     F .text	00000008 __locale_charset
0008fe28 g     O .bss	00000004 __malloc_top_pad
0008e388 g     O .rwdata	00000004 __mb_cur_max
00084c00 g     F .text	0000000c _localeconv_r
00086570 g     F .text	0000003c __i2b
000845dc g     F .text	0000049c __sfvwrite_r
00086f7c g     F .text	00000070 _sbrk_r
00087624 g     F .text	00000078 _read_r
0008cd64 g     O .rwdata	0000000c __lc_ctype
0008e3a8 g     O .rwdata	00000004 alt_max_fd
00089ad0 g     F .text	00000138 __unpack_d
000873a4 g     F .text	00000110 _fclose_r
00083e74 g     F .text	00000034 fflush
0008fe2c g     O .bss	00000004 __malloc_max_sbrked_mem
000887f8 g     F .text	00000074 __adddf3
000801f0 g     F .text	00000050 getInput
00085ac8 g     F .text	00000120 __b2d
00087d08 g     F .text	00000660 __umoddi3
0008a1a4 g     F .text	000000f4 lseek
0008e384 g     O .rwdata	00000004 _global_impure_ptr
00086918 g     F .text	000005f4 _realloc_r
00090108 g       *ABS*	00000000 __bss_end
0008b878 g     F .text	000000f8 alt_iic_isr_register
0008be3c g     F .text	0000010c alt_tick
0008769c g     F .text	0000066c __udivdi3
0008c7c0 g     O .rodata	00000028 __mprec_bigtens
000867f8 g     F .text	00000120 __s2b
00089300 g     F .text	00000194 __floatunsidf
000859e8 g     F .text	00000060 __mcmp
00083fdc g     F .text	00000018 __fp_lock_all
0008b830 g     F .text	00000048 alt_ic_irq_enabled
0008bda4 g     F .text	00000098 alt_alarm_stop
0008fe44 g     O .bss	00000004 alt_irq_active
000800ec g     F .exceptions	000000c8 alt_irq_handler
0008d178 g     O .rwdata	00000028 alt_dev_null
0008b490 g     F .text	0000001c alt_dcache_flush_all
000858b4 g     F .text	00000070 __hi0bits
00089228 g     F .text	000000d8 __fixdfsi
0008e3c0 g       *ABS*	00000000 __ram_rwdata_end
0008e3a0 g     O .rwdata	00000008 alt_dev_list
0008a65c g     F .text	00000124 write
0008c964 g       *ABS*	00000000 __ram_rodata_end
00089e5c g     F .text	000000d8 fstat
000866d8 g     F .text	00000120 __pow5mult
0008fe1c g     O .bss	00000004 __nlocale_changed
000895d8 g     F .text	00000008 __umodsi3
00090108 g       *ABS*	00000000 end
0008a9d8 g     F .text	000000c0 altera_avalon_jtag_uart_init
0008c5f4 g       *ABS*	00000000 __CTOR_LIST__
00100000 g       *ABS*	00000000 __alt_stack_pointer
0008973c g     F .text	00000080 __clzsi2
0008b0fc g     F .text	00000240 altera_avalon_jtag_uart_write
00083f00 g     F .text	00000004 __sfp_lock_acquire
00085590 g     F .text	000000e4 memchr
0008045c g     F .text	00001ec4 ___vfprintf_internal_r
000842c8 g     F .text	00000314 _free_r
0008c3e4 g     F .text	000001b0 __call_exitprocs
0008fe20 g     O .bss	00000004 __mlocale_changed
0008e394 g     O .rwdata	00000004 __malloc_sbrk_base
000801b4 g     F .text	0000003c _start
0008fe48 g     O .bss	00000004 _alt_tick_rate
000861d0 g     F .text	0000014c __lshift
0008fe4c g     O .bss	00000004 _alt_nticks
0008a3a4 g     F .text	00000124 read
0008a814 g     F .text	00000044 alt_sys_init
0008c2ac g     F .text	00000134 __register_exitproc
0008631c g     F .text	00000254 __multiply
0008ad70 g     F .text	00000074 altera_avalon_jtag_uart_close
000895e0 g     F .text	00000038 __mulsi3
0008c964 g       *ABS*	00000000 __ram_rwdata_start
0008c5f8 g       *ABS*	00000000 __ram_rodata_start
0008fe50 g     O .bss	00000028 __malloc_current_mallinfo
00085ec8 g     F .text	0000017c __d2b
0008a890 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0008c11c g     F .text	000000d0 alt_get_fd
00089c08 g     F .text	000000c8 __fpcmp_parts_d
00087334 g     F .text	00000070 _close_r
0008c238 g     F .text	00000074 memcmp
0008a940 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00090108 g       *ABS*	00000000 __alt_stack_base
0008a988 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00082344 g     F .text	0000013c __swsetup_r
00088c30 g     F .text	00000258 __divdf3
000840ac g     F .text	000000f0 __sfp
00085d2c g     F .text	00000058 __copybits
0008cd70 g     O .rwdata	00000408 __malloc_av_
00083f0c g     F .text	00000004 __sinit_lock_release
0008886c g     F .text	000003c4 __muldf3
000870d8 g     F .text	00000060 __sread
0008bffc g     F .text	00000120 alt_find_file
0008b4ac g     F .text	000000b4 alt_dev_llist_insert
0008a364 g     F .text	00000020 __malloc_lock
0008a5a0 g     F .text	000000bc sbrk
00083c78 g     F .text	000001fc _fflush_r
0008726c g     F .text	000000c8 _calloc_r
0008fe1c g       *ABS*	00000000 __bss_start
000857f4 g     F .text	00000098 memset
00080240 g     F .text	00000024 main
0008fe40 g     O .bss	00000004 alt_envp
0008fe30 g     O .bss	00000004 __malloc_max_total_mem
0008a8e8 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
00086fec g     F .text	00000008 __sclose
00100000 g       *ABS*	00000000 __alt_heap_limit
000874b4 g     F .text	00000014 fclose
0008ff78 g     O .bss	00000190 _atexit0
000826c4 g     F .text	000015b4 _dtoa_r
00084e50 g     F .text	00000740 _malloc_r
0008e3ac g     O .rwdata	00000004 alt_errno
00084b40 g     F .text	000000b8 _fwalk
00089510 g     F .text	00000060 __divsi3
0008c81c g     O .rodata	00000014 __thenan_df
0008419c g     F .text	0000012c _malloc_trim_r
0008c5f8 g       *ABS*	00000000 __CTOR_END__
00087138 g     F .text	000000bc strcmp
0008c5f8 g       *ABS*	00000000 __flash_rodata_start
0008c5f8 g       *ABS*	00000000 __DTOR_LIST__
00088f10 g     F .text	00000088 __nedf2
0008a7e0 g     F .text	00000034 alt_irq_init
0008a528 g     F .text	00000078 alt_release_fd
0008c830 g     O .rodata	00000100 __clz_tab
0008fe24 g     O .bss	00000004 _PathLocale
0008c1ec g     F .text	00000014 atexit
000871f4 g     F .text	00000078 _write_r
00084ca0 g     F .text	0000001c setlocale
0008e380 g     O .rwdata	00000004 _impure_ptr
0008fe38 g     O .bss	00000004 alt_argc
0008b624 g     F .text	00000064 _do_dtors
00080020 g       .exceptions	00000000 alt_irq_entry
00085a48 g     F .text	00000080 __ulp
00086f0c g     F .text	00000040 __isinfd
00083fc4 g     F .text	00000018 __fp_unlock_all
0008e398 g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00084c0c g     F .text	00000010 localeconv
0008b6a4 g     F .text	00000050 alt_ic_isr_register
0008e3c0 g       *ABS*	00000000 _edata
00090108 g       *ABS*	00000000 _end
000801b4 g       *ABS*	00000000 __ram_exceptions_end
0008ade4 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0008b790 g     F .text	000000a0 alt_ic_irq_disable
0008705c g     F .text	0000007c __swrite
0008e390 g     O .rwdata	00000004 __malloc_trim_threshold
0008c200 g     F .text	00000038 exit
00084a78 g     F .text	000000c8 _fwalk_reent
00086044 g     F .text	0000018c __mdiff
00089570 g     F .text	00000060 __modsi3
00100000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
00083f04 g     F .text	00000004 __sfp_lock_release
0008c5d4 g     F .text	00000020 _exit
00086f4c g     F .text	00000030 __isnand
0008b33c g     F .text	00000154 alt_alarm_start
00089618 g     F .text	00000124 __muldi3
00084cbc g     F .text	00000194 __smakebuf_r
00080390 g     F .text	00000074 strlen
0008bbb8 g     F .text	0000018c open
00089020 g     F .text	00000088 __gedf2
0008b688 g     F .text	0000001c alt_icache_flush_all
0008e3b4 g     O .rwdata	00000004 alt_priority_mask
0008b6f4 g     F .text	0000009c alt_ic_irq_enable
00082320 g     F .text	00000024 __vfprintf_internal
00088778 g     F .text	00000080 __subdf3
00085924 g     F .text	000000c4 __lo0bits
0008e3b8 g     O .rwdata	00000008 alt_alarm_list
0008b5c0 g     F .text	00000064 _do_ctors
00089cd0 g     F .text	00000100 close
0008a0b8 g     F .text	00000080 alt_load
000897bc g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00083f08 g     F .text	00000004 __sinit_lock_acquire
000865ac g     F .text	0000012c __multadd
0008588c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80000:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80004:	08406d14 	ori	at,at,436
    jmp r1
   80008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00080020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   80044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800ec0 	call	800ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000306 	br	80098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   8008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   80094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   80098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   8009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   800c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   800e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800e8:	ef80083a 	eret

000800ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800ec:	defff904 	addi	sp,sp,-28
   800f0:	dfc00615 	stw	ra,24(sp)
   800f4:	df000515 	stw	fp,20(sp)
   800f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   800fc:	0005313a 	rdctl	r2,ipending
   80100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   80104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   80108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   8010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80110:	00800044 	movi	r2,1
   80114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   80118:	e0ffff17 	ldw	r3,-4(fp)
   8011c:	e0bffe17 	ldw	r2,-8(fp)
   80120:	1884703a 	and	r2,r3,r2
   80124:	1005003a 	cmpeq	r2,r2,zero
   80128:	1000161e 	bne	r2,zero,80184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8012c:	e0bffd17 	ldw	r2,-12(fp)
   80130:	00c00274 	movhi	r3,9
   80134:	18ff9e04 	addi	r3,r3,-392
   80138:	100490fa 	slli	r2,r2,3
   8013c:	10c5883a 	add	r2,r2,r3
   80140:	11400017 	ldw	r5,0(r2)
   80144:	e0bffd17 	ldw	r2,-12(fp)
   80148:	00c00274 	movhi	r3,9
   8014c:	18ff9e04 	addi	r3,r3,-392
   80150:	100490fa 	slli	r2,r2,3
   80154:	10c5883a 	add	r2,r2,r3
   80158:	10800104 	addi	r2,r2,4
   8015c:	11000017 	ldw	r4,0(r2)
   80160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80164:	0005313a 	rdctl	r2,ipending
   80168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   8016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   80170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   80174:	e0bfff17 	ldw	r2,-4(fp)
   80178:	1004c03a 	cmpne	r2,r2,zero
   8017c:	103fe31e 	bne	r2,zero,8010c <alt_irq_handler+0x20>
   80180:	00000706 	br	801a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   80184:	e0bffe17 	ldw	r2,-8(fp)
   80188:	1085883a 	add	r2,r2,r2
   8018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   80190:	e0bffd17 	ldw	r2,-12(fp)
   80194:	10800044 	addi	r2,r2,1
   80198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   8019c:	003fde06 	br	80118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   801a0:	e037883a 	mov	sp,fp
   801a4:	dfc00117 	ldw	ra,4(sp)
   801a8:	df000017 	ldw	fp,0(sp)
   801ac:	dec00204 	addi	sp,sp,8
   801b0:	f800283a 	ret

Disassembly of section .text:

000801b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   801b4:	06c00434 	movhi	sp,16
    ori sp, sp, %lo(__alt_stack_pointer)
   801b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   801bc:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   801c0:	d698e014 	ori	gp,gp,25472
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   801c4:	00800234 	movhi	r2,8
    ori r2, r2, %lo(__bss_start)
   801c8:	10bf8714 	ori	r2,r2,65052

    movhi r3, %hi(__bss_end)
   801cc:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
   801d0:	18c04214 	ori	r3,r3,264

    beq r2, r3, 1f
   801d4:	10c00326 	beq	r2,r3,801e4 <_start+0x30>

0:
    stw zero, (r2)
   801d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   801dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   801e0:	10fffd36 	bltu	r2,r3,801d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   801e4:	008a0b80 	call	8a0b8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   801e8:	008a2f80 	call	8a2f8 <alt_main>

000801ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   801ec:	003fff06 	br	801ec <alt_after_alt_main>

000801f0 <getInput>:
#include <io.h>
#include <system.h>
#include <stdio.h>

char* getInput()
{
   801f0:	defffd04 	addi	sp,sp,-12
   801f4:	dfc00215 	stw	ra,8(sp)
   801f8:	df000115 	stw	fp,4(sp)
   801fc:	df000104 	addi	fp,sp,4
	char* code;
	while(!IORD_8DIRECT(PS2_BASE, 0));
   80200:	0005883a 	mov	r2,zero
   80204:	10800023 	ldbuio	r2,0(r2)
   80208:	1005003a 	cmpeq	r2,r2,zero
   8020c:	103ffc1e 	bne	r2,zero,80200 <getInput+0x10>
	code = IORD_8DIRECT(PS2_BASE,4);
   80210:	00800104 	movi	r2,4
   80214:	10800023 	ldbuio	r2,0(r2)
   80218:	e0bfff15 	stw	r2,-4(fp)
	printf("Key recieved: %x", code);
   8021c:	01000274 	movhi	r4,9
   80220:	21317e04 	addi	r4,r4,-14856
   80224:	e17fff17 	ldw	r5,-4(fp)
   80228:	00802640 	call	80264 <printf>

}
   8022c:	e037883a 	mov	sp,fp
   80230:	dfc00117 	ldw	ra,4(sp)
   80234:	df000017 	ldw	fp,0(sp)
   80238:	dec00204 	addi	sp,sp,8
   8023c:	f800283a 	ret

00080240 <main>:

#include <stdio.h>
char* getInput();

int main()
{
   80240:	defffe04 	addi	sp,sp,-8
   80244:	dfc00115 	stw	ra,4(sp)
   80248:	df000015 	stw	fp,0(sp)
   8024c:	d839883a 	mov	fp,sp
  printf("Hello from Nios II!\n");
   80250:	01000274 	movhi	r4,9
   80254:	21318304 	addi	r4,r4,-14836
   80258:	008037c0 	call	8037c <puts>

  while(1) getInput();
   8025c:	00801f00 	call	801f0 <getInput>
   80260:	003ffe06 	br	8025c <main+0x1c>

00080264 <printf>:
   80264:	defffb04 	addi	sp,sp,-20
   80268:	dfc00115 	stw	ra,4(sp)
   8026c:	d9400215 	stw	r5,8(sp)
   80270:	d9800315 	stw	r6,12(sp)
   80274:	d9c00415 	stw	r7,16(sp)
   80278:	00800274 	movhi	r2,9
   8027c:	10b8e004 	addi	r2,r2,-7296
   80280:	10c00017 	ldw	r3,0(r2)
   80284:	200b883a 	mov	r5,r4
   80288:	d8800204 	addi	r2,sp,8
   8028c:	19000217 	ldw	r4,8(r3)
   80290:	100d883a 	mov	r6,r2
   80294:	d8800015 	stw	r2,0(sp)
   80298:	00823200 	call	82320 <__vfprintf_internal>
   8029c:	dfc00117 	ldw	ra,4(sp)
   802a0:	dec00504 	addi	sp,sp,20
   802a4:	f800283a 	ret

000802a8 <_printf_r>:
   802a8:	defffc04 	addi	sp,sp,-16
   802ac:	dfc00115 	stw	ra,4(sp)
   802b0:	d9800215 	stw	r6,8(sp)
   802b4:	d9c00315 	stw	r7,12(sp)
   802b8:	280d883a 	mov	r6,r5
   802bc:	21400217 	ldw	r5,8(r4)
   802c0:	d8c00204 	addi	r3,sp,8
   802c4:	180f883a 	mov	r7,r3
   802c8:	d8c00015 	stw	r3,0(sp)
   802cc:	008045c0 	call	8045c <___vfprintf_internal_r>
   802d0:	dfc00117 	ldw	ra,4(sp)
   802d4:	dec00404 	addi	sp,sp,16
   802d8:	f800283a 	ret

000802dc <_puts_r>:
   802dc:	defff604 	addi	sp,sp,-40
   802e0:	dc400715 	stw	r17,28(sp)
   802e4:	2023883a 	mov	r17,r4
   802e8:	2809883a 	mov	r4,r5
   802ec:	dfc00915 	stw	ra,36(sp)
   802f0:	dcc00815 	stw	r19,32(sp)
   802f4:	2827883a 	mov	r19,r5
   802f8:	00803900 	call	80390 <strlen>
   802fc:	89400217 	ldw	r5,8(r17)
   80300:	00c00274 	movhi	r3,9
   80304:	18f18804 	addi	r3,r3,-14816
   80308:	01c00044 	movi	r7,1
   8030c:	12000044 	addi	r8,r2,1
   80310:	d8c00515 	stw	r3,20(sp)
   80314:	d9c00615 	stw	r7,24(sp)
   80318:	d8c00304 	addi	r3,sp,12
   8031c:	01c00084 	movi	r7,2
   80320:	8809883a 	mov	r4,r17
   80324:	d80d883a 	mov	r6,sp
   80328:	d8c00015 	stw	r3,0(sp)
   8032c:	dcc00315 	stw	r19,12(sp)
   80330:	da000215 	stw	r8,8(sp)
   80334:	d9c00115 	stw	r7,4(sp)
   80338:	d8800415 	stw	r2,16(sp)
   8033c:	00845dc0 	call	845dc <__sfvwrite_r>
   80340:	00ffffc4 	movi	r3,-1
   80344:	10000626 	beq	r2,zero,80360 <_puts_r+0x84>
   80348:	1805883a 	mov	r2,r3
   8034c:	dfc00917 	ldw	ra,36(sp)
   80350:	dcc00817 	ldw	r19,32(sp)
   80354:	dc400717 	ldw	r17,28(sp)
   80358:	dec00a04 	addi	sp,sp,40
   8035c:	f800283a 	ret
   80360:	00c00284 	movi	r3,10
   80364:	1805883a 	mov	r2,r3
   80368:	dfc00917 	ldw	ra,36(sp)
   8036c:	dcc00817 	ldw	r19,32(sp)
   80370:	dc400717 	ldw	r17,28(sp)
   80374:	dec00a04 	addi	sp,sp,40
   80378:	f800283a 	ret

0008037c <puts>:
   8037c:	00800274 	movhi	r2,9
   80380:	10b8e004 	addi	r2,r2,-7296
   80384:	200b883a 	mov	r5,r4
   80388:	11000017 	ldw	r4,0(r2)
   8038c:	00802dc1 	jmpi	802dc <_puts_r>

00080390 <strlen>:
   80390:	208000cc 	andi	r2,r4,3
   80394:	2011883a 	mov	r8,r4
   80398:	1000161e 	bne	r2,zero,803f4 <strlen+0x64>
   8039c:	20c00017 	ldw	r3,0(r4)
   803a0:	017fbff4 	movhi	r5,65279
   803a4:	297fbfc4 	addi	r5,r5,-257
   803a8:	01e02074 	movhi	r7,32897
   803ac:	39e02004 	addi	r7,r7,-32640
   803b0:	1945883a 	add	r2,r3,r5
   803b4:	11c4703a 	and	r2,r2,r7
   803b8:	00c6303a 	nor	r3,zero,r3
   803bc:	1886703a 	and	r3,r3,r2
   803c0:	18000c1e 	bne	r3,zero,803f4 <strlen+0x64>
   803c4:	280d883a 	mov	r6,r5
   803c8:	380b883a 	mov	r5,r7
   803cc:	21000104 	addi	r4,r4,4
   803d0:	20800017 	ldw	r2,0(r4)
   803d4:	1187883a 	add	r3,r2,r6
   803d8:	1946703a 	and	r3,r3,r5
   803dc:	0084303a 	nor	r2,zero,r2
   803e0:	10c4703a 	and	r2,r2,r3
   803e4:	103ff926 	beq	r2,zero,803cc <strlen+0x3c>
   803e8:	20800007 	ldb	r2,0(r4)
   803ec:	10000326 	beq	r2,zero,803fc <strlen+0x6c>
   803f0:	21000044 	addi	r4,r4,1
   803f4:	20800007 	ldb	r2,0(r4)
   803f8:	103ffd1e 	bne	r2,zero,803f0 <strlen+0x60>
   803fc:	2205c83a 	sub	r2,r4,r8
   80400:	f800283a 	ret

00080404 <__sprint_r>:
   80404:	30800217 	ldw	r2,8(r6)
   80408:	defffe04 	addi	sp,sp,-8
   8040c:	dc000015 	stw	r16,0(sp)
   80410:	dfc00115 	stw	ra,4(sp)
   80414:	3021883a 	mov	r16,r6
   80418:	0007883a 	mov	r3,zero
   8041c:	1000061e 	bne	r2,zero,80438 <__sprint_r+0x34>
   80420:	1805883a 	mov	r2,r3
   80424:	30000115 	stw	zero,4(r6)
   80428:	dfc00117 	ldw	ra,4(sp)
   8042c:	dc000017 	ldw	r16,0(sp)
   80430:	dec00204 	addi	sp,sp,8
   80434:	f800283a 	ret
   80438:	00845dc0 	call	845dc <__sfvwrite_r>
   8043c:	1007883a 	mov	r3,r2
   80440:	1805883a 	mov	r2,r3
   80444:	80000115 	stw	zero,4(r16)
   80448:	80000215 	stw	zero,8(r16)
   8044c:	dfc00117 	ldw	ra,4(sp)
   80450:	dc000017 	ldw	r16,0(sp)
   80454:	dec00204 	addi	sp,sp,8
   80458:	f800283a 	ret

0008045c <___vfprintf_internal_r>:
   8045c:	defea404 	addi	sp,sp,-1392
   80460:	dd815815 	stw	r22,1376(sp)
   80464:	dc015215 	stw	r16,1352(sp)
   80468:	d9c15115 	stw	r7,1348(sp)
   8046c:	dfc15b15 	stw	ra,1388(sp)
   80470:	df015a15 	stw	fp,1384(sp)
   80474:	ddc15915 	stw	r23,1380(sp)
   80478:	dd415715 	stw	r21,1372(sp)
   8047c:	dd015615 	stw	r20,1368(sp)
   80480:	dcc15515 	stw	r19,1364(sp)
   80484:	dc815415 	stw	r18,1360(sp)
   80488:	dc415315 	stw	r17,1356(sp)
   8048c:	282d883a 	mov	r22,r5
   80490:	3021883a 	mov	r16,r6
   80494:	d9014f15 	stw	r4,1340(sp)
   80498:	0084c000 	call	84c00 <_localeconv_r>
   8049c:	10800017 	ldw	r2,0(r2)
   804a0:	d9c15117 	ldw	r7,1348(sp)
   804a4:	d8814915 	stw	r2,1316(sp)
   804a8:	d8814f17 	ldw	r2,1340(sp)
   804ac:	10000226 	beq	r2,zero,804b8 <___vfprintf_internal_r+0x5c>
   804b0:	10800e17 	ldw	r2,56(r2)
   804b4:	10020d26 	beq	r2,zero,80cec <___vfprintf_internal_r+0x890>
   804b8:	b080030b 	ldhu	r2,12(r22)
   804bc:	1080020c 	andi	r2,r2,8
   804c0:	10020e26 	beq	r2,zero,80cfc <___vfprintf_internal_r+0x8a0>
   804c4:	b0800417 	ldw	r2,16(r22)
   804c8:	10020c26 	beq	r2,zero,80cfc <___vfprintf_internal_r+0x8a0>
   804cc:	b200030b 	ldhu	r8,12(r22)
   804d0:	00800284 	movi	r2,10
   804d4:	40c0068c 	andi	r3,r8,26
   804d8:	18802f1e 	bne	r3,r2,80598 <___vfprintf_internal_r+0x13c>
   804dc:	b080038f 	ldh	r2,14(r22)
   804e0:	10002d16 	blt	r2,zero,80598 <___vfprintf_internal_r+0x13c>
   804e4:	b240038b 	ldhu	r9,14(r22)
   804e8:	b2800717 	ldw	r10,28(r22)
   804ec:	b2c00917 	ldw	r11,36(r22)
   804f0:	d9014f17 	ldw	r4,1340(sp)
   804f4:	dc402904 	addi	r17,sp,164
   804f8:	d8804004 	addi	r2,sp,256
   804fc:	00c10004 	movi	r3,1024
   80500:	423fff4c 	andi	r8,r8,65533
   80504:	800d883a 	mov	r6,r16
   80508:	880b883a 	mov	r5,r17
   8050c:	da002c0d 	sth	r8,176(sp)
   80510:	da402c8d 	sth	r9,178(sp)
   80514:	da803015 	stw	r10,192(sp)
   80518:	dac03215 	stw	r11,200(sp)
   8051c:	d8802d15 	stw	r2,180(sp)
   80520:	d8c02e15 	stw	r3,184(sp)
   80524:	d8802915 	stw	r2,164(sp)
   80528:	d8c02b15 	stw	r3,172(sp)
   8052c:	d8002f15 	stw	zero,188(sp)
   80530:	008045c0 	call	8045c <___vfprintf_internal_r>
   80534:	d8814b15 	stw	r2,1324(sp)
   80538:	10000416 	blt	r2,zero,8054c <___vfprintf_internal_r+0xf0>
   8053c:	d9014f17 	ldw	r4,1340(sp)
   80540:	880b883a 	mov	r5,r17
   80544:	0083c780 	call	83c78 <_fflush_r>
   80548:	1002321e 	bne	r2,zero,80e14 <___vfprintf_internal_r+0x9b8>
   8054c:	d8802c0b 	ldhu	r2,176(sp)
   80550:	1080100c 	andi	r2,r2,64
   80554:	10000326 	beq	r2,zero,80564 <___vfprintf_internal_r+0x108>
   80558:	b080030b 	ldhu	r2,12(r22)
   8055c:	10801014 	ori	r2,r2,64
   80560:	b080030d 	sth	r2,12(r22)
   80564:	d8814b17 	ldw	r2,1324(sp)
   80568:	dfc15b17 	ldw	ra,1388(sp)
   8056c:	df015a17 	ldw	fp,1384(sp)
   80570:	ddc15917 	ldw	r23,1380(sp)
   80574:	dd815817 	ldw	r22,1376(sp)
   80578:	dd415717 	ldw	r21,1372(sp)
   8057c:	dd015617 	ldw	r20,1368(sp)
   80580:	dcc15517 	ldw	r19,1364(sp)
   80584:	dc815417 	ldw	r18,1360(sp)
   80588:	dc415317 	ldw	r17,1356(sp)
   8058c:	dc015217 	ldw	r16,1352(sp)
   80590:	dec15c04 	addi	sp,sp,1392
   80594:	f800283a 	ret
   80598:	0005883a 	mov	r2,zero
   8059c:	0007883a 	mov	r3,zero
   805a0:	dd401904 	addi	r21,sp,100
   805a4:	d8814215 	stw	r2,1288(sp)
   805a8:	802f883a 	mov	r23,r16
   805ac:	d8c14315 	stw	r3,1292(sp)
   805b0:	d8014b15 	stw	zero,1324(sp)
   805b4:	d8014815 	stw	zero,1312(sp)
   805b8:	d8014415 	stw	zero,1296(sp)
   805bc:	d8014715 	stw	zero,1308(sp)
   805c0:	dd400c15 	stw	r21,48(sp)
   805c4:	d8000e15 	stw	zero,56(sp)
   805c8:	d8000d15 	stw	zero,52(sp)
   805cc:	b8800007 	ldb	r2,0(r23)
   805d0:	10001926 	beq	r2,zero,80638 <___vfprintf_internal_r+0x1dc>
   805d4:	00c00944 	movi	r3,37
   805d8:	10c01726 	beq	r2,r3,80638 <___vfprintf_internal_r+0x1dc>
   805dc:	b821883a 	mov	r16,r23
   805e0:	00000106 	br	805e8 <___vfprintf_internal_r+0x18c>
   805e4:	10c00326 	beq	r2,r3,805f4 <___vfprintf_internal_r+0x198>
   805e8:	84000044 	addi	r16,r16,1
   805ec:	80800007 	ldb	r2,0(r16)
   805f0:	103ffc1e 	bne	r2,zero,805e4 <___vfprintf_internal_r+0x188>
   805f4:	85e7c83a 	sub	r19,r16,r23
   805f8:	98000e26 	beq	r19,zero,80634 <___vfprintf_internal_r+0x1d8>
   805fc:	dc800e17 	ldw	r18,56(sp)
   80600:	dc400d17 	ldw	r17,52(sp)
   80604:	008001c4 	movi	r2,7
   80608:	94e5883a 	add	r18,r18,r19
   8060c:	8c400044 	addi	r17,r17,1
   80610:	adc00015 	stw	r23,0(r21)
   80614:	dc800e15 	stw	r18,56(sp)
   80618:	acc00115 	stw	r19,4(r21)
   8061c:	dc400d15 	stw	r17,52(sp)
   80620:	14428b16 	blt	r2,r17,81050 <___vfprintf_internal_r+0xbf4>
   80624:	ad400204 	addi	r21,r21,8
   80628:	d9014b17 	ldw	r4,1324(sp)
   8062c:	24c9883a 	add	r4,r4,r19
   80630:	d9014b15 	stw	r4,1324(sp)
   80634:	802f883a 	mov	r23,r16
   80638:	b8800007 	ldb	r2,0(r23)
   8063c:	10013c26 	beq	r2,zero,80b30 <___vfprintf_internal_r+0x6d4>
   80640:	bdc00044 	addi	r23,r23,1
   80644:	d8000405 	stb	zero,16(sp)
   80648:	b8c00007 	ldb	r3,0(r23)
   8064c:	04ffffc4 	movi	r19,-1
   80650:	d8014c15 	stw	zero,1328(sp)
   80654:	d8014a15 	stw	zero,1320(sp)
   80658:	d8c14d15 	stw	r3,1332(sp)
   8065c:	bdc00044 	addi	r23,r23,1
   80660:	d9414d17 	ldw	r5,1332(sp)
   80664:	00801604 	movi	r2,88
   80668:	28fff804 	addi	r3,r5,-32
   8066c:	10c06036 	bltu	r2,r3,807f0 <___vfprintf_internal_r+0x394>
   80670:	18c5883a 	add	r2,r3,r3
   80674:	1085883a 	add	r2,r2,r2
   80678:	00c00234 	movhi	r3,8
   8067c:	18c1a304 	addi	r3,r3,1676
   80680:	10c5883a 	add	r2,r2,r3
   80684:	11000017 	ldw	r4,0(r2)
   80688:	2000683a 	jmp	r4
   8068c:	00081600 	call	8160 <__alt_mem_sram-0x77ea0>
   80690:	000807f0 	cmpltui	zero,zero,8223
   80694:	000807f0 	cmpltui	zero,zero,8223
   80698:	000815ec 	andhi	zero,zero,8279
   8069c:	000807f0 	cmpltui	zero,zero,8223
   806a0:	000807f0 	cmpltui	zero,zero,8223
   806a4:	000807f0 	cmpltui	zero,zero,8223
   806a8:	000807f0 	cmpltui	zero,zero,8223
   806ac:	000807f0 	cmpltui	zero,zero,8223
   806b0:	000807f0 	cmpltui	zero,zero,8223
   806b4:	000813cc 	andi	zero,zero,8271
   806b8:	000815dc 	xori	zero,zero,8279
   806bc:	000807f0 	cmpltui	zero,zero,8223
   806c0:	000813e4 	muli	zero,zero,8271
   806c4:	00081684 	movi	zero,8282
   806c8:	000807f0 	cmpltui	zero,zero,8223
   806cc:	00081670 	cmpltui	zero,zero,8281
   806d0:	0008162c 	andhi	zero,zero,8280
   806d4:	0008162c 	andhi	zero,zero,8280
   806d8:	0008162c 	andhi	zero,zero,8280
   806dc:	0008162c 	andhi	zero,zero,8280
   806e0:	0008162c 	andhi	zero,zero,8280
   806e4:	0008162c 	andhi	zero,zero,8280
   806e8:	0008162c 	andhi	zero,zero,8280
   806ec:	0008162c 	andhi	zero,zero,8280
   806f0:	0008162c 	andhi	zero,zero,8280
   806f4:	000807f0 	cmpltui	zero,zero,8223
   806f8:	000807f0 	cmpltui	zero,zero,8223
   806fc:	000807f0 	cmpltui	zero,zero,8223
   80700:	000807f0 	cmpltui	zero,zero,8223
   80704:	000807f0 	cmpltui	zero,zero,8223
   80708:	000807f0 	cmpltui	zero,zero,8223
   8070c:	000807f0 	cmpltui	zero,zero,8223
   80710:	000807f0 	cmpltui	zero,zero,8223
   80714:	000807f0 	cmpltui	zero,zero,8223
   80718:	000807f0 	cmpltui	zero,zero,8223
   8071c:	00080e48 	cmpgei	zero,zero,8249
   80720:	000814b4 	movhi	zero,8274
   80724:	000807f0 	cmpltui	zero,zero,8223
   80728:	000814b4 	movhi	zero,8274
   8072c:	000807f0 	cmpltui	zero,zero,8223
   80730:	000807f0 	cmpltui	zero,zero,8223
   80734:	000807f0 	cmpltui	zero,zero,8223
   80738:	000807f0 	cmpltui	zero,zero,8223
   8073c:	00081618 	cmpnei	zero,zero,8280
   80740:	000807f0 	cmpltui	zero,zero,8223
   80744:	000807f0 	cmpltui	zero,zero,8223
   80748:	00080efc 	xorhi	zero,zero,8251
   8074c:	000807f0 	cmpltui	zero,zero,8223
   80750:	000807f0 	cmpltui	zero,zero,8223
   80754:	000807f0 	cmpltui	zero,zero,8223
   80758:	000807f0 	cmpltui	zero,zero,8223
   8075c:	000807f0 	cmpltui	zero,zero,8223
   80760:	00080f48 	cmpgei	zero,zero,8253
   80764:	000807f0 	cmpltui	zero,zero,8223
   80768:	000807f0 	cmpltui	zero,zero,8223
   8076c:	00081568 	cmpgeui	zero,zero,8277
   80770:	000807f0 	cmpltui	zero,zero,8223
   80774:	000807f0 	cmpltui	zero,zero,8223
   80778:	000807f0 	cmpltui	zero,zero,8223
   8077c:	000807f0 	cmpltui	zero,zero,8223
   80780:	000807f0 	cmpltui	zero,zero,8223
   80784:	000807f0 	cmpltui	zero,zero,8223
   80788:	000807f0 	cmpltui	zero,zero,8223
   8078c:	000807f0 	cmpltui	zero,zero,8223
   80790:	000807f0 	cmpltui	zero,zero,8223
   80794:	000807f0 	cmpltui	zero,zero,8223
   80798:	0008153c 	xorhi	zero,zero,8276
   8079c:	00080e54 	movui	zero,8249
   807a0:	000814b4 	movhi	zero,8274
   807a4:	000814b4 	movhi	zero,8274
   807a8:	000814b4 	movhi	zero,8274
   807ac:	000814a0 	cmpeqi	zero,zero,8274
   807b0:	00080e54 	movui	zero,8249
   807b4:	000807f0 	cmpltui	zero,zero,8223
   807b8:	000807f0 	cmpltui	zero,zero,8223
   807bc:	00081428 	cmpgeui	zero,zero,8272
   807c0:	000807f0 	cmpltui	zero,zero,8223
   807c4:	000813f8 	rdprs	zero,zero,8271
   807c8:	00080f08 	cmpgei	zero,zero,8252
   807cc:	00081458 	cmpnei	zero,zero,8273
   807d0:	00081444 	movi	zero,8273
   807d4:	000807f0 	cmpltui	zero,zero,8223
   807d8:	000816ec 	andhi	zero,zero,8283
   807dc:	000807f0 	cmpltui	zero,zero,8223
   807e0:	00080f54 	movui	zero,8253
   807e4:	000807f0 	cmpltui	zero,zero,8223
   807e8:	000807f0 	cmpltui	zero,zero,8223
   807ec:	000815cc 	andi	zero,zero,8279
   807f0:	d9014d17 	ldw	r4,1332(sp)
   807f4:	2000ce26 	beq	r4,zero,80b30 <___vfprintf_internal_r+0x6d4>
   807f8:	01400044 	movi	r5,1
   807fc:	d9800f04 	addi	r6,sp,60
   80800:	d9c14015 	stw	r7,1280(sp)
   80804:	d9414515 	stw	r5,1300(sp)
   80808:	d9814115 	stw	r6,1284(sp)
   8080c:	280f883a 	mov	r7,r5
   80810:	d9000f05 	stb	r4,60(sp)
   80814:	d8000405 	stb	zero,16(sp)
   80818:	d8014615 	stw	zero,1304(sp)
   8081c:	d8c14c17 	ldw	r3,1328(sp)
   80820:	1880008c 	andi	r2,r3,2
   80824:	1005003a 	cmpeq	r2,r2,zero
   80828:	d8815015 	stw	r2,1344(sp)
   8082c:	1000031e 	bne	r2,zero,8083c <___vfprintf_internal_r+0x3e0>
   80830:	d9014517 	ldw	r4,1300(sp)
   80834:	21000084 	addi	r4,r4,2
   80838:	d9014515 	stw	r4,1300(sp)
   8083c:	d9414c17 	ldw	r5,1328(sp)
   80840:	2940210c 	andi	r5,r5,132
   80844:	d9414e15 	stw	r5,1336(sp)
   80848:	28002d1e 	bne	r5,zero,80900 <___vfprintf_internal_r+0x4a4>
   8084c:	d9814a17 	ldw	r6,1320(sp)
   80850:	d8814517 	ldw	r2,1300(sp)
   80854:	30a1c83a 	sub	r16,r6,r2
   80858:	0400290e 	bge	zero,r16,80900 <___vfprintf_internal_r+0x4a4>
   8085c:	00800404 	movi	r2,16
   80860:	14045e0e 	bge	r2,r16,819dc <___vfprintf_internal_r+0x1580>
   80864:	dc800e17 	ldw	r18,56(sp)
   80868:	dc400d17 	ldw	r17,52(sp)
   8086c:	1027883a 	mov	r19,r2
   80870:	07000274 	movhi	fp,9
   80874:	e731a484 	addi	fp,fp,-14702
   80878:	050001c4 	movi	r20,7
   8087c:	00000306 	br	8088c <___vfprintf_internal_r+0x430>
   80880:	843ffc04 	addi	r16,r16,-16
   80884:	ad400204 	addi	r21,r21,8
   80888:	9c00130e 	bge	r19,r16,808d8 <___vfprintf_internal_r+0x47c>
   8088c:	94800404 	addi	r18,r18,16
   80890:	8c400044 	addi	r17,r17,1
   80894:	af000015 	stw	fp,0(r21)
   80898:	acc00115 	stw	r19,4(r21)
   8089c:	dc800e15 	stw	r18,56(sp)
   808a0:	dc400d15 	stw	r17,52(sp)
   808a4:	a47ff60e 	bge	r20,r17,80880 <___vfprintf_internal_r+0x424>
   808a8:	d9014f17 	ldw	r4,1340(sp)
   808ac:	b00b883a 	mov	r5,r22
   808b0:	d9800c04 	addi	r6,sp,48
   808b4:	d9c15115 	stw	r7,1348(sp)
   808b8:	00804040 	call	80404 <__sprint_r>
   808bc:	d9c15117 	ldw	r7,1348(sp)
   808c0:	10009e1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   808c4:	843ffc04 	addi	r16,r16,-16
   808c8:	dc800e17 	ldw	r18,56(sp)
   808cc:	dc400d17 	ldw	r17,52(sp)
   808d0:	dd401904 	addi	r21,sp,100
   808d4:	9c3fed16 	blt	r19,r16,8088c <___vfprintf_internal_r+0x430>
   808d8:	9425883a 	add	r18,r18,r16
   808dc:	8c400044 	addi	r17,r17,1
   808e0:	008001c4 	movi	r2,7
   808e4:	af000015 	stw	fp,0(r21)
   808e8:	ac000115 	stw	r16,4(r21)
   808ec:	dc800e15 	stw	r18,56(sp)
   808f0:	dc400d15 	stw	r17,52(sp)
   808f4:	1441f516 	blt	r2,r17,810cc <___vfprintf_internal_r+0xc70>
   808f8:	ad400204 	addi	r21,r21,8
   808fc:	00000206 	br	80908 <___vfprintf_internal_r+0x4ac>
   80900:	dc800e17 	ldw	r18,56(sp)
   80904:	dc400d17 	ldw	r17,52(sp)
   80908:	d8800407 	ldb	r2,16(sp)
   8090c:	10000b26 	beq	r2,zero,8093c <___vfprintf_internal_r+0x4e0>
   80910:	00800044 	movi	r2,1
   80914:	94800044 	addi	r18,r18,1
   80918:	8c400044 	addi	r17,r17,1
   8091c:	a8800115 	stw	r2,4(r21)
   80920:	d8c00404 	addi	r3,sp,16
   80924:	008001c4 	movi	r2,7
   80928:	a8c00015 	stw	r3,0(r21)
   8092c:	dc800e15 	stw	r18,56(sp)
   80930:	dc400d15 	stw	r17,52(sp)
   80934:	1441da16 	blt	r2,r17,810a0 <___vfprintf_internal_r+0xc44>
   80938:	ad400204 	addi	r21,r21,8
   8093c:	d9015017 	ldw	r4,1344(sp)
   80940:	20000b1e 	bne	r4,zero,80970 <___vfprintf_internal_r+0x514>
   80944:	d8800444 	addi	r2,sp,17
   80948:	94800084 	addi	r18,r18,2
   8094c:	8c400044 	addi	r17,r17,1
   80950:	a8800015 	stw	r2,0(r21)
   80954:	00c00084 	movi	r3,2
   80958:	008001c4 	movi	r2,7
   8095c:	a8c00115 	stw	r3,4(r21)
   80960:	dc800e15 	stw	r18,56(sp)
   80964:	dc400d15 	stw	r17,52(sp)
   80968:	1441c216 	blt	r2,r17,81074 <___vfprintf_internal_r+0xc18>
   8096c:	ad400204 	addi	r21,r21,8
   80970:	d9414e17 	ldw	r5,1336(sp)
   80974:	00802004 	movi	r2,128
   80978:	2880b126 	beq	r5,r2,80c40 <___vfprintf_internal_r+0x7e4>
   8097c:	d8c14617 	ldw	r3,1304(sp)
   80980:	19e1c83a 	sub	r16,r3,r7
   80984:	0400260e 	bge	zero,r16,80a20 <___vfprintf_internal_r+0x5c4>
   80988:	00800404 	movi	r2,16
   8098c:	1403cf0e 	bge	r2,r16,818cc <___vfprintf_internal_r+0x1470>
   80990:	1027883a 	mov	r19,r2
   80994:	07000274 	movhi	fp,9
   80998:	e731a084 	addi	fp,fp,-14718
   8099c:	050001c4 	movi	r20,7
   809a0:	00000306 	br	809b0 <___vfprintf_internal_r+0x554>
   809a4:	843ffc04 	addi	r16,r16,-16
   809a8:	ad400204 	addi	r21,r21,8
   809ac:	9c00130e 	bge	r19,r16,809fc <___vfprintf_internal_r+0x5a0>
   809b0:	94800404 	addi	r18,r18,16
   809b4:	8c400044 	addi	r17,r17,1
   809b8:	af000015 	stw	fp,0(r21)
   809bc:	acc00115 	stw	r19,4(r21)
   809c0:	dc800e15 	stw	r18,56(sp)
   809c4:	dc400d15 	stw	r17,52(sp)
   809c8:	a47ff60e 	bge	r20,r17,809a4 <___vfprintf_internal_r+0x548>
   809cc:	d9014f17 	ldw	r4,1340(sp)
   809d0:	b00b883a 	mov	r5,r22
   809d4:	d9800c04 	addi	r6,sp,48
   809d8:	d9c15115 	stw	r7,1348(sp)
   809dc:	00804040 	call	80404 <__sprint_r>
   809e0:	d9c15117 	ldw	r7,1348(sp)
   809e4:	1000551e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   809e8:	843ffc04 	addi	r16,r16,-16
   809ec:	dc800e17 	ldw	r18,56(sp)
   809f0:	dc400d17 	ldw	r17,52(sp)
   809f4:	dd401904 	addi	r21,sp,100
   809f8:	9c3fed16 	blt	r19,r16,809b0 <___vfprintf_internal_r+0x554>
   809fc:	9425883a 	add	r18,r18,r16
   80a00:	8c400044 	addi	r17,r17,1
   80a04:	008001c4 	movi	r2,7
   80a08:	af000015 	stw	fp,0(r21)
   80a0c:	ac000115 	stw	r16,4(r21)
   80a10:	dc800e15 	stw	r18,56(sp)
   80a14:	dc400d15 	stw	r17,52(sp)
   80a18:	14418216 	blt	r2,r17,81024 <___vfprintf_internal_r+0xbc8>
   80a1c:	ad400204 	addi	r21,r21,8
   80a20:	d9014c17 	ldw	r4,1328(sp)
   80a24:	2080400c 	andi	r2,r4,256
   80a28:	10004a1e 	bne	r2,zero,80b54 <___vfprintf_internal_r+0x6f8>
   80a2c:	d9414117 	ldw	r5,1284(sp)
   80a30:	91e5883a 	add	r18,r18,r7
   80a34:	8c400044 	addi	r17,r17,1
   80a38:	008001c4 	movi	r2,7
   80a3c:	a9400015 	stw	r5,0(r21)
   80a40:	a9c00115 	stw	r7,4(r21)
   80a44:	dc800e15 	stw	r18,56(sp)
   80a48:	dc400d15 	stw	r17,52(sp)
   80a4c:	14416716 	blt	r2,r17,80fec <___vfprintf_internal_r+0xb90>
   80a50:	a8c00204 	addi	r3,r21,8
   80a54:	d9814c17 	ldw	r6,1328(sp)
   80a58:	3080010c 	andi	r2,r6,4
   80a5c:	10002826 	beq	r2,zero,80b00 <___vfprintf_internal_r+0x6a4>
   80a60:	d8814a17 	ldw	r2,1320(sp)
   80a64:	d9014517 	ldw	r4,1300(sp)
   80a68:	1121c83a 	sub	r16,r2,r4
   80a6c:	0400240e 	bge	zero,r16,80b00 <___vfprintf_internal_r+0x6a4>
   80a70:	00800404 	movi	r2,16
   80a74:	1404550e 	bge	r2,r16,81bcc <___vfprintf_internal_r+0x1770>
   80a78:	dc400d17 	ldw	r17,52(sp)
   80a7c:	1027883a 	mov	r19,r2
   80a80:	07000274 	movhi	fp,9
   80a84:	e731a484 	addi	fp,fp,-14702
   80a88:	050001c4 	movi	r20,7
   80a8c:	00000306 	br	80a9c <___vfprintf_internal_r+0x640>
   80a90:	843ffc04 	addi	r16,r16,-16
   80a94:	18c00204 	addi	r3,r3,8
   80a98:	9c00110e 	bge	r19,r16,80ae0 <___vfprintf_internal_r+0x684>
   80a9c:	94800404 	addi	r18,r18,16
   80aa0:	8c400044 	addi	r17,r17,1
   80aa4:	1f000015 	stw	fp,0(r3)
   80aa8:	1cc00115 	stw	r19,4(r3)
   80aac:	dc800e15 	stw	r18,56(sp)
   80ab0:	dc400d15 	stw	r17,52(sp)
   80ab4:	a47ff60e 	bge	r20,r17,80a90 <___vfprintf_internal_r+0x634>
   80ab8:	d9014f17 	ldw	r4,1340(sp)
   80abc:	b00b883a 	mov	r5,r22
   80ac0:	d9800c04 	addi	r6,sp,48
   80ac4:	00804040 	call	80404 <__sprint_r>
   80ac8:	10001c1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   80acc:	843ffc04 	addi	r16,r16,-16
   80ad0:	dc800e17 	ldw	r18,56(sp)
   80ad4:	dc400d17 	ldw	r17,52(sp)
   80ad8:	d8c01904 	addi	r3,sp,100
   80adc:	9c3fef16 	blt	r19,r16,80a9c <___vfprintf_internal_r+0x640>
   80ae0:	9425883a 	add	r18,r18,r16
   80ae4:	8c400044 	addi	r17,r17,1
   80ae8:	008001c4 	movi	r2,7
   80aec:	1f000015 	stw	fp,0(r3)
   80af0:	1c000115 	stw	r16,4(r3)
   80af4:	dc800e15 	stw	r18,56(sp)
   80af8:	dc400d15 	stw	r17,52(sp)
   80afc:	1440cb16 	blt	r2,r17,80e2c <___vfprintf_internal_r+0x9d0>
   80b00:	d8814a17 	ldw	r2,1320(sp)
   80b04:	d9414517 	ldw	r5,1300(sp)
   80b08:	1140010e 	bge	r2,r5,80b10 <___vfprintf_internal_r+0x6b4>
   80b0c:	2805883a 	mov	r2,r5
   80b10:	d9814b17 	ldw	r6,1324(sp)
   80b14:	308d883a 	add	r6,r6,r2
   80b18:	d9814b15 	stw	r6,1324(sp)
   80b1c:	90013b1e 	bne	r18,zero,8100c <___vfprintf_internal_r+0xbb0>
   80b20:	d9c14017 	ldw	r7,1280(sp)
   80b24:	dd401904 	addi	r21,sp,100
   80b28:	d8000d15 	stw	zero,52(sp)
   80b2c:	003ea706 	br	805cc <___vfprintf_internal_r+0x170>
   80b30:	d8800e17 	ldw	r2,56(sp)
   80b34:	1005451e 	bne	r2,zero,8204c <___vfprintf_internal_r+0x1bf0>
   80b38:	d8000d15 	stw	zero,52(sp)
   80b3c:	b080030b 	ldhu	r2,12(r22)
   80b40:	1080100c 	andi	r2,r2,64
   80b44:	103e8726 	beq	r2,zero,80564 <___vfprintf_internal_r+0x108>
   80b48:	00bfffc4 	movi	r2,-1
   80b4c:	d8814b15 	stw	r2,1324(sp)
   80b50:	003e8406 	br	80564 <___vfprintf_internal_r+0x108>
   80b54:	d9814d17 	ldw	r6,1332(sp)
   80b58:	00801944 	movi	r2,101
   80b5c:	11806e16 	blt	r2,r6,80d18 <___vfprintf_internal_r+0x8bc>
   80b60:	d9414717 	ldw	r5,1308(sp)
   80b64:	00c00044 	movi	r3,1
   80b68:	1943490e 	bge	r3,r5,81890 <___vfprintf_internal_r+0x1434>
   80b6c:	d8814117 	ldw	r2,1284(sp)
   80b70:	94800044 	addi	r18,r18,1
   80b74:	8c400044 	addi	r17,r17,1
   80b78:	a8800015 	stw	r2,0(r21)
   80b7c:	008001c4 	movi	r2,7
   80b80:	a8c00115 	stw	r3,4(r21)
   80b84:	dc800e15 	stw	r18,56(sp)
   80b88:	dc400d15 	stw	r17,52(sp)
   80b8c:	1441ca16 	blt	r2,r17,812b8 <___vfprintf_internal_r+0xe5c>
   80b90:	a8c00204 	addi	r3,r21,8
   80b94:	d9014917 	ldw	r4,1316(sp)
   80b98:	00800044 	movi	r2,1
   80b9c:	94800044 	addi	r18,r18,1
   80ba0:	8c400044 	addi	r17,r17,1
   80ba4:	18800115 	stw	r2,4(r3)
   80ba8:	008001c4 	movi	r2,7
   80bac:	19000015 	stw	r4,0(r3)
   80bb0:	dc800e15 	stw	r18,56(sp)
   80bb4:	dc400d15 	stw	r17,52(sp)
   80bb8:	1441b616 	blt	r2,r17,81294 <___vfprintf_internal_r+0xe38>
   80bbc:	1cc00204 	addi	r19,r3,8
   80bc0:	d9014217 	ldw	r4,1288(sp)
   80bc4:	d9414317 	ldw	r5,1292(sp)
   80bc8:	000d883a 	mov	r6,zero
   80bcc:	000f883a 	mov	r7,zero
   80bd0:	0088f100 	call	88f10 <__nedf2>
   80bd4:	10017426 	beq	r2,zero,811a8 <___vfprintf_internal_r+0xd4c>
   80bd8:	d9414717 	ldw	r5,1308(sp)
   80bdc:	d9814117 	ldw	r6,1284(sp)
   80be0:	8c400044 	addi	r17,r17,1
   80be4:	2c85883a 	add	r2,r5,r18
   80be8:	14bfffc4 	addi	r18,r2,-1
   80bec:	28bfffc4 	addi	r2,r5,-1
   80bf0:	30c00044 	addi	r3,r6,1
   80bf4:	98800115 	stw	r2,4(r19)
   80bf8:	008001c4 	movi	r2,7
   80bfc:	98c00015 	stw	r3,0(r19)
   80c00:	dc800e15 	stw	r18,56(sp)
   80c04:	dc400d15 	stw	r17,52(sp)
   80c08:	14418e16 	blt	r2,r17,81244 <___vfprintf_internal_r+0xde8>
   80c0c:	9cc00204 	addi	r19,r19,8
   80c10:	d9414817 	ldw	r5,1312(sp)
   80c14:	d8800804 	addi	r2,sp,32
   80c18:	8c400044 	addi	r17,r17,1
   80c1c:	9165883a 	add	r18,r18,r5
   80c20:	98800015 	stw	r2,0(r19)
   80c24:	008001c4 	movi	r2,7
   80c28:	99400115 	stw	r5,4(r19)
   80c2c:	dc800e15 	stw	r18,56(sp)
   80c30:	dc400d15 	stw	r17,52(sp)
   80c34:	1440ed16 	blt	r2,r17,80fec <___vfprintf_internal_r+0xb90>
   80c38:	98c00204 	addi	r3,r19,8
   80c3c:	003f8506 	br	80a54 <___vfprintf_internal_r+0x5f8>
   80c40:	d9814a17 	ldw	r6,1320(sp)
   80c44:	d8814517 	ldw	r2,1300(sp)
   80c48:	30a1c83a 	sub	r16,r6,r2
   80c4c:	043f4b0e 	bge	zero,r16,8097c <___vfprintf_internal_r+0x520>
   80c50:	00800404 	movi	r2,16
   80c54:	14043a0e 	bge	r2,r16,81d40 <___vfprintf_internal_r+0x18e4>
   80c58:	1027883a 	mov	r19,r2
   80c5c:	07000274 	movhi	fp,9
   80c60:	e731a084 	addi	fp,fp,-14718
   80c64:	050001c4 	movi	r20,7
   80c68:	00000306 	br	80c78 <___vfprintf_internal_r+0x81c>
   80c6c:	843ffc04 	addi	r16,r16,-16
   80c70:	ad400204 	addi	r21,r21,8
   80c74:	9c00130e 	bge	r19,r16,80cc4 <___vfprintf_internal_r+0x868>
   80c78:	94800404 	addi	r18,r18,16
   80c7c:	8c400044 	addi	r17,r17,1
   80c80:	af000015 	stw	fp,0(r21)
   80c84:	acc00115 	stw	r19,4(r21)
   80c88:	dc800e15 	stw	r18,56(sp)
   80c8c:	dc400d15 	stw	r17,52(sp)
   80c90:	a47ff60e 	bge	r20,r17,80c6c <___vfprintf_internal_r+0x810>
   80c94:	d9014f17 	ldw	r4,1340(sp)
   80c98:	b00b883a 	mov	r5,r22
   80c9c:	d9800c04 	addi	r6,sp,48
   80ca0:	d9c15115 	stw	r7,1348(sp)
   80ca4:	00804040 	call	80404 <__sprint_r>
   80ca8:	d9c15117 	ldw	r7,1348(sp)
   80cac:	103fa31e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   80cb0:	843ffc04 	addi	r16,r16,-16
   80cb4:	dc800e17 	ldw	r18,56(sp)
   80cb8:	dc400d17 	ldw	r17,52(sp)
   80cbc:	dd401904 	addi	r21,sp,100
   80cc0:	9c3fed16 	blt	r19,r16,80c78 <___vfprintf_internal_r+0x81c>
   80cc4:	9425883a 	add	r18,r18,r16
   80cc8:	8c400044 	addi	r17,r17,1
   80ccc:	008001c4 	movi	r2,7
   80cd0:	af000015 	stw	fp,0(r21)
   80cd4:	ac000115 	stw	r16,4(r21)
   80cd8:	dc800e15 	stw	r18,56(sp)
   80cdc:	dc400d15 	stw	r17,52(sp)
   80ce0:	14416116 	blt	r2,r17,81268 <___vfprintf_internal_r+0xe0c>
   80ce4:	ad400204 	addi	r21,r21,8
   80ce8:	003f2406 	br	8097c <___vfprintf_internal_r+0x520>
   80cec:	d9014f17 	ldw	r4,1340(sp)
   80cf0:	0083f100 	call	83f10 <__sinit>
   80cf4:	d9c15117 	ldw	r7,1348(sp)
   80cf8:	003def06 	br	804b8 <___vfprintf_internal_r+0x5c>
   80cfc:	d9014f17 	ldw	r4,1340(sp)
   80d00:	b00b883a 	mov	r5,r22
   80d04:	d9c15115 	stw	r7,1348(sp)
   80d08:	00823440 	call	82344 <__swsetup_r>
   80d0c:	d9c15117 	ldw	r7,1348(sp)
   80d10:	103dee26 	beq	r2,zero,804cc <___vfprintf_internal_r+0x70>
   80d14:	003f8c06 	br	80b48 <___vfprintf_internal_r+0x6ec>
   80d18:	d9014217 	ldw	r4,1288(sp)
   80d1c:	d9414317 	ldw	r5,1292(sp)
   80d20:	000d883a 	mov	r6,zero
   80d24:	000f883a 	mov	r7,zero
   80d28:	0088e880 	call	88e88 <__eqdf2>
   80d2c:	1000f21e 	bne	r2,zero,810f8 <___vfprintf_internal_r+0xc9c>
   80d30:	00800274 	movhi	r2,9
   80d34:	10b1a004 	addi	r2,r2,-14720
   80d38:	94800044 	addi	r18,r18,1
   80d3c:	8c400044 	addi	r17,r17,1
   80d40:	a8800015 	stw	r2,0(r21)
   80d44:	00c00044 	movi	r3,1
   80d48:	008001c4 	movi	r2,7
   80d4c:	a8c00115 	stw	r3,4(r21)
   80d50:	dc800e15 	stw	r18,56(sp)
   80d54:	dc400d15 	stw	r17,52(sp)
   80d58:	14430016 	blt	r2,r17,8195c <___vfprintf_internal_r+0x1500>
   80d5c:	a8c00204 	addi	r3,r21,8
   80d60:	d8800517 	ldw	r2,20(sp)
   80d64:	d9014717 	ldw	r4,1308(sp)
   80d68:	11015c0e 	bge	r2,r4,812dc <___vfprintf_internal_r+0xe80>
   80d6c:	dc400d17 	ldw	r17,52(sp)
   80d70:	d9814917 	ldw	r6,1316(sp)
   80d74:	00800044 	movi	r2,1
   80d78:	94800044 	addi	r18,r18,1
   80d7c:	8c400044 	addi	r17,r17,1
   80d80:	18800115 	stw	r2,4(r3)
   80d84:	008001c4 	movi	r2,7
   80d88:	19800015 	stw	r6,0(r3)
   80d8c:	dc800e15 	stw	r18,56(sp)
   80d90:	dc400d15 	stw	r17,52(sp)
   80d94:	14431616 	blt	r2,r17,819f0 <___vfprintf_internal_r+0x1594>
   80d98:	18c00204 	addi	r3,r3,8
   80d9c:	d8814717 	ldw	r2,1308(sp)
   80da0:	143fffc4 	addi	r16,r2,-1
   80da4:	043f2b0e 	bge	zero,r16,80a54 <___vfprintf_internal_r+0x5f8>
   80da8:	00800404 	movi	r2,16
   80dac:	1402a80e 	bge	r2,r16,81850 <___vfprintf_internal_r+0x13f4>
   80db0:	dc400d17 	ldw	r17,52(sp)
   80db4:	1027883a 	mov	r19,r2
   80db8:	07000274 	movhi	fp,9
   80dbc:	e731a084 	addi	fp,fp,-14718
   80dc0:	050001c4 	movi	r20,7
   80dc4:	00000306 	br	80dd4 <___vfprintf_internal_r+0x978>
   80dc8:	18c00204 	addi	r3,r3,8
   80dcc:	843ffc04 	addi	r16,r16,-16
   80dd0:	9c02a20e 	bge	r19,r16,8185c <___vfprintf_internal_r+0x1400>
   80dd4:	94800404 	addi	r18,r18,16
   80dd8:	8c400044 	addi	r17,r17,1
   80ddc:	1f000015 	stw	fp,0(r3)
   80de0:	1cc00115 	stw	r19,4(r3)
   80de4:	dc800e15 	stw	r18,56(sp)
   80de8:	dc400d15 	stw	r17,52(sp)
   80dec:	a47ff60e 	bge	r20,r17,80dc8 <___vfprintf_internal_r+0x96c>
   80df0:	d9014f17 	ldw	r4,1340(sp)
   80df4:	b00b883a 	mov	r5,r22
   80df8:	d9800c04 	addi	r6,sp,48
   80dfc:	00804040 	call	80404 <__sprint_r>
   80e00:	103f4e1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   80e04:	dc800e17 	ldw	r18,56(sp)
   80e08:	dc400d17 	ldw	r17,52(sp)
   80e0c:	d8c01904 	addi	r3,sp,100
   80e10:	003fee06 	br	80dcc <___vfprintf_internal_r+0x970>
   80e14:	d8802c0b 	ldhu	r2,176(sp)
   80e18:	00ffffc4 	movi	r3,-1
   80e1c:	d8c14b15 	stw	r3,1324(sp)
   80e20:	1080100c 	andi	r2,r2,64
   80e24:	103dcc1e 	bne	r2,zero,80558 <___vfprintf_internal_r+0xfc>
   80e28:	003dce06 	br	80564 <___vfprintf_internal_r+0x108>
   80e2c:	d9014f17 	ldw	r4,1340(sp)
   80e30:	b00b883a 	mov	r5,r22
   80e34:	d9800c04 	addi	r6,sp,48
   80e38:	00804040 	call	80404 <__sprint_r>
   80e3c:	103f3f1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   80e40:	dc800e17 	ldw	r18,56(sp)
   80e44:	003f2e06 	br	80b00 <___vfprintf_internal_r+0x6a4>
   80e48:	d9414c17 	ldw	r5,1328(sp)
   80e4c:	29400414 	ori	r5,r5,16
   80e50:	d9414c15 	stw	r5,1328(sp)
   80e54:	d9814c17 	ldw	r6,1328(sp)
   80e58:	3080080c 	andi	r2,r6,32
   80e5c:	10014f1e 	bne	r2,zero,8139c <___vfprintf_internal_r+0xf40>
   80e60:	d8c14c17 	ldw	r3,1328(sp)
   80e64:	1880040c 	andi	r2,r3,16
   80e68:	1002f01e 	bne	r2,zero,81a2c <___vfprintf_internal_r+0x15d0>
   80e6c:	d9014c17 	ldw	r4,1328(sp)
   80e70:	2080100c 	andi	r2,r4,64
   80e74:	1002ed26 	beq	r2,zero,81a2c <___vfprintf_internal_r+0x15d0>
   80e78:	3880000f 	ldh	r2,0(r7)
   80e7c:	39c00104 	addi	r7,r7,4
   80e80:	d9c14015 	stw	r7,1280(sp)
   80e84:	1023d7fa 	srai	r17,r2,31
   80e88:	1021883a 	mov	r16,r2
   80e8c:	88037816 	blt	r17,zero,81c70 <___vfprintf_internal_r+0x1814>
   80e90:	01000044 	movi	r4,1
   80e94:	98000416 	blt	r19,zero,80ea8 <___vfprintf_internal_r+0xa4c>
   80e98:	d8c14c17 	ldw	r3,1328(sp)
   80e9c:	00bfdfc4 	movi	r2,-129
   80ea0:	1886703a 	and	r3,r3,r2
   80ea4:	d8c14c15 	stw	r3,1328(sp)
   80ea8:	8444b03a 	or	r2,r16,r17
   80eac:	10022c1e 	bne	r2,zero,81760 <___vfprintf_internal_r+0x1304>
   80eb0:	98022b1e 	bne	r19,zero,81760 <___vfprintf_internal_r+0x1304>
   80eb4:	20803fcc 	andi	r2,r4,255
   80eb8:	1002a126 	beq	r2,zero,81940 <___vfprintf_internal_r+0x14e4>
   80ebc:	d8c01904 	addi	r3,sp,100
   80ec0:	dd000f04 	addi	r20,sp,60
   80ec4:	d8c14115 	stw	r3,1284(sp)
   80ec8:	d8c14117 	ldw	r3,1284(sp)
   80ecc:	dcc14515 	stw	r19,1300(sp)
   80ed0:	a0c5c83a 	sub	r2,r20,r3
   80ed4:	11c00a04 	addi	r7,r2,40
   80ed8:	99c0010e 	bge	r19,r7,80ee0 <___vfprintf_internal_r+0xa84>
   80edc:	d9c14515 	stw	r7,1300(sp)
   80ee0:	dcc14615 	stw	r19,1304(sp)
   80ee4:	d8800407 	ldb	r2,16(sp)
   80ee8:	103e4c26 	beq	r2,zero,8081c <___vfprintf_internal_r+0x3c0>
   80eec:	d8814517 	ldw	r2,1300(sp)
   80ef0:	10800044 	addi	r2,r2,1
   80ef4:	d8814515 	stw	r2,1300(sp)
   80ef8:	003e4806 	br	8081c <___vfprintf_internal_r+0x3c0>
   80efc:	d9814c17 	ldw	r6,1328(sp)
   80f00:	31800414 	ori	r6,r6,16
   80f04:	d9814c15 	stw	r6,1328(sp)
   80f08:	d8c14c17 	ldw	r3,1328(sp)
   80f0c:	1880080c 	andi	r2,r3,32
   80f10:	1001271e 	bne	r2,zero,813b0 <___vfprintf_internal_r+0xf54>
   80f14:	d9414c17 	ldw	r5,1328(sp)
   80f18:	2880040c 	andi	r2,r5,16
   80f1c:	1002bc1e 	bne	r2,zero,81a10 <___vfprintf_internal_r+0x15b4>
   80f20:	d9814c17 	ldw	r6,1328(sp)
   80f24:	3080100c 	andi	r2,r6,64
   80f28:	1002b926 	beq	r2,zero,81a10 <___vfprintf_internal_r+0x15b4>
   80f2c:	3c00000b 	ldhu	r16,0(r7)
   80f30:	0009883a 	mov	r4,zero
   80f34:	39c00104 	addi	r7,r7,4
   80f38:	0023883a 	mov	r17,zero
   80f3c:	d9c14015 	stw	r7,1280(sp)
   80f40:	d8000405 	stb	zero,16(sp)
   80f44:	003fd306 	br	80e94 <___vfprintf_internal_r+0xa38>
   80f48:	d9014c17 	ldw	r4,1328(sp)
   80f4c:	21000414 	ori	r4,r4,16
   80f50:	d9014c15 	stw	r4,1328(sp)
   80f54:	d9414c17 	ldw	r5,1328(sp)
   80f58:	2880080c 	andi	r2,r5,32
   80f5c:	1001081e 	bne	r2,zero,81380 <___vfprintf_internal_r+0xf24>
   80f60:	d8c14c17 	ldw	r3,1328(sp)
   80f64:	1880040c 	andi	r2,r3,16
   80f68:	1002b61e 	bne	r2,zero,81a44 <___vfprintf_internal_r+0x15e8>
   80f6c:	d9014c17 	ldw	r4,1328(sp)
   80f70:	2080100c 	andi	r2,r4,64
   80f74:	1002b326 	beq	r2,zero,81a44 <___vfprintf_internal_r+0x15e8>
   80f78:	3c00000b 	ldhu	r16,0(r7)
   80f7c:	01000044 	movi	r4,1
   80f80:	39c00104 	addi	r7,r7,4
   80f84:	0023883a 	mov	r17,zero
   80f88:	d9c14015 	stw	r7,1280(sp)
   80f8c:	d8000405 	stb	zero,16(sp)
   80f90:	003fc006 	br	80e94 <___vfprintf_internal_r+0xa38>
   80f94:	d9014f17 	ldw	r4,1340(sp)
   80f98:	b00b883a 	mov	r5,r22
   80f9c:	d9800c04 	addi	r6,sp,48
   80fa0:	00804040 	call	80404 <__sprint_r>
   80fa4:	103ee51e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   80fa8:	dc800e17 	ldw	r18,56(sp)
   80fac:	d8c01904 	addi	r3,sp,100
   80fb0:	d9814c17 	ldw	r6,1328(sp)
   80fb4:	3080004c 	andi	r2,r6,1
   80fb8:	1005003a 	cmpeq	r2,r2,zero
   80fbc:	103ea51e 	bne	r2,zero,80a54 <___vfprintf_internal_r+0x5f8>
   80fc0:	00800044 	movi	r2,1
   80fc4:	dc400d17 	ldw	r17,52(sp)
   80fc8:	18800115 	stw	r2,4(r3)
   80fcc:	d8814917 	ldw	r2,1316(sp)
   80fd0:	94800044 	addi	r18,r18,1
   80fd4:	8c400044 	addi	r17,r17,1
   80fd8:	18800015 	stw	r2,0(r3)
   80fdc:	008001c4 	movi	r2,7
   80fe0:	dc800e15 	stw	r18,56(sp)
   80fe4:	dc400d15 	stw	r17,52(sp)
   80fe8:	1442240e 	bge	r2,r17,8187c <___vfprintf_internal_r+0x1420>
   80fec:	d9014f17 	ldw	r4,1340(sp)
   80ff0:	b00b883a 	mov	r5,r22
   80ff4:	d9800c04 	addi	r6,sp,48
   80ff8:	00804040 	call	80404 <__sprint_r>
   80ffc:	103ecf1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81000:	dc800e17 	ldw	r18,56(sp)
   81004:	d8c01904 	addi	r3,sp,100
   81008:	003e9206 	br	80a54 <___vfprintf_internal_r+0x5f8>
   8100c:	d9014f17 	ldw	r4,1340(sp)
   81010:	b00b883a 	mov	r5,r22
   81014:	d9800c04 	addi	r6,sp,48
   81018:	00804040 	call	80404 <__sprint_r>
   8101c:	103ec026 	beq	r2,zero,80b20 <___vfprintf_internal_r+0x6c4>
   81020:	003ec606 	br	80b3c <___vfprintf_internal_r+0x6e0>
   81024:	d9014f17 	ldw	r4,1340(sp)
   81028:	b00b883a 	mov	r5,r22
   8102c:	d9800c04 	addi	r6,sp,48
   81030:	d9c15115 	stw	r7,1348(sp)
   81034:	00804040 	call	80404 <__sprint_r>
   81038:	d9c15117 	ldw	r7,1348(sp)
   8103c:	103ebf1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81040:	dc800e17 	ldw	r18,56(sp)
   81044:	dc400d17 	ldw	r17,52(sp)
   81048:	dd401904 	addi	r21,sp,100
   8104c:	003e7406 	br	80a20 <___vfprintf_internal_r+0x5c4>
   81050:	d9014f17 	ldw	r4,1340(sp)
   81054:	b00b883a 	mov	r5,r22
   81058:	d9800c04 	addi	r6,sp,48
   8105c:	d9c15115 	stw	r7,1348(sp)
   81060:	00804040 	call	80404 <__sprint_r>
   81064:	d9c15117 	ldw	r7,1348(sp)
   81068:	103eb41e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   8106c:	dd401904 	addi	r21,sp,100
   81070:	003d6d06 	br	80628 <___vfprintf_internal_r+0x1cc>
   81074:	d9014f17 	ldw	r4,1340(sp)
   81078:	b00b883a 	mov	r5,r22
   8107c:	d9800c04 	addi	r6,sp,48
   81080:	d9c15115 	stw	r7,1348(sp)
   81084:	00804040 	call	80404 <__sprint_r>
   81088:	d9c15117 	ldw	r7,1348(sp)
   8108c:	103eab1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81090:	dc800e17 	ldw	r18,56(sp)
   81094:	dc400d17 	ldw	r17,52(sp)
   81098:	dd401904 	addi	r21,sp,100
   8109c:	003e3406 	br	80970 <___vfprintf_internal_r+0x514>
   810a0:	d9014f17 	ldw	r4,1340(sp)
   810a4:	b00b883a 	mov	r5,r22
   810a8:	d9800c04 	addi	r6,sp,48
   810ac:	d9c15115 	stw	r7,1348(sp)
   810b0:	00804040 	call	80404 <__sprint_r>
   810b4:	d9c15117 	ldw	r7,1348(sp)
   810b8:	103ea01e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   810bc:	dc800e17 	ldw	r18,56(sp)
   810c0:	dc400d17 	ldw	r17,52(sp)
   810c4:	dd401904 	addi	r21,sp,100
   810c8:	003e1c06 	br	8093c <___vfprintf_internal_r+0x4e0>
   810cc:	d9014f17 	ldw	r4,1340(sp)
   810d0:	b00b883a 	mov	r5,r22
   810d4:	d9800c04 	addi	r6,sp,48
   810d8:	d9c15115 	stw	r7,1348(sp)
   810dc:	00804040 	call	80404 <__sprint_r>
   810e0:	d9c15117 	ldw	r7,1348(sp)
   810e4:	103e951e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   810e8:	dc800e17 	ldw	r18,56(sp)
   810ec:	dc400d17 	ldw	r17,52(sp)
   810f0:	dd401904 	addi	r21,sp,100
   810f4:	003e0406 	br	80908 <___vfprintf_internal_r+0x4ac>
   810f8:	d9000517 	ldw	r4,20(sp)
   810fc:	0102580e 	bge	zero,r4,81a60 <___vfprintf_internal_r+0x1604>
   81100:	d9814717 	ldw	r6,1308(sp)
   81104:	21807a16 	blt	r4,r6,812f0 <___vfprintf_internal_r+0xe94>
   81108:	d8814117 	ldw	r2,1284(sp)
   8110c:	91a5883a 	add	r18,r18,r6
   81110:	8c400044 	addi	r17,r17,1
   81114:	a8800015 	stw	r2,0(r21)
   81118:	008001c4 	movi	r2,7
   8111c:	a9800115 	stw	r6,4(r21)
   81120:	dc800e15 	stw	r18,56(sp)
   81124:	dc400d15 	stw	r17,52(sp)
   81128:	1442fc16 	blt	r2,r17,81d1c <___vfprintf_internal_r+0x18c0>
   8112c:	a8c00204 	addi	r3,r21,8
   81130:	d9414717 	ldw	r5,1308(sp)
   81134:	2161c83a 	sub	r16,r4,r5
   81138:	043f9d0e 	bge	zero,r16,80fb0 <___vfprintf_internal_r+0xb54>
   8113c:	00800404 	movi	r2,16
   81140:	1402190e 	bge	r2,r16,819a8 <___vfprintf_internal_r+0x154c>
   81144:	dc400d17 	ldw	r17,52(sp)
   81148:	1027883a 	mov	r19,r2
   8114c:	07000274 	movhi	fp,9
   81150:	e731a084 	addi	fp,fp,-14718
   81154:	050001c4 	movi	r20,7
   81158:	00000306 	br	81168 <___vfprintf_internal_r+0xd0c>
   8115c:	18c00204 	addi	r3,r3,8
   81160:	843ffc04 	addi	r16,r16,-16
   81164:	9c02130e 	bge	r19,r16,819b4 <___vfprintf_internal_r+0x1558>
   81168:	94800404 	addi	r18,r18,16
   8116c:	8c400044 	addi	r17,r17,1
   81170:	1f000015 	stw	fp,0(r3)
   81174:	1cc00115 	stw	r19,4(r3)
   81178:	dc800e15 	stw	r18,56(sp)
   8117c:	dc400d15 	stw	r17,52(sp)
   81180:	a47ff60e 	bge	r20,r17,8115c <___vfprintf_internal_r+0xd00>
   81184:	d9014f17 	ldw	r4,1340(sp)
   81188:	b00b883a 	mov	r5,r22
   8118c:	d9800c04 	addi	r6,sp,48
   81190:	00804040 	call	80404 <__sprint_r>
   81194:	103e691e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81198:	dc800e17 	ldw	r18,56(sp)
   8119c:	dc400d17 	ldw	r17,52(sp)
   811a0:	d8c01904 	addi	r3,sp,100
   811a4:	003fee06 	br	81160 <___vfprintf_internal_r+0xd04>
   811a8:	d8814717 	ldw	r2,1308(sp)
   811ac:	143fffc4 	addi	r16,r2,-1
   811b0:	043e970e 	bge	zero,r16,80c10 <___vfprintf_internal_r+0x7b4>
   811b4:	00800404 	movi	r2,16
   811b8:	1400180e 	bge	r2,r16,8121c <___vfprintf_internal_r+0xdc0>
   811bc:	1029883a 	mov	r20,r2
   811c0:	07000274 	movhi	fp,9
   811c4:	e731a084 	addi	fp,fp,-14718
   811c8:	054001c4 	movi	r21,7
   811cc:	00000306 	br	811dc <___vfprintf_internal_r+0xd80>
   811d0:	9cc00204 	addi	r19,r19,8
   811d4:	843ffc04 	addi	r16,r16,-16
   811d8:	a400120e 	bge	r20,r16,81224 <___vfprintf_internal_r+0xdc8>
   811dc:	94800404 	addi	r18,r18,16
   811e0:	8c400044 	addi	r17,r17,1
   811e4:	9f000015 	stw	fp,0(r19)
   811e8:	9d000115 	stw	r20,4(r19)
   811ec:	dc800e15 	stw	r18,56(sp)
   811f0:	dc400d15 	stw	r17,52(sp)
   811f4:	ac7ff60e 	bge	r21,r17,811d0 <___vfprintf_internal_r+0xd74>
   811f8:	d9014f17 	ldw	r4,1340(sp)
   811fc:	b00b883a 	mov	r5,r22
   81200:	d9800c04 	addi	r6,sp,48
   81204:	00804040 	call	80404 <__sprint_r>
   81208:	103e4c1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   8120c:	dc800e17 	ldw	r18,56(sp)
   81210:	dc400d17 	ldw	r17,52(sp)
   81214:	dcc01904 	addi	r19,sp,100
   81218:	003fee06 	br	811d4 <___vfprintf_internal_r+0xd78>
   8121c:	07000274 	movhi	fp,9
   81220:	e731a084 	addi	fp,fp,-14718
   81224:	9425883a 	add	r18,r18,r16
   81228:	8c400044 	addi	r17,r17,1
   8122c:	008001c4 	movi	r2,7
   81230:	9f000015 	stw	fp,0(r19)
   81234:	9c000115 	stw	r16,4(r19)
   81238:	dc800e15 	stw	r18,56(sp)
   8123c:	dc400d15 	stw	r17,52(sp)
   81240:	147e720e 	bge	r2,r17,80c0c <___vfprintf_internal_r+0x7b0>
   81244:	d9014f17 	ldw	r4,1340(sp)
   81248:	b00b883a 	mov	r5,r22
   8124c:	d9800c04 	addi	r6,sp,48
   81250:	00804040 	call	80404 <__sprint_r>
   81254:	103e391e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81258:	dc800e17 	ldw	r18,56(sp)
   8125c:	dc400d17 	ldw	r17,52(sp)
   81260:	dcc01904 	addi	r19,sp,100
   81264:	003e6a06 	br	80c10 <___vfprintf_internal_r+0x7b4>
   81268:	d9014f17 	ldw	r4,1340(sp)
   8126c:	b00b883a 	mov	r5,r22
   81270:	d9800c04 	addi	r6,sp,48
   81274:	d9c15115 	stw	r7,1348(sp)
   81278:	00804040 	call	80404 <__sprint_r>
   8127c:	d9c15117 	ldw	r7,1348(sp)
   81280:	103e2e1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81284:	dc800e17 	ldw	r18,56(sp)
   81288:	dc400d17 	ldw	r17,52(sp)
   8128c:	dd401904 	addi	r21,sp,100
   81290:	003dba06 	br	8097c <___vfprintf_internal_r+0x520>
   81294:	d9014f17 	ldw	r4,1340(sp)
   81298:	b00b883a 	mov	r5,r22
   8129c:	d9800c04 	addi	r6,sp,48
   812a0:	00804040 	call	80404 <__sprint_r>
   812a4:	103e251e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   812a8:	dc800e17 	ldw	r18,56(sp)
   812ac:	dc400d17 	ldw	r17,52(sp)
   812b0:	dcc01904 	addi	r19,sp,100
   812b4:	003e4206 	br	80bc0 <___vfprintf_internal_r+0x764>
   812b8:	d9014f17 	ldw	r4,1340(sp)
   812bc:	b00b883a 	mov	r5,r22
   812c0:	d9800c04 	addi	r6,sp,48
   812c4:	00804040 	call	80404 <__sprint_r>
   812c8:	103e1c1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   812cc:	dc800e17 	ldw	r18,56(sp)
   812d0:	dc400d17 	ldw	r17,52(sp)
   812d4:	d8c01904 	addi	r3,sp,100
   812d8:	003e2e06 	br	80b94 <___vfprintf_internal_r+0x738>
   812dc:	d9414c17 	ldw	r5,1328(sp)
   812e0:	2880004c 	andi	r2,r5,1
   812e4:	1005003a 	cmpeq	r2,r2,zero
   812e8:	103dda1e 	bne	r2,zero,80a54 <___vfprintf_internal_r+0x5f8>
   812ec:	003e9f06 	br	80d6c <___vfprintf_internal_r+0x910>
   812f0:	d8c14117 	ldw	r3,1284(sp)
   812f4:	9125883a 	add	r18,r18,r4
   812f8:	8c400044 	addi	r17,r17,1
   812fc:	008001c4 	movi	r2,7
   81300:	a8c00015 	stw	r3,0(r21)
   81304:	a9000115 	stw	r4,4(r21)
   81308:	dc800e15 	stw	r18,56(sp)
   8130c:	dc400d15 	stw	r17,52(sp)
   81310:	14426c16 	blt	r2,r17,81cc4 <___vfprintf_internal_r+0x1868>
   81314:	a8c00204 	addi	r3,r21,8
   81318:	d9414917 	ldw	r5,1316(sp)
   8131c:	00800044 	movi	r2,1
   81320:	94800044 	addi	r18,r18,1
   81324:	8c400044 	addi	r17,r17,1
   81328:	18800115 	stw	r2,4(r3)
   8132c:	008001c4 	movi	r2,7
   81330:	19400015 	stw	r5,0(r3)
   81334:	dc800e15 	stw	r18,56(sp)
   81338:	dc400d15 	stw	r17,52(sp)
   8133c:	2021883a 	mov	r16,r4
   81340:	14425616 	blt	r2,r17,81c9c <___vfprintf_internal_r+0x1840>
   81344:	19400204 	addi	r5,r3,8
   81348:	d9814717 	ldw	r6,1308(sp)
   8134c:	8c400044 	addi	r17,r17,1
   81350:	dc400d15 	stw	r17,52(sp)
   81354:	3107c83a 	sub	r3,r6,r4
   81358:	d9014117 	ldw	r4,1284(sp)
   8135c:	90e5883a 	add	r18,r18,r3
   81360:	28c00115 	stw	r3,4(r5)
   81364:	8105883a 	add	r2,r16,r4
   81368:	28800015 	stw	r2,0(r5)
   8136c:	008001c4 	movi	r2,7
   81370:	dc800e15 	stw	r18,56(sp)
   81374:	147f1d16 	blt	r2,r17,80fec <___vfprintf_internal_r+0xb90>
   81378:	28c00204 	addi	r3,r5,8
   8137c:	003db506 	br	80a54 <___vfprintf_internal_r+0x5f8>
   81380:	3c000017 	ldw	r16,0(r7)
   81384:	3c400117 	ldw	r17,4(r7)
   81388:	39800204 	addi	r6,r7,8
   8138c:	01000044 	movi	r4,1
   81390:	d9814015 	stw	r6,1280(sp)
   81394:	d8000405 	stb	zero,16(sp)
   81398:	003ebe06 	br	80e94 <___vfprintf_internal_r+0xa38>
   8139c:	3c000017 	ldw	r16,0(r7)
   813a0:	3c400117 	ldw	r17,4(r7)
   813a4:	38800204 	addi	r2,r7,8
   813a8:	d8814015 	stw	r2,1280(sp)
   813ac:	003eb706 	br	80e8c <___vfprintf_internal_r+0xa30>
   813b0:	3c000017 	ldw	r16,0(r7)
   813b4:	3c400117 	ldw	r17,4(r7)
   813b8:	39000204 	addi	r4,r7,8
   813bc:	d9014015 	stw	r4,1280(sp)
   813c0:	0009883a 	mov	r4,zero
   813c4:	d8000405 	stb	zero,16(sp)
   813c8:	003eb206 	br	80e94 <___vfprintf_internal_r+0xa38>
   813cc:	38c00017 	ldw	r3,0(r7)
   813d0:	39c00104 	addi	r7,r7,4
   813d4:	d8c14a15 	stw	r3,1320(sp)
   813d8:	1800d70e 	bge	r3,zero,81738 <___vfprintf_internal_r+0x12dc>
   813dc:	00c7c83a 	sub	r3,zero,r3
   813e0:	d8c14a15 	stw	r3,1320(sp)
   813e4:	d9014c17 	ldw	r4,1328(sp)
   813e8:	b8c00007 	ldb	r3,0(r23)
   813ec:	21000114 	ori	r4,r4,4
   813f0:	d9014c15 	stw	r4,1328(sp)
   813f4:	003c9806 	br	80658 <___vfprintf_internal_r+0x1fc>
   813f8:	d9814c17 	ldw	r6,1328(sp)
   813fc:	3080080c 	andi	r2,r6,32
   81400:	1001f626 	beq	r2,zero,81bdc <___vfprintf_internal_r+0x1780>
   81404:	d9014b17 	ldw	r4,1324(sp)
   81408:	38800017 	ldw	r2,0(r7)
   8140c:	39c00104 	addi	r7,r7,4
   81410:	d9c14015 	stw	r7,1280(sp)
   81414:	2007d7fa 	srai	r3,r4,31
   81418:	d9c14017 	ldw	r7,1280(sp)
   8141c:	11000015 	stw	r4,0(r2)
   81420:	10c00115 	stw	r3,4(r2)
   81424:	003c6906 	br	805cc <___vfprintf_internal_r+0x170>
   81428:	b8c00007 	ldb	r3,0(r23)
   8142c:	00801b04 	movi	r2,108
   81430:	18825526 	beq	r3,r2,81d88 <___vfprintf_internal_r+0x192c>
   81434:	d9414c17 	ldw	r5,1328(sp)
   81438:	29400414 	ori	r5,r5,16
   8143c:	d9414c15 	stw	r5,1328(sp)
   81440:	003c8506 	br	80658 <___vfprintf_internal_r+0x1fc>
   81444:	d9814c17 	ldw	r6,1328(sp)
   81448:	b8c00007 	ldb	r3,0(r23)
   8144c:	31800814 	ori	r6,r6,32
   81450:	d9814c15 	stw	r6,1328(sp)
   81454:	003c8006 	br	80658 <___vfprintf_internal_r+0x1fc>
   81458:	d8814c17 	ldw	r2,1328(sp)
   8145c:	3c000017 	ldw	r16,0(r7)
   81460:	00c01e04 	movi	r3,120
   81464:	10800094 	ori	r2,r2,2
   81468:	d8814c15 	stw	r2,1328(sp)
   8146c:	39c00104 	addi	r7,r7,4
   81470:	01400274 	movhi	r5,9
   81474:	29718904 	addi	r5,r5,-14812
   81478:	00800c04 	movi	r2,48
   8147c:	0023883a 	mov	r17,zero
   81480:	01000084 	movi	r4,2
   81484:	d9c14015 	stw	r7,1280(sp)
   81488:	d8c14d15 	stw	r3,1332(sp)
   8148c:	d9414415 	stw	r5,1296(sp)
   81490:	d8800445 	stb	r2,17(sp)
   81494:	d8c00485 	stb	r3,18(sp)
   81498:	d8000405 	stb	zero,16(sp)
   8149c:	003e7d06 	br	80e94 <___vfprintf_internal_r+0xa38>
   814a0:	d8814c17 	ldw	r2,1328(sp)
   814a4:	b8c00007 	ldb	r3,0(r23)
   814a8:	10801014 	ori	r2,r2,64
   814ac:	d8814c15 	stw	r2,1328(sp)
   814b0:	003c6906 	br	80658 <___vfprintf_internal_r+0x1fc>
   814b4:	d9414c17 	ldw	r5,1328(sp)
   814b8:	2880020c 	andi	r2,r5,8
   814bc:	1001e526 	beq	r2,zero,81c54 <___vfprintf_internal_r+0x17f8>
   814c0:	39800017 	ldw	r6,0(r7)
   814c4:	38800204 	addi	r2,r7,8
   814c8:	d8814015 	stw	r2,1280(sp)
   814cc:	d9814215 	stw	r6,1288(sp)
   814d0:	39c00117 	ldw	r7,4(r7)
   814d4:	d9c14315 	stw	r7,1292(sp)
   814d8:	d9014217 	ldw	r4,1288(sp)
   814dc:	d9414317 	ldw	r5,1292(sp)
   814e0:	0086f0c0 	call	86f0c <__isinfd>
   814e4:	10021d26 	beq	r2,zero,81d5c <___vfprintf_internal_r+0x1900>
   814e8:	d9014217 	ldw	r4,1288(sp)
   814ec:	d9414317 	ldw	r5,1292(sp)
   814f0:	000d883a 	mov	r6,zero
   814f4:	000f883a 	mov	r7,zero
   814f8:	00890a80 	call	890a8 <__ltdf2>
   814fc:	1002d016 	blt	r2,zero,82040 <___vfprintf_internal_r+0x1be4>
   81500:	d9414d17 	ldw	r5,1332(sp)
   81504:	008011c4 	movi	r2,71
   81508:	11421016 	blt	r2,r5,81d4c <___vfprintf_internal_r+0x18f0>
   8150c:	01800274 	movhi	r6,9
   81510:	31b18e04 	addi	r6,r6,-14792
   81514:	d9814115 	stw	r6,1284(sp)
   81518:	d9014c17 	ldw	r4,1328(sp)
   8151c:	00c000c4 	movi	r3,3
   81520:	00bfdfc4 	movi	r2,-129
   81524:	2088703a 	and	r4,r4,r2
   81528:	180f883a 	mov	r7,r3
   8152c:	d8c14515 	stw	r3,1300(sp)
   81530:	d9014c15 	stw	r4,1328(sp)
   81534:	d8014615 	stw	zero,1304(sp)
   81538:	003e6a06 	br	80ee4 <___vfprintf_internal_r+0xa88>
   8153c:	38800017 	ldw	r2,0(r7)
   81540:	00c00044 	movi	r3,1
   81544:	39c00104 	addi	r7,r7,4
   81548:	d9c14015 	stw	r7,1280(sp)
   8154c:	d9000f04 	addi	r4,sp,60
   81550:	180f883a 	mov	r7,r3
   81554:	d8c14515 	stw	r3,1300(sp)
   81558:	d9014115 	stw	r4,1284(sp)
   8155c:	d8800f05 	stb	r2,60(sp)
   81560:	d8000405 	stb	zero,16(sp)
   81564:	003cac06 	br	80818 <___vfprintf_internal_r+0x3bc>
   81568:	01400274 	movhi	r5,9
   8156c:	29719404 	addi	r5,r5,-14768
   81570:	d9414415 	stw	r5,1296(sp)
   81574:	d9814c17 	ldw	r6,1328(sp)
   81578:	3080080c 	andi	r2,r6,32
   8157c:	1000ff26 	beq	r2,zero,8197c <___vfprintf_internal_r+0x1520>
   81580:	3c000017 	ldw	r16,0(r7)
   81584:	3c400117 	ldw	r17,4(r7)
   81588:	38800204 	addi	r2,r7,8
   8158c:	d8814015 	stw	r2,1280(sp)
   81590:	d9414c17 	ldw	r5,1328(sp)
   81594:	2880004c 	andi	r2,r5,1
   81598:	1005003a 	cmpeq	r2,r2,zero
   8159c:	1000b91e 	bne	r2,zero,81884 <___vfprintf_internal_r+0x1428>
   815a0:	8444b03a 	or	r2,r16,r17
   815a4:	1000b726 	beq	r2,zero,81884 <___vfprintf_internal_r+0x1428>
   815a8:	d9814d17 	ldw	r6,1332(sp)
   815ac:	29400094 	ori	r5,r5,2
   815b0:	00800c04 	movi	r2,48
   815b4:	01000084 	movi	r4,2
   815b8:	d9414c15 	stw	r5,1328(sp)
   815bc:	d8800445 	stb	r2,17(sp)
   815c0:	d9800485 	stb	r6,18(sp)
   815c4:	d8000405 	stb	zero,16(sp)
   815c8:	003e3206 	br	80e94 <___vfprintf_internal_r+0xa38>
   815cc:	01800274 	movhi	r6,9
   815d0:	31b18904 	addi	r6,r6,-14812
   815d4:	d9814415 	stw	r6,1296(sp)
   815d8:	003fe606 	br	81574 <___vfprintf_internal_r+0x1118>
   815dc:	00800ac4 	movi	r2,43
   815e0:	d8800405 	stb	r2,16(sp)
   815e4:	b8c00007 	ldb	r3,0(r23)
   815e8:	003c1b06 	br	80658 <___vfprintf_internal_r+0x1fc>
   815ec:	d8814c17 	ldw	r2,1328(sp)
   815f0:	b8c00007 	ldb	r3,0(r23)
   815f4:	10800054 	ori	r2,r2,1
   815f8:	d8814c15 	stw	r2,1328(sp)
   815fc:	003c1606 	br	80658 <___vfprintf_internal_r+0x1fc>
   81600:	d8800407 	ldb	r2,16(sp)
   81604:	10004c1e 	bne	r2,zero,81738 <___vfprintf_internal_r+0x12dc>
   81608:	00800804 	movi	r2,32
   8160c:	d8800405 	stb	r2,16(sp)
   81610:	b8c00007 	ldb	r3,0(r23)
   81614:	003c1006 	br	80658 <___vfprintf_internal_r+0x1fc>
   81618:	d9814c17 	ldw	r6,1328(sp)
   8161c:	b8c00007 	ldb	r3,0(r23)
   81620:	31800214 	ori	r6,r6,8
   81624:	d9814c15 	stw	r6,1328(sp)
   81628:	003c0b06 	br	80658 <___vfprintf_internal_r+0x1fc>
   8162c:	0009883a 	mov	r4,zero
   81630:	04000244 	movi	r16,9
   81634:	01400284 	movi	r5,10
   81638:	d9c15115 	stw	r7,1348(sp)
   8163c:	00895e00 	call	895e0 <__mulsi3>
   81640:	b9000007 	ldb	r4,0(r23)
   81644:	d8c14d17 	ldw	r3,1332(sp)
   81648:	bdc00044 	addi	r23,r23,1
   8164c:	d9014d15 	stw	r4,1332(sp)
   81650:	d9414d17 	ldw	r5,1332(sp)
   81654:	1885883a 	add	r2,r3,r2
   81658:	113ff404 	addi	r4,r2,-48
   8165c:	28bff404 	addi	r2,r5,-48
   81660:	d9c15117 	ldw	r7,1348(sp)
   81664:	80bff32e 	bgeu	r16,r2,81634 <___vfprintf_internal_r+0x11d8>
   81668:	d9014a15 	stw	r4,1320(sp)
   8166c:	003bfc06 	br	80660 <___vfprintf_internal_r+0x204>
   81670:	d8814c17 	ldw	r2,1328(sp)
   81674:	b8c00007 	ldb	r3,0(r23)
   81678:	10802014 	ori	r2,r2,128
   8167c:	d8814c15 	stw	r2,1328(sp)
   81680:	003bf506 	br	80658 <___vfprintf_internal_r+0x1fc>
   81684:	b8c00007 	ldb	r3,0(r23)
   81688:	00800a84 	movi	r2,42
   8168c:	bdc00044 	addi	r23,r23,1
   81690:	18831826 	beq	r3,r2,822f4 <___vfprintf_internal_r+0x1e98>
   81694:	d8c14d15 	stw	r3,1332(sp)
   81698:	18bff404 	addi	r2,r3,-48
   8169c:	00c00244 	movi	r3,9
   816a0:	18827b36 	bltu	r3,r2,82090 <___vfprintf_internal_r+0x1c34>
   816a4:	1821883a 	mov	r16,r3
   816a8:	0009883a 	mov	r4,zero
   816ac:	01400284 	movi	r5,10
   816b0:	d9c15115 	stw	r7,1348(sp)
   816b4:	00895e00 	call	895e0 <__mulsi3>
   816b8:	d9414d17 	ldw	r5,1332(sp)
   816bc:	b9800007 	ldb	r6,0(r23)
   816c0:	d9c15117 	ldw	r7,1348(sp)
   816c4:	1145883a 	add	r2,r2,r5
   816c8:	113ff404 	addi	r4,r2,-48
   816cc:	30bff404 	addi	r2,r6,-48
   816d0:	d9814d15 	stw	r6,1332(sp)
   816d4:	bdc00044 	addi	r23,r23,1
   816d8:	80bff42e 	bgeu	r16,r2,816ac <___vfprintf_internal_r+0x1250>
   816dc:	2027883a 	mov	r19,r4
   816e0:	203bdf0e 	bge	r4,zero,80660 <___vfprintf_internal_r+0x204>
   816e4:	04ffffc4 	movi	r19,-1
   816e8:	003bdd06 	br	80660 <___vfprintf_internal_r+0x204>
   816ec:	d8000405 	stb	zero,16(sp)
   816f0:	39800017 	ldw	r6,0(r7)
   816f4:	39c00104 	addi	r7,r7,4
   816f8:	d9c14015 	stw	r7,1280(sp)
   816fc:	d9814115 	stw	r6,1284(sp)
   81700:	3001c926 	beq	r6,zero,81e28 <___vfprintf_internal_r+0x19cc>
   81704:	98000e16 	blt	r19,zero,81740 <___vfprintf_internal_r+0x12e4>
   81708:	d9014117 	ldw	r4,1284(sp)
   8170c:	000b883a 	mov	r5,zero
   81710:	980d883a 	mov	r6,r19
   81714:	00855900 	call	85590 <memchr>
   81718:	10025926 	beq	r2,zero,82080 <___vfprintf_internal_r+0x1c24>
   8171c:	d8c14117 	ldw	r3,1284(sp)
   81720:	10cfc83a 	sub	r7,r2,r3
   81724:	99c19e16 	blt	r19,r7,81da0 <___vfprintf_internal_r+0x1944>
   81728:	d9c14515 	stw	r7,1300(sp)
   8172c:	38000916 	blt	r7,zero,81754 <___vfprintf_internal_r+0x12f8>
   81730:	d8014615 	stw	zero,1304(sp)
   81734:	003deb06 	br	80ee4 <___vfprintf_internal_r+0xa88>
   81738:	b8c00007 	ldb	r3,0(r23)
   8173c:	003bc606 	br	80658 <___vfprintf_internal_r+0x1fc>
   81740:	d9014117 	ldw	r4,1284(sp)
   81744:	00803900 	call	80390 <strlen>
   81748:	d8814515 	stw	r2,1300(sp)
   8174c:	100f883a 	mov	r7,r2
   81750:	103ff70e 	bge	r2,zero,81730 <___vfprintf_internal_r+0x12d4>
   81754:	d8014515 	stw	zero,1300(sp)
   81758:	d8014615 	stw	zero,1304(sp)
   8175c:	003de106 	br	80ee4 <___vfprintf_internal_r+0xa88>
   81760:	20c03fcc 	andi	r3,r4,255
   81764:	00800044 	movi	r2,1
   81768:	18802d26 	beq	r3,r2,81820 <___vfprintf_internal_r+0x13c4>
   8176c:	18800e36 	bltu	r3,r2,817a8 <___vfprintf_internal_r+0x134c>
   81770:	00800084 	movi	r2,2
   81774:	1880fa26 	beq	r3,r2,81b60 <___vfprintf_internal_r+0x1704>
   81778:	01000274 	movhi	r4,9
   8177c:	21319904 	addi	r4,r4,-14748
   81780:	00803900 	call	80390 <strlen>
   81784:	100f883a 	mov	r7,r2
   81788:	dcc14515 	stw	r19,1300(sp)
   8178c:	9880010e 	bge	r19,r2,81794 <___vfprintf_internal_r+0x1338>
   81790:	d8814515 	stw	r2,1300(sp)
   81794:	00800274 	movhi	r2,9
   81798:	10b19904 	addi	r2,r2,-14748
   8179c:	dcc14615 	stw	r19,1304(sp)
   817a0:	d8814115 	stw	r2,1284(sp)
   817a4:	003dcf06 	br	80ee4 <___vfprintf_internal_r+0xa88>
   817a8:	d9401904 	addi	r5,sp,100
   817ac:	dd000f04 	addi	r20,sp,60
   817b0:	d9414115 	stw	r5,1284(sp)
   817b4:	880a977a 	slli	r5,r17,29
   817b8:	d9814117 	ldw	r6,1284(sp)
   817bc:	8004d0fa 	srli	r2,r16,3
   817c0:	8806d0fa 	srli	r3,r17,3
   817c4:	810001cc 	andi	r4,r16,7
   817c8:	2884b03a 	or	r2,r5,r2
   817cc:	31bfffc4 	addi	r6,r6,-1
   817d0:	21000c04 	addi	r4,r4,48
   817d4:	d9814115 	stw	r6,1284(sp)
   817d8:	10cab03a 	or	r5,r2,r3
   817dc:	31000005 	stb	r4,0(r6)
   817e0:	1021883a 	mov	r16,r2
   817e4:	1823883a 	mov	r17,r3
   817e8:	283ff21e 	bne	r5,zero,817b4 <___vfprintf_internal_r+0x1358>
   817ec:	d8c14c17 	ldw	r3,1328(sp)
   817f0:	1880004c 	andi	r2,r3,1
   817f4:	1005003a 	cmpeq	r2,r2,zero
   817f8:	103db31e 	bne	r2,zero,80ec8 <___vfprintf_internal_r+0xa6c>
   817fc:	20803fcc 	andi	r2,r4,255
   81800:	1080201c 	xori	r2,r2,128
   81804:	10bfe004 	addi	r2,r2,-128
   81808:	00c00c04 	movi	r3,48
   8180c:	10fdae26 	beq	r2,r3,80ec8 <___vfprintf_internal_r+0xa6c>
   81810:	31bfffc4 	addi	r6,r6,-1
   81814:	d9814115 	stw	r6,1284(sp)
   81818:	30c00005 	stb	r3,0(r6)
   8181c:	003daa06 	br	80ec8 <___vfprintf_internal_r+0xa6c>
   81820:	88800068 	cmpgeui	r2,r17,1
   81824:	10002c1e 	bne	r2,zero,818d8 <___vfprintf_internal_r+0x147c>
   81828:	8800021e 	bne	r17,zero,81834 <___vfprintf_internal_r+0x13d8>
   8182c:	00800244 	movi	r2,9
   81830:	14002936 	bltu	r2,r16,818d8 <___vfprintf_internal_r+0x147c>
   81834:	d90018c4 	addi	r4,sp,99
   81838:	dd000f04 	addi	r20,sp,60
   8183c:	d9014115 	stw	r4,1284(sp)
   81840:	d9014117 	ldw	r4,1284(sp)
   81844:	80800c04 	addi	r2,r16,48
   81848:	20800005 	stb	r2,0(r4)
   8184c:	003d9e06 	br	80ec8 <___vfprintf_internal_r+0xa6c>
   81850:	dc400d17 	ldw	r17,52(sp)
   81854:	07000274 	movhi	fp,9
   81858:	e731a084 	addi	fp,fp,-14718
   8185c:	9425883a 	add	r18,r18,r16
   81860:	8c400044 	addi	r17,r17,1
   81864:	008001c4 	movi	r2,7
   81868:	1f000015 	stw	fp,0(r3)
   8186c:	1c000115 	stw	r16,4(r3)
   81870:	dc800e15 	stw	r18,56(sp)
   81874:	dc400d15 	stw	r17,52(sp)
   81878:	147ddc16 	blt	r2,r17,80fec <___vfprintf_internal_r+0xb90>
   8187c:	18c00204 	addi	r3,r3,8
   81880:	003c7406 	br	80a54 <___vfprintf_internal_r+0x5f8>
   81884:	01000084 	movi	r4,2
   81888:	d8000405 	stb	zero,16(sp)
   8188c:	003d8106 	br	80e94 <___vfprintf_internal_r+0xa38>
   81890:	d9814c17 	ldw	r6,1328(sp)
   81894:	30c4703a 	and	r2,r6,r3
   81898:	1005003a 	cmpeq	r2,r2,zero
   8189c:	103cb326 	beq	r2,zero,80b6c <___vfprintf_internal_r+0x710>
   818a0:	d9014117 	ldw	r4,1284(sp)
   818a4:	94800044 	addi	r18,r18,1
   818a8:	8c400044 	addi	r17,r17,1
   818ac:	008001c4 	movi	r2,7
   818b0:	a9000015 	stw	r4,0(r21)
   818b4:	a8c00115 	stw	r3,4(r21)
   818b8:	dc800e15 	stw	r18,56(sp)
   818bc:	dc400d15 	stw	r17,52(sp)
   818c0:	147e6016 	blt	r2,r17,81244 <___vfprintf_internal_r+0xde8>
   818c4:	acc00204 	addi	r19,r21,8
   818c8:	003cd106 	br	80c10 <___vfprintf_internal_r+0x7b4>
   818cc:	07000274 	movhi	fp,9
   818d0:	e731a084 	addi	fp,fp,-14718
   818d4:	003c4906 	br	809fc <___vfprintf_internal_r+0x5a0>
   818d8:	dd000f04 	addi	r20,sp,60
   818dc:	dc801904 	addi	r18,sp,100
   818e0:	8009883a 	mov	r4,r16
   818e4:	880b883a 	mov	r5,r17
   818e8:	01800284 	movi	r6,10
   818ec:	000f883a 	mov	r7,zero
   818f0:	0087d080 	call	87d08 <__umoddi3>
   818f4:	12000c04 	addi	r8,r2,48
   818f8:	94bfffc4 	addi	r18,r18,-1
   818fc:	8009883a 	mov	r4,r16
   81900:	880b883a 	mov	r5,r17
   81904:	01800284 	movi	r6,10
   81908:	000f883a 	mov	r7,zero
   8190c:	92000005 	stb	r8,0(r18)
   81910:	008769c0 	call	8769c <__udivdi3>
   81914:	1009883a 	mov	r4,r2
   81918:	1021883a 	mov	r16,r2
   8191c:	18800068 	cmpgeui	r2,r3,1
   81920:	1823883a 	mov	r17,r3
   81924:	103fee1e 	bne	r2,zero,818e0 <___vfprintf_internal_r+0x1484>
   81928:	1800021e 	bne	r3,zero,81934 <___vfprintf_internal_r+0x14d8>
   8192c:	00800244 	movi	r2,9
   81930:	113feb36 	bltu	r2,r4,818e0 <___vfprintf_internal_r+0x1484>
   81934:	94bfffc4 	addi	r18,r18,-1
   81938:	dc814115 	stw	r18,1284(sp)
   8193c:	003fc006 	br	81840 <___vfprintf_internal_r+0x13e4>
   81940:	d9014c17 	ldw	r4,1328(sp)
   81944:	2080004c 	andi	r2,r4,1
   81948:	10009a1e 	bne	r2,zero,81bb4 <___vfprintf_internal_r+0x1758>
   8194c:	d9401904 	addi	r5,sp,100
   81950:	dd000f04 	addi	r20,sp,60
   81954:	d9414115 	stw	r5,1284(sp)
   81958:	003d5b06 	br	80ec8 <___vfprintf_internal_r+0xa6c>
   8195c:	d9014f17 	ldw	r4,1340(sp)
   81960:	b00b883a 	mov	r5,r22
   81964:	d9800c04 	addi	r6,sp,48
   81968:	00804040 	call	80404 <__sprint_r>
   8196c:	103c731e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81970:	dc800e17 	ldw	r18,56(sp)
   81974:	d8c01904 	addi	r3,sp,100
   81978:	003cf906 	br	80d60 <___vfprintf_internal_r+0x904>
   8197c:	d8c14c17 	ldw	r3,1328(sp)
   81980:	1880040c 	andi	r2,r3,16
   81984:	1000711e 	bne	r2,zero,81b4c <___vfprintf_internal_r+0x16f0>
   81988:	d9014c17 	ldw	r4,1328(sp)
   8198c:	2080100c 	andi	r2,r4,64
   81990:	10006e26 	beq	r2,zero,81b4c <___vfprintf_internal_r+0x16f0>
   81994:	3c00000b 	ldhu	r16,0(r7)
   81998:	0023883a 	mov	r17,zero
   8199c:	39c00104 	addi	r7,r7,4
   819a0:	d9c14015 	stw	r7,1280(sp)
   819a4:	003efa06 	br	81590 <___vfprintf_internal_r+0x1134>
   819a8:	dc400d17 	ldw	r17,52(sp)
   819ac:	07000274 	movhi	fp,9
   819b0:	e731a084 	addi	fp,fp,-14718
   819b4:	9425883a 	add	r18,r18,r16
   819b8:	8c400044 	addi	r17,r17,1
   819bc:	008001c4 	movi	r2,7
   819c0:	1f000015 	stw	fp,0(r3)
   819c4:	1c000115 	stw	r16,4(r3)
   819c8:	dc800e15 	stw	r18,56(sp)
   819cc:	dc400d15 	stw	r17,52(sp)
   819d0:	147d7016 	blt	r2,r17,80f94 <___vfprintf_internal_r+0xb38>
   819d4:	18c00204 	addi	r3,r3,8
   819d8:	003d7506 	br	80fb0 <___vfprintf_internal_r+0xb54>
   819dc:	dc800e17 	ldw	r18,56(sp)
   819e0:	dc400d17 	ldw	r17,52(sp)
   819e4:	07000274 	movhi	fp,9
   819e8:	e731a484 	addi	fp,fp,-14702
   819ec:	003bba06 	br	808d8 <___vfprintf_internal_r+0x47c>
   819f0:	d9014f17 	ldw	r4,1340(sp)
   819f4:	b00b883a 	mov	r5,r22
   819f8:	d9800c04 	addi	r6,sp,48
   819fc:	00804040 	call	80404 <__sprint_r>
   81a00:	103c4e1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81a04:	dc800e17 	ldw	r18,56(sp)
   81a08:	d8c01904 	addi	r3,sp,100
   81a0c:	003ce306 	br	80d9c <___vfprintf_internal_r+0x940>
   81a10:	3c000017 	ldw	r16,0(r7)
   81a14:	0009883a 	mov	r4,zero
   81a18:	39c00104 	addi	r7,r7,4
   81a1c:	0023883a 	mov	r17,zero
   81a20:	d9c14015 	stw	r7,1280(sp)
   81a24:	d8000405 	stb	zero,16(sp)
   81a28:	003d1a06 	br	80e94 <___vfprintf_internal_r+0xa38>
   81a2c:	38800017 	ldw	r2,0(r7)
   81a30:	39c00104 	addi	r7,r7,4
   81a34:	d9c14015 	stw	r7,1280(sp)
   81a38:	1023d7fa 	srai	r17,r2,31
   81a3c:	1021883a 	mov	r16,r2
   81a40:	003d1206 	br	80e8c <___vfprintf_internal_r+0xa30>
   81a44:	3c000017 	ldw	r16,0(r7)
   81a48:	01000044 	movi	r4,1
   81a4c:	39c00104 	addi	r7,r7,4
   81a50:	0023883a 	mov	r17,zero
   81a54:	d9c14015 	stw	r7,1280(sp)
   81a58:	d8000405 	stb	zero,16(sp)
   81a5c:	003d0d06 	br	80e94 <___vfprintf_internal_r+0xa38>
   81a60:	00800274 	movhi	r2,9
   81a64:	10b1a004 	addi	r2,r2,-14720
   81a68:	94800044 	addi	r18,r18,1
   81a6c:	8c400044 	addi	r17,r17,1
   81a70:	a8800015 	stw	r2,0(r21)
   81a74:	00c00044 	movi	r3,1
   81a78:	008001c4 	movi	r2,7
   81a7c:	a8c00115 	stw	r3,4(r21)
   81a80:	dc800e15 	stw	r18,56(sp)
   81a84:	dc400d15 	stw	r17,52(sp)
   81a88:	1440ca16 	blt	r2,r17,81db4 <___vfprintf_internal_r+0x1958>
   81a8c:	a8c00204 	addi	r3,r21,8
   81a90:	2000061e 	bne	r4,zero,81aac <___vfprintf_internal_r+0x1650>
   81a94:	d9414717 	ldw	r5,1308(sp)
   81a98:	2800041e 	bne	r5,zero,81aac <___vfprintf_internal_r+0x1650>
   81a9c:	d9814c17 	ldw	r6,1328(sp)
   81aa0:	3080004c 	andi	r2,r6,1
   81aa4:	1005003a 	cmpeq	r2,r2,zero
   81aa8:	103bea1e 	bne	r2,zero,80a54 <___vfprintf_internal_r+0x5f8>
   81aac:	00800044 	movi	r2,1
   81ab0:	dc400d17 	ldw	r17,52(sp)
   81ab4:	18800115 	stw	r2,4(r3)
   81ab8:	d8814917 	ldw	r2,1316(sp)
   81abc:	94800044 	addi	r18,r18,1
   81ac0:	8c400044 	addi	r17,r17,1
   81ac4:	18800015 	stw	r2,0(r3)
   81ac8:	008001c4 	movi	r2,7
   81acc:	dc800e15 	stw	r18,56(sp)
   81ad0:	dc400d15 	stw	r17,52(sp)
   81ad4:	1440ca16 	blt	r2,r17,81e00 <___vfprintf_internal_r+0x19a4>
   81ad8:	18c00204 	addi	r3,r3,8
   81adc:	0121c83a 	sub	r16,zero,r4
   81ae0:	0400500e 	bge	zero,r16,81c24 <___vfprintf_internal_r+0x17c8>
   81ae4:	00800404 	movi	r2,16
   81ae8:	1400800e 	bge	r2,r16,81cec <___vfprintf_internal_r+0x1890>
   81aec:	1027883a 	mov	r19,r2
   81af0:	07000274 	movhi	fp,9
   81af4:	e731a084 	addi	fp,fp,-14718
   81af8:	050001c4 	movi	r20,7
   81afc:	00000306 	br	81b0c <___vfprintf_internal_r+0x16b0>
   81b00:	18c00204 	addi	r3,r3,8
   81b04:	843ffc04 	addi	r16,r16,-16
   81b08:	9c007a0e 	bge	r19,r16,81cf4 <___vfprintf_internal_r+0x1898>
   81b0c:	94800404 	addi	r18,r18,16
   81b10:	8c400044 	addi	r17,r17,1
   81b14:	1f000015 	stw	fp,0(r3)
   81b18:	1cc00115 	stw	r19,4(r3)
   81b1c:	dc800e15 	stw	r18,56(sp)
   81b20:	dc400d15 	stw	r17,52(sp)
   81b24:	a47ff60e 	bge	r20,r17,81b00 <___vfprintf_internal_r+0x16a4>
   81b28:	d9014f17 	ldw	r4,1340(sp)
   81b2c:	b00b883a 	mov	r5,r22
   81b30:	d9800c04 	addi	r6,sp,48
   81b34:	00804040 	call	80404 <__sprint_r>
   81b38:	103c001e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81b3c:	dc800e17 	ldw	r18,56(sp)
   81b40:	dc400d17 	ldw	r17,52(sp)
   81b44:	d8c01904 	addi	r3,sp,100
   81b48:	003fee06 	br	81b04 <___vfprintf_internal_r+0x16a8>
   81b4c:	3c000017 	ldw	r16,0(r7)
   81b50:	0023883a 	mov	r17,zero
   81b54:	39c00104 	addi	r7,r7,4
   81b58:	d9c14015 	stw	r7,1280(sp)
   81b5c:	003e8c06 	br	81590 <___vfprintf_internal_r+0x1134>
   81b60:	d9401904 	addi	r5,sp,100
   81b64:	dd000f04 	addi	r20,sp,60
   81b68:	d9414115 	stw	r5,1284(sp)
   81b6c:	d9814417 	ldw	r6,1296(sp)
   81b70:	880a973a 	slli	r5,r17,28
   81b74:	8004d13a 	srli	r2,r16,4
   81b78:	810003cc 	andi	r4,r16,15
   81b7c:	3109883a 	add	r4,r6,r4
   81b80:	2884b03a 	or	r2,r5,r2
   81b84:	21400003 	ldbu	r5,0(r4)
   81b88:	d9014117 	ldw	r4,1284(sp)
   81b8c:	8806d13a 	srli	r3,r17,4
   81b90:	1021883a 	mov	r16,r2
   81b94:	213fffc4 	addi	r4,r4,-1
   81b98:	d9014115 	stw	r4,1284(sp)
   81b9c:	d9814117 	ldw	r6,1284(sp)
   81ba0:	10c8b03a 	or	r4,r2,r3
   81ba4:	1823883a 	mov	r17,r3
   81ba8:	31400005 	stb	r5,0(r6)
   81bac:	203fef1e 	bne	r4,zero,81b6c <___vfprintf_internal_r+0x1710>
   81bb0:	003cc506 	br	80ec8 <___vfprintf_internal_r+0xa6c>
   81bb4:	00800c04 	movi	r2,48
   81bb8:	d98018c4 	addi	r6,sp,99
   81bbc:	dd000f04 	addi	r20,sp,60
   81bc0:	d88018c5 	stb	r2,99(sp)
   81bc4:	d9814115 	stw	r6,1284(sp)
   81bc8:	003cbf06 	br	80ec8 <___vfprintf_internal_r+0xa6c>
   81bcc:	dc400d17 	ldw	r17,52(sp)
   81bd0:	07000274 	movhi	fp,9
   81bd4:	e731a484 	addi	fp,fp,-14702
   81bd8:	003bc106 	br	80ae0 <___vfprintf_internal_r+0x684>
   81bdc:	d9414c17 	ldw	r5,1328(sp)
   81be0:	2880040c 	andi	r2,r5,16
   81be4:	10007c26 	beq	r2,zero,81dd8 <___vfprintf_internal_r+0x197c>
   81be8:	38800017 	ldw	r2,0(r7)
   81bec:	39c00104 	addi	r7,r7,4
   81bf0:	d9c14015 	stw	r7,1280(sp)
   81bf4:	d9814b17 	ldw	r6,1324(sp)
   81bf8:	d9c14017 	ldw	r7,1280(sp)
   81bfc:	11800015 	stw	r6,0(r2)
   81c00:	003a7206 	br	805cc <___vfprintf_internal_r+0x170>
   81c04:	d9014f17 	ldw	r4,1340(sp)
   81c08:	b00b883a 	mov	r5,r22
   81c0c:	d9800c04 	addi	r6,sp,48
   81c10:	00804040 	call	80404 <__sprint_r>
   81c14:	103bc91e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81c18:	dc800e17 	ldw	r18,56(sp)
   81c1c:	dc400d17 	ldw	r17,52(sp)
   81c20:	d8c01904 	addi	r3,sp,100
   81c24:	d9014717 	ldw	r4,1308(sp)
   81c28:	d9414117 	ldw	r5,1284(sp)
   81c2c:	8c400044 	addi	r17,r17,1
   81c30:	9125883a 	add	r18,r18,r4
   81c34:	008001c4 	movi	r2,7
   81c38:	19400015 	stw	r5,0(r3)
   81c3c:	19000115 	stw	r4,4(r3)
   81c40:	dc800e15 	stw	r18,56(sp)
   81c44:	dc400d15 	stw	r17,52(sp)
   81c48:	147ce816 	blt	r2,r17,80fec <___vfprintf_internal_r+0xb90>
   81c4c:	18c00204 	addi	r3,r3,8
   81c50:	003b8006 	br	80a54 <___vfprintf_internal_r+0x5f8>
   81c54:	38c00017 	ldw	r3,0(r7)
   81c58:	39000204 	addi	r4,r7,8
   81c5c:	d9014015 	stw	r4,1280(sp)
   81c60:	d8c14215 	stw	r3,1288(sp)
   81c64:	39c00117 	ldw	r7,4(r7)
   81c68:	d9c14315 	stw	r7,1292(sp)
   81c6c:	003e1a06 	br	814d8 <___vfprintf_internal_r+0x107c>
   81c70:	0005883a 	mov	r2,zero
   81c74:	1409c83a 	sub	r4,r2,r16
   81c78:	1105803a 	cmpltu	r2,r2,r4
   81c7c:	044bc83a 	sub	r5,zero,r17
   81c80:	2885c83a 	sub	r2,r5,r2
   81c84:	2021883a 	mov	r16,r4
   81c88:	1023883a 	mov	r17,r2
   81c8c:	01000044 	movi	r4,1
   81c90:	00800b44 	movi	r2,45
   81c94:	d8800405 	stb	r2,16(sp)
   81c98:	003c7e06 	br	80e94 <___vfprintf_internal_r+0xa38>
   81c9c:	d9014f17 	ldw	r4,1340(sp)
   81ca0:	b00b883a 	mov	r5,r22
   81ca4:	d9800c04 	addi	r6,sp,48
   81ca8:	00804040 	call	80404 <__sprint_r>
   81cac:	103ba31e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81cb0:	dc800e17 	ldw	r18,56(sp)
   81cb4:	dc400d17 	ldw	r17,52(sp)
   81cb8:	d9000517 	ldw	r4,20(sp)
   81cbc:	d9401904 	addi	r5,sp,100
   81cc0:	003da106 	br	81348 <___vfprintf_internal_r+0xeec>
   81cc4:	d9014f17 	ldw	r4,1340(sp)
   81cc8:	b00b883a 	mov	r5,r22
   81ccc:	d9800c04 	addi	r6,sp,48
   81cd0:	00804040 	call	80404 <__sprint_r>
   81cd4:	103b991e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81cd8:	dc800e17 	ldw	r18,56(sp)
   81cdc:	dc400d17 	ldw	r17,52(sp)
   81ce0:	d9000517 	ldw	r4,20(sp)
   81ce4:	d8c01904 	addi	r3,sp,100
   81ce8:	003d8b06 	br	81318 <___vfprintf_internal_r+0xebc>
   81cec:	07000274 	movhi	fp,9
   81cf0:	e731a084 	addi	fp,fp,-14718
   81cf4:	9425883a 	add	r18,r18,r16
   81cf8:	8c400044 	addi	r17,r17,1
   81cfc:	008001c4 	movi	r2,7
   81d00:	1f000015 	stw	fp,0(r3)
   81d04:	1c000115 	stw	r16,4(r3)
   81d08:	dc800e15 	stw	r18,56(sp)
   81d0c:	dc400d15 	stw	r17,52(sp)
   81d10:	147fbc16 	blt	r2,r17,81c04 <___vfprintf_internal_r+0x17a8>
   81d14:	18c00204 	addi	r3,r3,8
   81d18:	003fc206 	br	81c24 <___vfprintf_internal_r+0x17c8>
   81d1c:	d9014f17 	ldw	r4,1340(sp)
   81d20:	b00b883a 	mov	r5,r22
   81d24:	d9800c04 	addi	r6,sp,48
   81d28:	00804040 	call	80404 <__sprint_r>
   81d2c:	103b831e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81d30:	dc800e17 	ldw	r18,56(sp)
   81d34:	d9000517 	ldw	r4,20(sp)
   81d38:	d8c01904 	addi	r3,sp,100
   81d3c:	003cfc06 	br	81130 <___vfprintf_internal_r+0xcd4>
   81d40:	07000274 	movhi	fp,9
   81d44:	e731a084 	addi	fp,fp,-14718
   81d48:	003bde06 	br	80cc4 <___vfprintf_internal_r+0x868>
   81d4c:	00800274 	movhi	r2,9
   81d50:	10b18f04 	addi	r2,r2,-14788
   81d54:	d8814115 	stw	r2,1284(sp)
   81d58:	003def06 	br	81518 <___vfprintf_internal_r+0x10bc>
   81d5c:	d9014217 	ldw	r4,1288(sp)
   81d60:	d9414317 	ldw	r5,1292(sp)
   81d64:	0086f4c0 	call	86f4c <__isnand>
   81d68:	10003926 	beq	r2,zero,81e50 <___vfprintf_internal_r+0x19f4>
   81d6c:	d9414d17 	ldw	r5,1332(sp)
   81d70:	008011c4 	movi	r2,71
   81d74:	1140ce16 	blt	r2,r5,820b0 <___vfprintf_internal_r+0x1c54>
   81d78:	01800274 	movhi	r6,9
   81d7c:	31b19004 	addi	r6,r6,-14784
   81d80:	d9814115 	stw	r6,1284(sp)
   81d84:	003de406 	br	81518 <___vfprintf_internal_r+0x10bc>
   81d88:	d9014c17 	ldw	r4,1328(sp)
   81d8c:	bdc00044 	addi	r23,r23,1
   81d90:	b8c00007 	ldb	r3,0(r23)
   81d94:	21000814 	ori	r4,r4,32
   81d98:	d9014c15 	stw	r4,1328(sp)
   81d9c:	003a2e06 	br	80658 <___vfprintf_internal_r+0x1fc>
   81da0:	dcc14515 	stw	r19,1300(sp)
   81da4:	98011016 	blt	r19,zero,821e8 <___vfprintf_internal_r+0x1d8c>
   81da8:	980f883a 	mov	r7,r19
   81dac:	d8014615 	stw	zero,1304(sp)
   81db0:	003c4c06 	br	80ee4 <___vfprintf_internal_r+0xa88>
   81db4:	d9014f17 	ldw	r4,1340(sp)
   81db8:	b00b883a 	mov	r5,r22
   81dbc:	d9800c04 	addi	r6,sp,48
   81dc0:	00804040 	call	80404 <__sprint_r>
   81dc4:	103b5d1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81dc8:	dc800e17 	ldw	r18,56(sp)
   81dcc:	d9000517 	ldw	r4,20(sp)
   81dd0:	d8c01904 	addi	r3,sp,100
   81dd4:	003f2e06 	br	81a90 <___vfprintf_internal_r+0x1634>
   81dd8:	d8c14c17 	ldw	r3,1328(sp)
   81ddc:	1880100c 	andi	r2,r3,64
   81de0:	1000a026 	beq	r2,zero,82064 <___vfprintf_internal_r+0x1c08>
   81de4:	38800017 	ldw	r2,0(r7)
   81de8:	39c00104 	addi	r7,r7,4
   81dec:	d9c14015 	stw	r7,1280(sp)
   81df0:	d9014b17 	ldw	r4,1324(sp)
   81df4:	d9c14017 	ldw	r7,1280(sp)
   81df8:	1100000d 	sth	r4,0(r2)
   81dfc:	0039f306 	br	805cc <___vfprintf_internal_r+0x170>
   81e00:	d9014f17 	ldw	r4,1340(sp)
   81e04:	b00b883a 	mov	r5,r22
   81e08:	d9800c04 	addi	r6,sp,48
   81e0c:	00804040 	call	80404 <__sprint_r>
   81e10:	103b4a1e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   81e14:	dc800e17 	ldw	r18,56(sp)
   81e18:	dc400d17 	ldw	r17,52(sp)
   81e1c:	d9000517 	ldw	r4,20(sp)
   81e20:	d8c01904 	addi	r3,sp,100
   81e24:	003f2d06 	br	81adc <___vfprintf_internal_r+0x1680>
   81e28:	00800184 	movi	r2,6
   81e2c:	14c09a36 	bltu	r2,r19,82098 <___vfprintf_internal_r+0x1c3c>
   81e30:	dcc14515 	stw	r19,1300(sp)
   81e34:	9800010e 	bge	r19,zero,81e3c <___vfprintf_internal_r+0x19e0>
   81e38:	d8014515 	stw	zero,1300(sp)
   81e3c:	00800274 	movhi	r2,9
   81e40:	10b19204 	addi	r2,r2,-14776
   81e44:	980f883a 	mov	r7,r19
   81e48:	d8814115 	stw	r2,1284(sp)
   81e4c:	003a7206 	br	80818 <___vfprintf_internal_r+0x3bc>
   81e50:	00bfffc4 	movi	r2,-1
   81e54:	9880e226 	beq	r19,r2,821e0 <___vfprintf_internal_r+0x1d84>
   81e58:	d9414d17 	ldw	r5,1332(sp)
   81e5c:	008019c4 	movi	r2,103
   81e60:	2880dc26 	beq	r5,r2,821d4 <___vfprintf_internal_r+0x1d78>
   81e64:	008011c4 	movi	r2,71
   81e68:	2880da26 	beq	r5,r2,821d4 <___vfprintf_internal_r+0x1d78>
   81e6c:	d9414c17 	ldw	r5,1328(sp)
   81e70:	d9014317 	ldw	r4,1292(sp)
   81e74:	d9814217 	ldw	r6,1288(sp)
   81e78:	29404014 	ori	r5,r5,256
   81e7c:	d9414c15 	stw	r5,1328(sp)
   81e80:	2000cc16 	blt	r4,zero,821b4 <___vfprintf_internal_r+0x1d58>
   81e84:	3021883a 	mov	r16,r6
   81e88:	2023883a 	mov	r17,r4
   81e8c:	0039883a 	mov	fp,zero
   81e90:	d9414d17 	ldw	r5,1332(sp)
   81e94:	00801984 	movi	r2,102
   81e98:	2880b726 	beq	r5,r2,82178 <___vfprintf_internal_r+0x1d1c>
   81e9c:	00801184 	movi	r2,70
   81ea0:	2880b526 	beq	r5,r2,82178 <___vfprintf_internal_r+0x1d1c>
   81ea4:	00801944 	movi	r2,101
   81ea8:	2880c826 	beq	r5,r2,821cc <___vfprintf_internal_r+0x1d70>
   81eac:	00801144 	movi	r2,69
   81eb0:	2880c626 	beq	r5,r2,821cc <___vfprintf_internal_r+0x1d70>
   81eb4:	9829883a 	mov	r20,r19
   81eb8:	d9014f17 	ldw	r4,1340(sp)
   81ebc:	d8800504 	addi	r2,sp,20
   81ec0:	880d883a 	mov	r6,r17
   81ec4:	d8800115 	stw	r2,4(sp)
   81ec8:	d8c00604 	addi	r3,sp,24
   81ecc:	d8800704 	addi	r2,sp,28
   81ed0:	800b883a 	mov	r5,r16
   81ed4:	01c00084 	movi	r7,2
   81ed8:	d8c00215 	stw	r3,8(sp)
   81edc:	d8800315 	stw	r2,12(sp)
   81ee0:	dd000015 	stw	r20,0(sp)
   81ee4:	00826c40 	call	826c4 <_dtoa_r>
   81ee8:	d9814d17 	ldw	r6,1332(sp)
   81eec:	d8814115 	stw	r2,1284(sp)
   81ef0:	008019c4 	movi	r2,103
   81ef4:	30809526 	beq	r6,r2,8214c <___vfprintf_internal_r+0x1cf0>
   81ef8:	d8c14d17 	ldw	r3,1332(sp)
   81efc:	008011c4 	movi	r2,71
   81f00:	18809226 	beq	r3,r2,8214c <___vfprintf_internal_r+0x1cf0>
   81f04:	d9414117 	ldw	r5,1284(sp)
   81f08:	d9814d17 	ldw	r6,1332(sp)
   81f0c:	00801984 	movi	r2,102
   81f10:	2d25883a 	add	r18,r5,r20
   81f14:	30808626 	beq	r6,r2,82130 <___vfprintf_internal_r+0x1cd4>
   81f18:	00801184 	movi	r2,70
   81f1c:	30808426 	beq	r6,r2,82130 <___vfprintf_internal_r+0x1cd4>
   81f20:	000d883a 	mov	r6,zero
   81f24:	000f883a 	mov	r7,zero
   81f28:	880b883a 	mov	r5,r17
   81f2c:	8009883a 	mov	r4,r16
   81f30:	0088e880 	call	88e88 <__eqdf2>
   81f34:	1000751e 	bne	r2,zero,8210c <___vfprintf_internal_r+0x1cb0>
   81f38:	9005883a 	mov	r2,r18
   81f3c:	dc800715 	stw	r18,28(sp)
   81f40:	d9014117 	ldw	r4,1284(sp)
   81f44:	d9414d17 	ldw	r5,1332(sp)
   81f48:	00c019c4 	movi	r3,103
   81f4c:	1125c83a 	sub	r18,r2,r4
   81f50:	28c06826 	beq	r5,r3,820f4 <___vfprintf_internal_r+0x1c98>
   81f54:	008011c4 	movi	r2,71
   81f58:	28806626 	beq	r5,r2,820f4 <___vfprintf_internal_r+0x1c98>
   81f5c:	d9000517 	ldw	r4,20(sp)
   81f60:	d8c14d17 	ldw	r3,1332(sp)
   81f64:	00801944 	movi	r2,101
   81f68:	10c05516 	blt	r2,r3,820c0 <___vfprintf_internal_r+0x1c64>
   81f6c:	213fffc4 	addi	r4,r4,-1
   81f70:	d9000515 	stw	r4,20(sp)
   81f74:	d8c00805 	stb	r3,32(sp)
   81f78:	2021883a 	mov	r16,r4
   81f7c:	2000c116 	blt	r4,zero,82284 <___vfprintf_internal_r+0x1e28>
   81f80:	00800ac4 	movi	r2,43
   81f84:	d8800845 	stb	r2,33(sp)
   81f88:	00800244 	movi	r2,9
   81f8c:	1400af0e 	bge	r2,r16,8224c <___vfprintf_internal_r+0x1df0>
   81f90:	1027883a 	mov	r19,r2
   81f94:	dc400b84 	addi	r17,sp,46
   81f98:	8009883a 	mov	r4,r16
   81f9c:	01400284 	movi	r5,10
   81fa0:	00895700 	call	89570 <__modsi3>
   81fa4:	10800c04 	addi	r2,r2,48
   81fa8:	8c7fffc4 	addi	r17,r17,-1
   81fac:	8009883a 	mov	r4,r16
   81fb0:	01400284 	movi	r5,10
   81fb4:	88800005 	stb	r2,0(r17)
   81fb8:	00895100 	call	89510 <__divsi3>
   81fbc:	1021883a 	mov	r16,r2
   81fc0:	98bff516 	blt	r19,r2,81f98 <___vfprintf_internal_r+0x1b3c>
   81fc4:	10c00c04 	addi	r3,r2,48
   81fc8:	d88009c4 	addi	r2,sp,39
   81fcc:	108001c4 	addi	r2,r2,7
   81fd0:	897fffc4 	addi	r5,r17,-1
   81fd4:	88ffffc5 	stb	r3,-1(r17)
   81fd8:	2880a72e 	bgeu	r5,r2,82278 <___vfprintf_internal_r+0x1e1c>
   81fdc:	1009883a 	mov	r4,r2
   81fe0:	d9800804 	addi	r6,sp,32
   81fe4:	d8c00884 	addi	r3,sp,34
   81fe8:	28800003 	ldbu	r2,0(r5)
   81fec:	29400044 	addi	r5,r5,1
   81ff0:	18800005 	stb	r2,0(r3)
   81ff4:	18c00044 	addi	r3,r3,1
   81ff8:	293ffb36 	bltu	r5,r4,81fe8 <___vfprintf_internal_r+0x1b8c>
   81ffc:	1987c83a 	sub	r3,r3,r6
   82000:	00800044 	movi	r2,1
   82004:	d8c14815 	stw	r3,1312(sp)
   82008:	90cf883a 	add	r7,r18,r3
   8200c:	1480960e 	bge	r2,r18,82268 <___vfprintf_internal_r+0x1e0c>
   82010:	39c00044 	addi	r7,r7,1
   82014:	d9c14515 	stw	r7,1300(sp)
   82018:	38003416 	blt	r7,zero,820ec <___vfprintf_internal_r+0x1c90>
   8201c:	e0803fcc 	andi	r2,fp,255
   82020:	1080201c 	xori	r2,r2,128
   82024:	10bfe004 	addi	r2,r2,-128
   82028:	10004e26 	beq	r2,zero,82164 <___vfprintf_internal_r+0x1d08>
   8202c:	00800b44 	movi	r2,45
   82030:	dc814715 	stw	r18,1308(sp)
   82034:	d8014615 	stw	zero,1304(sp)
   82038:	d8800405 	stb	r2,16(sp)
   8203c:	003bab06 	br	80eec <___vfprintf_internal_r+0xa90>
   82040:	00800b44 	movi	r2,45
   82044:	d8800405 	stb	r2,16(sp)
   82048:	003d2d06 	br	81500 <___vfprintf_internal_r+0x10a4>
   8204c:	d9014f17 	ldw	r4,1340(sp)
   82050:	b00b883a 	mov	r5,r22
   82054:	d9800c04 	addi	r6,sp,48
   82058:	00804040 	call	80404 <__sprint_r>
   8205c:	103ab71e 	bne	r2,zero,80b3c <___vfprintf_internal_r+0x6e0>
   82060:	003ab506 	br	80b38 <___vfprintf_internal_r+0x6dc>
   82064:	38800017 	ldw	r2,0(r7)
   82068:	39c00104 	addi	r7,r7,4
   8206c:	d9c14015 	stw	r7,1280(sp)
   82070:	d9414b17 	ldw	r5,1324(sp)
   82074:	d9c14017 	ldw	r7,1280(sp)
   82078:	11400015 	stw	r5,0(r2)
   8207c:	00395306 	br	805cc <___vfprintf_internal_r+0x170>
   82080:	980f883a 	mov	r7,r19
   82084:	dcc14515 	stw	r19,1300(sp)
   82088:	d8014615 	stw	zero,1304(sp)
   8208c:	003b9506 	br	80ee4 <___vfprintf_internal_r+0xa88>
   82090:	0027883a 	mov	r19,zero
   82094:	00397206 	br	80660 <___vfprintf_internal_r+0x204>
   82098:	00c00274 	movhi	r3,9
   8209c:	18f19204 	addi	r3,r3,-14776
   820a0:	100f883a 	mov	r7,r2
   820a4:	d8814515 	stw	r2,1300(sp)
   820a8:	d8c14115 	stw	r3,1284(sp)
   820ac:	0039da06 	br	80818 <___vfprintf_internal_r+0x3bc>
   820b0:	00800274 	movhi	r2,9
   820b4:	10b19104 	addi	r2,r2,-14780
   820b8:	d8814115 	stw	r2,1284(sp)
   820bc:	003d1606 	br	81518 <___vfprintf_internal_r+0x10bc>
   820c0:	d9414d17 	ldw	r5,1332(sp)
   820c4:	00801984 	movi	r2,102
   820c8:	28804926 	beq	r5,r2,821f0 <___vfprintf_internal_r+0x1d94>
   820cc:	200f883a 	mov	r7,r4
   820d0:	24805716 	blt	r4,r18,82230 <___vfprintf_internal_r+0x1dd4>
   820d4:	d9414c17 	ldw	r5,1328(sp)
   820d8:	2880004c 	andi	r2,r5,1
   820dc:	10000126 	beq	r2,zero,820e4 <___vfprintf_internal_r+0x1c88>
   820e0:	21c00044 	addi	r7,r4,1
   820e4:	d9c14515 	stw	r7,1300(sp)
   820e8:	383fcc0e 	bge	r7,zero,8201c <___vfprintf_internal_r+0x1bc0>
   820ec:	d8014515 	stw	zero,1300(sp)
   820f0:	003fca06 	br	8201c <___vfprintf_internal_r+0x1bc0>
   820f4:	d9000517 	ldw	r4,20(sp)
   820f8:	00bfff04 	movi	r2,-4
   820fc:	1100480e 	bge	r2,r4,82220 <___vfprintf_internal_r+0x1dc4>
   82100:	99004716 	blt	r19,r4,82220 <___vfprintf_internal_r+0x1dc4>
   82104:	d8c14d15 	stw	r3,1332(sp)
   82108:	003ff006 	br	820cc <___vfprintf_internal_r+0x1c70>
   8210c:	d8800717 	ldw	r2,28(sp)
   82110:	14bf8b2e 	bgeu	r2,r18,81f40 <___vfprintf_internal_r+0x1ae4>
   82114:	9007883a 	mov	r3,r18
   82118:	01000c04 	movi	r4,48
   8211c:	11000005 	stb	r4,0(r2)
   82120:	10800044 	addi	r2,r2,1
   82124:	d8800715 	stw	r2,28(sp)
   82128:	18bffc1e 	bne	r3,r2,8211c <___vfprintf_internal_r+0x1cc0>
   8212c:	003f8406 	br	81f40 <___vfprintf_internal_r+0x1ae4>
   82130:	d8814117 	ldw	r2,1284(sp)
   82134:	10c00007 	ldb	r3,0(r2)
   82138:	00800c04 	movi	r2,48
   8213c:	18805b26 	beq	r3,r2,822ac <___vfprintf_internal_r+0x1e50>
   82140:	d9000517 	ldw	r4,20(sp)
   82144:	9125883a 	add	r18,r18,r4
   82148:	003f7506 	br	81f20 <___vfprintf_internal_r+0x1ac4>
   8214c:	d9014c17 	ldw	r4,1328(sp)
   82150:	2080004c 	andi	r2,r4,1
   82154:	1005003a 	cmpeq	r2,r2,zero
   82158:	103f6a26 	beq	r2,zero,81f04 <___vfprintf_internal_r+0x1aa8>
   8215c:	d8800717 	ldw	r2,28(sp)
   82160:	003f7706 	br	81f40 <___vfprintf_internal_r+0x1ae4>
   82164:	d9c14515 	stw	r7,1300(sp)
   82168:	38004d16 	blt	r7,zero,822a0 <___vfprintf_internal_r+0x1e44>
   8216c:	dc814715 	stw	r18,1308(sp)
   82170:	d8014615 	stw	zero,1304(sp)
   82174:	003b5b06 	br	80ee4 <___vfprintf_internal_r+0xa88>
   82178:	d9014f17 	ldw	r4,1340(sp)
   8217c:	d8800504 	addi	r2,sp,20
   82180:	d8800115 	stw	r2,4(sp)
   82184:	d8c00604 	addi	r3,sp,24
   82188:	d8800704 	addi	r2,sp,28
   8218c:	800b883a 	mov	r5,r16
   82190:	880d883a 	mov	r6,r17
   82194:	01c000c4 	movi	r7,3
   82198:	d8c00215 	stw	r3,8(sp)
   8219c:	d8800315 	stw	r2,12(sp)
   821a0:	dcc00015 	stw	r19,0(sp)
   821a4:	9829883a 	mov	r20,r19
   821a8:	00826c40 	call	826c4 <_dtoa_r>
   821ac:	d8814115 	stw	r2,1284(sp)
   821b0:	003f5106 	br	81ef8 <___vfprintf_internal_r+0x1a9c>
   821b4:	d8c14217 	ldw	r3,1288(sp)
   821b8:	d9014317 	ldw	r4,1292(sp)
   821bc:	07000b44 	movi	fp,45
   821c0:	1821883a 	mov	r16,r3
   821c4:	2460003c 	xorhi	r17,r4,32768
   821c8:	003f3106 	br	81e90 <___vfprintf_internal_r+0x1a34>
   821cc:	9d000044 	addi	r20,r19,1
   821d0:	003f3906 	br	81eb8 <___vfprintf_internal_r+0x1a5c>
   821d4:	983f251e 	bne	r19,zero,81e6c <___vfprintf_internal_r+0x1a10>
   821d8:	04c00044 	movi	r19,1
   821dc:	003f2306 	br	81e6c <___vfprintf_internal_r+0x1a10>
   821e0:	04c00184 	movi	r19,6
   821e4:	003f2106 	br	81e6c <___vfprintf_internal_r+0x1a10>
   821e8:	d8014515 	stw	zero,1300(sp)
   821ec:	003eee06 	br	81da8 <___vfprintf_internal_r+0x194c>
   821f0:	200f883a 	mov	r7,r4
   821f4:	0100370e 	bge	zero,r4,822d4 <___vfprintf_internal_r+0x1e78>
   821f8:	9800031e 	bne	r19,zero,82208 <___vfprintf_internal_r+0x1dac>
   821fc:	d9814c17 	ldw	r6,1328(sp)
   82200:	3080004c 	andi	r2,r6,1
   82204:	103fb726 	beq	r2,zero,820e4 <___vfprintf_internal_r+0x1c88>
   82208:	20800044 	addi	r2,r4,1
   8220c:	98a7883a 	add	r19,r19,r2
   82210:	dcc14515 	stw	r19,1300(sp)
   82214:	980f883a 	mov	r7,r19
   82218:	983f800e 	bge	r19,zero,8201c <___vfprintf_internal_r+0x1bc0>
   8221c:	003fb306 	br	820ec <___vfprintf_internal_r+0x1c90>
   82220:	d9814d17 	ldw	r6,1332(sp)
   82224:	31bfff84 	addi	r6,r6,-2
   82228:	d9814d15 	stw	r6,1332(sp)
   8222c:	003f4c06 	br	81f60 <___vfprintf_internal_r+0x1b04>
   82230:	0100180e 	bge	zero,r4,82294 <___vfprintf_internal_r+0x1e38>
   82234:	00800044 	movi	r2,1
   82238:	1485883a 	add	r2,r2,r18
   8223c:	d8814515 	stw	r2,1300(sp)
   82240:	100f883a 	mov	r7,r2
   82244:	103f750e 	bge	r2,zero,8201c <___vfprintf_internal_r+0x1bc0>
   82248:	003fa806 	br	820ec <___vfprintf_internal_r+0x1c90>
   8224c:	80c00c04 	addi	r3,r16,48
   82250:	00800c04 	movi	r2,48
   82254:	d8c008c5 	stb	r3,35(sp)
   82258:	d9800804 	addi	r6,sp,32
   8225c:	d8c00904 	addi	r3,sp,36
   82260:	d8800885 	stb	r2,34(sp)
   82264:	003f6506 	br	81ffc <___vfprintf_internal_r+0x1ba0>
   82268:	d9014c17 	ldw	r4,1328(sp)
   8226c:	2084703a 	and	r2,r4,r2
   82270:	103f9c26 	beq	r2,zero,820e4 <___vfprintf_internal_r+0x1c88>
   82274:	003f6606 	br	82010 <___vfprintf_internal_r+0x1bb4>
   82278:	d9800804 	addi	r6,sp,32
   8227c:	d8c00884 	addi	r3,sp,34
   82280:	003f5e06 	br	81ffc <___vfprintf_internal_r+0x1ba0>
   82284:	00800b44 	movi	r2,45
   82288:	0121c83a 	sub	r16,zero,r4
   8228c:	d8800845 	stb	r2,33(sp)
   82290:	003f3d06 	br	81f88 <___vfprintf_internal_r+0x1b2c>
   82294:	00800084 	movi	r2,2
   82298:	1105c83a 	sub	r2,r2,r4
   8229c:	003fe606 	br	82238 <___vfprintf_internal_r+0x1ddc>
   822a0:	d8014515 	stw	zero,1300(sp)
   822a4:	dc814715 	stw	r18,1308(sp)
   822a8:	003fb106 	br	82170 <___vfprintf_internal_r+0x1d14>
   822ac:	000d883a 	mov	r6,zero
   822b0:	000f883a 	mov	r7,zero
   822b4:	8009883a 	mov	r4,r16
   822b8:	880b883a 	mov	r5,r17
   822bc:	0088f100 	call	88f10 <__nedf2>
   822c0:	103f9f26 	beq	r2,zero,82140 <___vfprintf_internal_r+0x1ce4>
   822c4:	00800044 	movi	r2,1
   822c8:	1509c83a 	sub	r4,r2,r20
   822cc:	d9000515 	stw	r4,20(sp)
   822d0:	003f9b06 	br	82140 <___vfprintf_internal_r+0x1ce4>
   822d4:	98000d1e 	bne	r19,zero,8230c <___vfprintf_internal_r+0x1eb0>
   822d8:	d8c14c17 	ldw	r3,1328(sp)
   822dc:	1880004c 	andi	r2,r3,1
   822e0:	10000a1e 	bne	r2,zero,8230c <___vfprintf_internal_r+0x1eb0>
   822e4:	01000044 	movi	r4,1
   822e8:	200f883a 	mov	r7,r4
   822ec:	d9014515 	stw	r4,1300(sp)
   822f0:	003f4a06 	br	8201c <___vfprintf_internal_r+0x1bc0>
   822f4:	3cc00017 	ldw	r19,0(r7)
   822f8:	39c00104 	addi	r7,r7,4
   822fc:	983d0e0e 	bge	r19,zero,81738 <___vfprintf_internal_r+0x12dc>
   82300:	b8c00007 	ldb	r3,0(r23)
   82304:	04ffffc4 	movi	r19,-1
   82308:	0038d306 	br	80658 <___vfprintf_internal_r+0x1fc>
   8230c:	9cc00084 	addi	r19,r19,2
   82310:	dcc14515 	stw	r19,1300(sp)
   82314:	980f883a 	mov	r7,r19
   82318:	983f400e 	bge	r19,zero,8201c <___vfprintf_internal_r+0x1bc0>
   8231c:	003f7306 	br	820ec <___vfprintf_internal_r+0x1c90>

00082320 <__vfprintf_internal>:
   82320:	00800274 	movhi	r2,9
   82324:	10b8e004 	addi	r2,r2,-7296
   82328:	2013883a 	mov	r9,r4
   8232c:	11000017 	ldw	r4,0(r2)
   82330:	2805883a 	mov	r2,r5
   82334:	300f883a 	mov	r7,r6
   82338:	480b883a 	mov	r5,r9
   8233c:	100d883a 	mov	r6,r2
   82340:	008045c1 	jmpi	8045c <___vfprintf_internal_r>

00082344 <__swsetup_r>:
   82344:	00800274 	movhi	r2,9
   82348:	10b8e004 	addi	r2,r2,-7296
   8234c:	10c00017 	ldw	r3,0(r2)
   82350:	defffd04 	addi	sp,sp,-12
   82354:	dc400115 	stw	r17,4(sp)
   82358:	dc000015 	stw	r16,0(sp)
   8235c:	dfc00215 	stw	ra,8(sp)
   82360:	2023883a 	mov	r17,r4
   82364:	2821883a 	mov	r16,r5
   82368:	18000226 	beq	r3,zero,82374 <__swsetup_r+0x30>
   8236c:	18800e17 	ldw	r2,56(r3)
   82370:	10001f26 	beq	r2,zero,823f0 <__swsetup_r+0xac>
   82374:	8100030b 	ldhu	r4,12(r16)
   82378:	2080020c 	andi	r2,r4,8
   8237c:	10002826 	beq	r2,zero,82420 <__swsetup_r+0xdc>
   82380:	81400417 	ldw	r5,16(r16)
   82384:	28001d26 	beq	r5,zero,823fc <__swsetup_r+0xb8>
   82388:	2080004c 	andi	r2,r4,1
   8238c:	1005003a 	cmpeq	r2,r2,zero
   82390:	10000b26 	beq	r2,zero,823c0 <__swsetup_r+0x7c>
   82394:	2080008c 	andi	r2,r4,2
   82398:	10001226 	beq	r2,zero,823e4 <__swsetup_r+0xa0>
   8239c:	0005883a 	mov	r2,zero
   823a0:	80800215 	stw	r2,8(r16)
   823a4:	28000b26 	beq	r5,zero,823d4 <__swsetup_r+0x90>
   823a8:	0005883a 	mov	r2,zero
   823ac:	dfc00217 	ldw	ra,8(sp)
   823b0:	dc400117 	ldw	r17,4(sp)
   823b4:	dc000017 	ldw	r16,0(sp)
   823b8:	dec00304 	addi	sp,sp,12
   823bc:	f800283a 	ret
   823c0:	80800517 	ldw	r2,20(r16)
   823c4:	80000215 	stw	zero,8(r16)
   823c8:	0085c83a 	sub	r2,zero,r2
   823cc:	80800615 	stw	r2,24(r16)
   823d0:	283ff51e 	bne	r5,zero,823a8 <__swsetup_r+0x64>
   823d4:	2080200c 	andi	r2,r4,128
   823d8:	103ff326 	beq	r2,zero,823a8 <__swsetup_r+0x64>
   823dc:	00bfffc4 	movi	r2,-1
   823e0:	003ff206 	br	823ac <__swsetup_r+0x68>
   823e4:	80800517 	ldw	r2,20(r16)
   823e8:	80800215 	stw	r2,8(r16)
   823ec:	003fed06 	br	823a4 <__swsetup_r+0x60>
   823f0:	1809883a 	mov	r4,r3
   823f4:	0083f100 	call	83f10 <__sinit>
   823f8:	003fde06 	br	82374 <__swsetup_r+0x30>
   823fc:	20c0a00c 	andi	r3,r4,640
   82400:	00808004 	movi	r2,512
   82404:	18bfe026 	beq	r3,r2,82388 <__swsetup_r+0x44>
   82408:	8809883a 	mov	r4,r17
   8240c:	800b883a 	mov	r5,r16
   82410:	0084cbc0 	call	84cbc <__smakebuf_r>
   82414:	8100030b 	ldhu	r4,12(r16)
   82418:	81400417 	ldw	r5,16(r16)
   8241c:	003fda06 	br	82388 <__swsetup_r+0x44>
   82420:	2080040c 	andi	r2,r4,16
   82424:	103fed26 	beq	r2,zero,823dc <__swsetup_r+0x98>
   82428:	2080010c 	andi	r2,r4,4
   8242c:	10001226 	beq	r2,zero,82478 <__swsetup_r+0x134>
   82430:	81400c17 	ldw	r5,48(r16)
   82434:	28000526 	beq	r5,zero,8244c <__swsetup_r+0x108>
   82438:	80801004 	addi	r2,r16,64
   8243c:	28800226 	beq	r5,r2,82448 <__swsetup_r+0x104>
   82440:	8809883a 	mov	r4,r17
   82444:	00842c80 	call	842c8 <_free_r>
   82448:	80000c15 	stw	zero,48(r16)
   8244c:	8080030b 	ldhu	r2,12(r16)
   82450:	81400417 	ldw	r5,16(r16)
   82454:	80000115 	stw	zero,4(r16)
   82458:	10bff6cc 	andi	r2,r2,65499
   8245c:	8080030d 	sth	r2,12(r16)
   82460:	81400015 	stw	r5,0(r16)
   82464:	8080030b 	ldhu	r2,12(r16)
   82468:	10800214 	ori	r2,r2,8
   8246c:	113fffcc 	andi	r4,r2,65535
   82470:	8080030d 	sth	r2,12(r16)
   82474:	003fc306 	br	82384 <__swsetup_r+0x40>
   82478:	81400417 	ldw	r5,16(r16)
   8247c:	003ff906 	br	82464 <__swsetup_r+0x120>

00082480 <quorem>:
   82480:	28c00417 	ldw	r3,16(r5)
   82484:	20800417 	ldw	r2,16(r4)
   82488:	defff104 	addi	sp,sp,-60
   8248c:	dfc00e15 	stw	ra,56(sp)
   82490:	df000d15 	stw	fp,52(sp)
   82494:	ddc00c15 	stw	r23,48(sp)
   82498:	dd800b15 	stw	r22,44(sp)
   8249c:	dd400a15 	stw	r21,40(sp)
   824a0:	dd000915 	stw	r20,36(sp)
   824a4:	dcc00815 	stw	r19,32(sp)
   824a8:	dc800715 	stw	r18,28(sp)
   824ac:	dc400615 	stw	r17,24(sp)
   824b0:	dc000515 	stw	r16,20(sp)
   824b4:	d9000315 	stw	r4,12(sp)
   824b8:	d9400415 	stw	r5,16(sp)
   824bc:	10c07f16 	blt	r2,r3,826bc <quorem+0x23c>
   824c0:	1d3fffc4 	addi	r20,r3,-1
   824c4:	d8c00417 	ldw	r3,16(sp)
   824c8:	d9000317 	ldw	r4,12(sp)
   824cc:	a505883a 	add	r2,r20,r20
   824d0:	1085883a 	add	r2,r2,r2
   824d4:	1cc00504 	addi	r19,r3,20
   824d8:	25c00504 	addi	r23,r4,20
   824dc:	98ad883a 	add	r22,r19,r2
   824e0:	15c7883a 	add	r3,r2,r23
   824e4:	b1400017 	ldw	r5,0(r22)
   824e8:	19000017 	ldw	r4,0(r3)
   824ec:	d8c00015 	stw	r3,0(sp)
   824f0:	29400044 	addi	r5,r5,1
   824f4:	d9000215 	stw	r4,8(sp)
   824f8:	00895d00 	call	895d0 <__udivsi3>
   824fc:	1039883a 	mov	fp,r2
   82500:	10003d1e 	bne	r2,zero,825f8 <quorem+0x178>
   82504:	d9400417 	ldw	r5,16(sp)
   82508:	d9000317 	ldw	r4,12(sp)
   8250c:	00859e80 	call	859e8 <__mcmp>
   82510:	10002c16 	blt	r2,zero,825c4 <quorem+0x144>
   82514:	e7000044 	addi	fp,fp,1
   82518:	b80f883a 	mov	r7,r23
   8251c:	0011883a 	mov	r8,zero
   82520:	0009883a 	mov	r4,zero
   82524:	99400017 	ldw	r5,0(r19)
   82528:	38c00017 	ldw	r3,0(r7)
   8252c:	9cc00104 	addi	r19,r19,4
   82530:	28bfffcc 	andi	r2,r5,65535
   82534:	2085883a 	add	r2,r4,r2
   82538:	11bfffcc 	andi	r6,r2,65535
   8253c:	193fffcc 	andi	r4,r3,65535
   82540:	1004d43a 	srli	r2,r2,16
   82544:	280ad43a 	srli	r5,r5,16
   82548:	2189c83a 	sub	r4,r4,r6
   8254c:	2209883a 	add	r4,r4,r8
   82550:	1806d43a 	srli	r3,r3,16
   82554:	288b883a 	add	r5,r5,r2
   82558:	200dd43a 	srai	r6,r4,16
   8255c:	28bfffcc 	andi	r2,r5,65535
   82560:	1887c83a 	sub	r3,r3,r2
   82564:	1987883a 	add	r3,r3,r6
   82568:	3900000d 	sth	r4,0(r7)
   8256c:	38c0008d 	sth	r3,2(r7)
   82570:	2808d43a 	srli	r4,r5,16
   82574:	39c00104 	addi	r7,r7,4
   82578:	1811d43a 	srai	r8,r3,16
   8257c:	b4ffe92e 	bgeu	r22,r19,82524 <quorem+0xa4>
   82580:	a505883a 	add	r2,r20,r20
   82584:	1085883a 	add	r2,r2,r2
   82588:	b885883a 	add	r2,r23,r2
   8258c:	10c00017 	ldw	r3,0(r2)
   82590:	18000c1e 	bne	r3,zero,825c4 <quorem+0x144>
   82594:	113fff04 	addi	r4,r2,-4
   82598:	b900082e 	bgeu	r23,r4,825bc <quorem+0x13c>
   8259c:	10bfff17 	ldw	r2,-4(r2)
   825a0:	10000326 	beq	r2,zero,825b0 <quorem+0x130>
   825a4:	00000506 	br	825bc <quorem+0x13c>
   825a8:	20800017 	ldw	r2,0(r4)
   825ac:	1000031e 	bne	r2,zero,825bc <quorem+0x13c>
   825b0:	213fff04 	addi	r4,r4,-4
   825b4:	a53fffc4 	addi	r20,r20,-1
   825b8:	b93ffb36 	bltu	r23,r4,825a8 <quorem+0x128>
   825bc:	d9000317 	ldw	r4,12(sp)
   825c0:	25000415 	stw	r20,16(r4)
   825c4:	e005883a 	mov	r2,fp
   825c8:	dfc00e17 	ldw	ra,56(sp)
   825cc:	df000d17 	ldw	fp,52(sp)
   825d0:	ddc00c17 	ldw	r23,48(sp)
   825d4:	dd800b17 	ldw	r22,44(sp)
   825d8:	dd400a17 	ldw	r21,40(sp)
   825dc:	dd000917 	ldw	r20,36(sp)
   825e0:	dcc00817 	ldw	r19,32(sp)
   825e4:	dc800717 	ldw	r18,28(sp)
   825e8:	dc400617 	ldw	r17,24(sp)
   825ec:	dc000517 	ldw	r16,20(sp)
   825f0:	dec00f04 	addi	sp,sp,60
   825f4:	f800283a 	ret
   825f8:	b823883a 	mov	r17,r23
   825fc:	9825883a 	mov	r18,r19
   82600:	d8000115 	stw	zero,4(sp)
   82604:	002b883a 	mov	r21,zero
   82608:	94000017 	ldw	r16,0(r18)
   8260c:	e009883a 	mov	r4,fp
   82610:	94800104 	addi	r18,r18,4
   82614:	817fffcc 	andi	r5,r16,65535
   82618:	00895e00 	call	895e0 <__mulsi3>
   8261c:	800ad43a 	srli	r5,r16,16
   82620:	e009883a 	mov	r4,fp
   82624:	a8a1883a 	add	r16,r21,r2
   82628:	00895e00 	call	895e0 <__mulsi3>
   8262c:	89000017 	ldw	r4,0(r17)
   82630:	80ffffcc 	andi	r3,r16,65535
   82634:	8020d43a 	srli	r16,r16,16
   82638:	217fffcc 	andi	r5,r4,65535
   8263c:	28cbc83a 	sub	r5,r5,r3
   82640:	d8c00117 	ldw	r3,4(sp)
   82644:	2008d43a 	srli	r4,r4,16
   82648:	1405883a 	add	r2,r2,r16
   8264c:	28cb883a 	add	r5,r5,r3
   82650:	280dd43a 	srai	r6,r5,16
   82654:	10ffffcc 	andi	r3,r2,65535
   82658:	20c9c83a 	sub	r4,r4,r3
   8265c:	2189883a 	add	r4,r4,r6
   82660:	8900008d 	sth	r4,2(r17)
   82664:	2009d43a 	srai	r4,r4,16
   82668:	8940000d 	sth	r5,0(r17)
   8266c:	102ad43a 	srli	r21,r2,16
   82670:	8c400104 	addi	r17,r17,4
   82674:	d9000115 	stw	r4,4(sp)
   82678:	b4bfe32e 	bgeu	r22,r18,82608 <quorem+0x188>
   8267c:	d9000217 	ldw	r4,8(sp)
   82680:	203fa01e 	bne	r4,zero,82504 <quorem+0x84>
   82684:	d8800017 	ldw	r2,0(sp)
   82688:	10ffff04 	addi	r3,r2,-4
   8268c:	b8c0082e 	bgeu	r23,r3,826b0 <quorem+0x230>
   82690:	10bfff17 	ldw	r2,-4(r2)
   82694:	10000326 	beq	r2,zero,826a4 <quorem+0x224>
   82698:	00000506 	br	826b0 <quorem+0x230>
   8269c:	18800017 	ldw	r2,0(r3)
   826a0:	1000031e 	bne	r2,zero,826b0 <quorem+0x230>
   826a4:	18ffff04 	addi	r3,r3,-4
   826a8:	a53fffc4 	addi	r20,r20,-1
   826ac:	b8fffb36 	bltu	r23,r3,8269c <quorem+0x21c>
   826b0:	d8c00317 	ldw	r3,12(sp)
   826b4:	1d000415 	stw	r20,16(r3)
   826b8:	003f9206 	br	82504 <quorem+0x84>
   826bc:	0005883a 	mov	r2,zero
   826c0:	003fc106 	br	825c8 <quorem+0x148>

000826c4 <_dtoa_r>:
   826c4:	22001017 	ldw	r8,64(r4)
   826c8:	deffda04 	addi	sp,sp,-152
   826cc:	dd402115 	stw	r21,132(sp)
   826d0:	dd002015 	stw	r20,128(sp)
   826d4:	dc801e15 	stw	r18,120(sp)
   826d8:	dc401d15 	stw	r17,116(sp)
   826dc:	dfc02515 	stw	ra,148(sp)
   826e0:	df002415 	stw	fp,144(sp)
   826e4:	ddc02315 	stw	r23,140(sp)
   826e8:	dd802215 	stw	r22,136(sp)
   826ec:	dcc01f15 	stw	r19,124(sp)
   826f0:	dc001c15 	stw	r16,112(sp)
   826f4:	d9001615 	stw	r4,88(sp)
   826f8:	3023883a 	mov	r17,r6
   826fc:	2829883a 	mov	r20,r5
   82700:	d9c01715 	stw	r7,92(sp)
   82704:	dc802817 	ldw	r18,160(sp)
   82708:	302b883a 	mov	r21,r6
   8270c:	40000a26 	beq	r8,zero,82738 <_dtoa_r+0x74>
   82710:	20801117 	ldw	r2,68(r4)
   82714:	400b883a 	mov	r5,r8
   82718:	40800115 	stw	r2,4(r8)
   8271c:	20c01117 	ldw	r3,68(r4)
   82720:	00800044 	movi	r2,1
   82724:	10c4983a 	sll	r2,r2,r3
   82728:	40800215 	stw	r2,8(r8)
   8272c:	008588c0 	call	8588c <_Bfree>
   82730:	d8c01617 	ldw	r3,88(sp)
   82734:	18001015 	stw	zero,64(r3)
   82738:	8800a316 	blt	r17,zero,829c8 <_dtoa_r+0x304>
   8273c:	90000015 	stw	zero,0(r18)
   82740:	a8dffc2c 	andhi	r3,r21,32752
   82744:	009ffc34 	movhi	r2,32752
   82748:	18809126 	beq	r3,r2,82990 <_dtoa_r+0x2cc>
   8274c:	000d883a 	mov	r6,zero
   82750:	000f883a 	mov	r7,zero
   82754:	a009883a 	mov	r4,r20
   82758:	a80b883a 	mov	r5,r21
   8275c:	dd001215 	stw	r20,72(sp)
   82760:	dd401315 	stw	r21,76(sp)
   82764:	0088f100 	call	88f10 <__nedf2>
   82768:	1000171e 	bne	r2,zero,827c8 <_dtoa_r+0x104>
   8276c:	d9802717 	ldw	r6,156(sp)
   82770:	00800044 	movi	r2,1
   82774:	30800015 	stw	r2,0(r6)
   82778:	d8802917 	ldw	r2,164(sp)
   8277c:	10029b26 	beq	r2,zero,831ec <_dtoa_r+0xb28>
   82780:	d9002917 	ldw	r4,164(sp)
   82784:	00800274 	movhi	r2,9
   82788:	10b1a044 	addi	r2,r2,-14719
   8278c:	10ffffc4 	addi	r3,r2,-1
   82790:	20800015 	stw	r2,0(r4)
   82794:	1805883a 	mov	r2,r3
   82798:	dfc02517 	ldw	ra,148(sp)
   8279c:	df002417 	ldw	fp,144(sp)
   827a0:	ddc02317 	ldw	r23,140(sp)
   827a4:	dd802217 	ldw	r22,136(sp)
   827a8:	dd402117 	ldw	r21,132(sp)
   827ac:	dd002017 	ldw	r20,128(sp)
   827b0:	dcc01f17 	ldw	r19,124(sp)
   827b4:	dc801e17 	ldw	r18,120(sp)
   827b8:	dc401d17 	ldw	r17,116(sp)
   827bc:	dc001c17 	ldw	r16,112(sp)
   827c0:	dec02604 	addi	sp,sp,152
   827c4:	f800283a 	ret
   827c8:	d9001617 	ldw	r4,88(sp)
   827cc:	d9401217 	ldw	r5,72(sp)
   827d0:	d8800104 	addi	r2,sp,4
   827d4:	a80d883a 	mov	r6,r21
   827d8:	d9c00204 	addi	r7,sp,8
   827dc:	d8800015 	stw	r2,0(sp)
   827e0:	0085ec80 	call	85ec8 <__d2b>
   827e4:	d8800715 	stw	r2,28(sp)
   827e8:	a804d53a 	srli	r2,r21,20
   827ec:	1101ffcc 	andi	r4,r2,2047
   827f0:	20008626 	beq	r4,zero,82a0c <_dtoa_r+0x348>
   827f4:	d8c01217 	ldw	r3,72(sp)
   827f8:	00800434 	movhi	r2,16
   827fc:	10bfffc4 	addi	r2,r2,-1
   82800:	ddc00117 	ldw	r23,4(sp)
   82804:	a884703a 	and	r2,r21,r2
   82808:	1811883a 	mov	r8,r3
   8280c:	124ffc34 	orhi	r9,r2,16368
   82810:	25bf0044 	addi	r22,r4,-1023
   82814:	d8000815 	stw	zero,32(sp)
   82818:	0005883a 	mov	r2,zero
   8281c:	00cffe34 	movhi	r3,16376
   82820:	480b883a 	mov	r5,r9
   82824:	4009883a 	mov	r4,r8
   82828:	180f883a 	mov	r7,r3
   8282c:	100d883a 	mov	r6,r2
   82830:	00887780 	call	88778 <__subdf3>
   82834:	0218dbf4 	movhi	r8,25455
   82838:	4210d844 	addi	r8,r8,17249
   8283c:	024ff4f4 	movhi	r9,16339
   82840:	4a61e9c4 	addi	r9,r9,-30809
   82844:	480f883a 	mov	r7,r9
   82848:	400d883a 	mov	r6,r8
   8284c:	180b883a 	mov	r5,r3
   82850:	1009883a 	mov	r4,r2
   82854:	008886c0 	call	8886c <__muldf3>
   82858:	0222d874 	movhi	r8,35681
   8285c:	42322cc4 	addi	r8,r8,-14157
   82860:	024ff1f4 	movhi	r9,16327
   82864:	4a628a04 	addi	r9,r9,-30168
   82868:	480f883a 	mov	r7,r9
   8286c:	400d883a 	mov	r6,r8
   82870:	180b883a 	mov	r5,r3
   82874:	1009883a 	mov	r4,r2
   82878:	00887f80 	call	887f8 <__adddf3>
   8287c:	b009883a 	mov	r4,r22
   82880:	1021883a 	mov	r16,r2
   82884:	1823883a 	mov	r17,r3
   82888:	00891300 	call	89130 <__floatsidf>
   8288c:	021427f4 	movhi	r8,20639
   82890:	421e7ec4 	addi	r8,r8,31227
   82894:	024ff4f4 	movhi	r9,16339
   82898:	4a5104c4 	addi	r9,r9,17427
   8289c:	480f883a 	mov	r7,r9
   828a0:	400d883a 	mov	r6,r8
   828a4:	180b883a 	mov	r5,r3
   828a8:	1009883a 	mov	r4,r2
   828ac:	008886c0 	call	8886c <__muldf3>
   828b0:	180f883a 	mov	r7,r3
   828b4:	880b883a 	mov	r5,r17
   828b8:	100d883a 	mov	r6,r2
   828bc:	8009883a 	mov	r4,r16
   828c0:	00887f80 	call	887f8 <__adddf3>
   828c4:	1009883a 	mov	r4,r2
   828c8:	180b883a 	mov	r5,r3
   828cc:	1021883a 	mov	r16,r2
   828d0:	1823883a 	mov	r17,r3
   828d4:	00892280 	call	89228 <__fixdfsi>
   828d8:	000d883a 	mov	r6,zero
   828dc:	000f883a 	mov	r7,zero
   828e0:	8009883a 	mov	r4,r16
   828e4:	880b883a 	mov	r5,r17
   828e8:	d8800d15 	stw	r2,52(sp)
   828ec:	00890a80 	call	890a8 <__ltdf2>
   828f0:	10031716 	blt	r2,zero,83550 <_dtoa_r+0xe8c>
   828f4:	d8c00d17 	ldw	r3,52(sp)
   828f8:	00800584 	movi	r2,22
   828fc:	10c1482e 	bgeu	r2,r3,82e20 <_dtoa_r+0x75c>
   82900:	01000044 	movi	r4,1
   82904:	d9000c15 	stw	r4,48(sp)
   82908:	bd85c83a 	sub	r2,r23,r22
   8290c:	11bfffc4 	addi	r6,r2,-1
   82910:	30030b16 	blt	r6,zero,83540 <_dtoa_r+0xe7c>
   82914:	d9800a15 	stw	r6,40(sp)
   82918:	d8001115 	stw	zero,68(sp)
   8291c:	d8c00d17 	ldw	r3,52(sp)
   82920:	1802ff16 	blt	r3,zero,83520 <_dtoa_r+0xe5c>
   82924:	d9000a17 	ldw	r4,40(sp)
   82928:	d8c00915 	stw	r3,36(sp)
   8292c:	d8001015 	stw	zero,64(sp)
   82930:	20c9883a 	add	r4,r4,r3
   82934:	d9000a15 	stw	r4,40(sp)
   82938:	d9001717 	ldw	r4,92(sp)
   8293c:	00800244 	movi	r2,9
   82940:	11004636 	bltu	r2,r4,82a5c <_dtoa_r+0x398>
   82944:	00800144 	movi	r2,5
   82948:	11020416 	blt	r2,r4,8315c <_dtoa_r+0xa98>
   8294c:	04400044 	movi	r17,1
   82950:	d8c01717 	ldw	r3,92(sp)
   82954:	00800144 	movi	r2,5
   82958:	10c1ed36 	bltu	r2,r3,83110 <_dtoa_r+0xa4c>
   8295c:	18c5883a 	add	r2,r3,r3
   82960:	1085883a 	add	r2,r2,r2
   82964:	00c00234 	movhi	r3,8
   82968:	18ca5e04 	addi	r3,r3,10616
   8296c:	10c5883a 	add	r2,r2,r3
   82970:	11000017 	ldw	r4,0(r2)
   82974:	2000683a 	jmp	r4
   82978:	00082a64 	muli	zero,zero,8361
   8297c:	00082a64 	muli	zero,zero,8361
   82980:	00083464 	muli	zero,zero,8401
   82984:	0008343c 	xorhi	zero,zero,8400
   82988:	00083480 	call	8348 <__alt_mem_sram-0x77cb8>
   8298c:	0008348c 	andi	zero,zero,8402
   82990:	d9002717 	ldw	r4,156(sp)
   82994:	0089c3c4 	movi	r2,9999
   82998:	20800015 	stw	r2,0(r4)
   8299c:	a0001026 	beq	r20,zero,829e0 <_dtoa_r+0x31c>
   829a0:	00c00274 	movhi	r3,9
   829a4:	18f1ac04 	addi	r3,r3,-14672
   829a8:	d9802917 	ldw	r6,164(sp)
   829ac:	303f7926 	beq	r6,zero,82794 <_dtoa_r+0xd0>
   829b0:	188000c7 	ldb	r2,3(r3)
   829b4:	190000c4 	addi	r4,r3,3
   829b8:	1000101e 	bne	r2,zero,829fc <_dtoa_r+0x338>
   829bc:	d8802917 	ldw	r2,164(sp)
   829c0:	11000015 	stw	r4,0(r2)
   829c4:	003f7306 	br	82794 <_dtoa_r+0xd0>
   829c8:	00a00034 	movhi	r2,32768
   829cc:	10bfffc4 	addi	r2,r2,-1
   829d0:	00c00044 	movi	r3,1
   829d4:	88aa703a 	and	r21,r17,r2
   829d8:	90c00015 	stw	r3,0(r18)
   829dc:	003f5806 	br	82740 <_dtoa_r+0x7c>
   829e0:	00800434 	movhi	r2,16
   829e4:	10bfffc4 	addi	r2,r2,-1
   829e8:	a884703a 	and	r2,r21,r2
   829ec:	103fec1e 	bne	r2,zero,829a0 <_dtoa_r+0x2dc>
   829f0:	00c00274 	movhi	r3,9
   829f4:	18f1a904 	addi	r3,r3,-14684
   829f8:	003feb06 	br	829a8 <_dtoa_r+0x2e4>
   829fc:	d8802917 	ldw	r2,164(sp)
   82a00:	19000204 	addi	r4,r3,8
   82a04:	11000015 	stw	r4,0(r2)
   82a08:	003f6206 	br	82794 <_dtoa_r+0xd0>
   82a0c:	ddc00117 	ldw	r23,4(sp)
   82a10:	d8800217 	ldw	r2,8(sp)
   82a14:	01000804 	movi	r4,32
   82a18:	b8c10c84 	addi	r3,r23,1074
   82a1c:	18a3883a 	add	r17,r3,r2
   82a20:	2441b80e 	bge	r4,r17,83104 <_dtoa_r+0xa40>
   82a24:	00c01004 	movi	r3,64
   82a28:	1c47c83a 	sub	r3,r3,r17
   82a2c:	88bff804 	addi	r2,r17,-32
   82a30:	a8c6983a 	sll	r3,r21,r3
   82a34:	a084d83a 	srl	r2,r20,r2
   82a38:	1888b03a 	or	r4,r3,r2
   82a3c:	00893000 	call	89300 <__floatunsidf>
   82a40:	1011883a 	mov	r8,r2
   82a44:	00bf8434 	movhi	r2,65040
   82a48:	01000044 	movi	r4,1
   82a4c:	10d3883a 	add	r9,r2,r3
   82a50:	8dbef344 	addi	r22,r17,-1075
   82a54:	d9000815 	stw	r4,32(sp)
   82a58:	003f6f06 	br	82818 <_dtoa_r+0x154>
   82a5c:	d8001715 	stw	zero,92(sp)
   82a60:	04400044 	movi	r17,1
   82a64:	00bfffc4 	movi	r2,-1
   82a68:	00c00044 	movi	r3,1
   82a6c:	d8800e15 	stw	r2,56(sp)
   82a70:	d8002615 	stw	zero,152(sp)
   82a74:	d8800f15 	stw	r2,60(sp)
   82a78:	d8c00b15 	stw	r3,44(sp)
   82a7c:	1021883a 	mov	r16,r2
   82a80:	d8801617 	ldw	r2,88(sp)
   82a84:	10001115 	stw	zero,68(r2)
   82a88:	d8801617 	ldw	r2,88(sp)
   82a8c:	11401117 	ldw	r5,68(r2)
   82a90:	1009883a 	mov	r4,r2
   82a94:	0085e0c0 	call	85e0c <_Balloc>
   82a98:	d8c01617 	ldw	r3,88(sp)
   82a9c:	d8800515 	stw	r2,20(sp)
   82aa0:	18801015 	stw	r2,64(r3)
   82aa4:	00800384 	movi	r2,14
   82aa8:	14006836 	bltu	r2,r16,82c4c <_dtoa_r+0x588>
   82aac:	8805003a 	cmpeq	r2,r17,zero
   82ab0:	1000661e 	bne	r2,zero,82c4c <_dtoa_r+0x588>
   82ab4:	d9000d17 	ldw	r4,52(sp)
   82ab8:	0102300e 	bge	zero,r4,8337c <_dtoa_r+0xcb8>
   82abc:	208003cc 	andi	r2,r4,15
   82ac0:	100490fa 	slli	r2,r2,3
   82ac4:	2025d13a 	srai	r18,r4,4
   82ac8:	00c00274 	movhi	r3,9
   82acc:	18f1be04 	addi	r3,r3,-14600
   82ad0:	10c5883a 	add	r2,r2,r3
   82ad4:	90c0040c 	andi	r3,r18,16
   82ad8:	14000017 	ldw	r16,0(r2)
   82adc:	14400117 	ldw	r17,4(r2)
   82ae0:	18036a1e 	bne	r3,zero,8388c <_dtoa_r+0x11c8>
   82ae4:	05800084 	movi	r22,2
   82ae8:	90001026 	beq	r18,zero,82b2c <_dtoa_r+0x468>
   82aec:	04c00274 	movhi	r19,9
   82af0:	9cf1f004 	addi	r19,r19,-14400
   82af4:	9080004c 	andi	r2,r18,1
   82af8:	1005003a 	cmpeq	r2,r2,zero
   82afc:	1000081e 	bne	r2,zero,82b20 <_dtoa_r+0x45c>
   82b00:	99800017 	ldw	r6,0(r19)
   82b04:	99c00117 	ldw	r7,4(r19)
   82b08:	880b883a 	mov	r5,r17
   82b0c:	8009883a 	mov	r4,r16
   82b10:	008886c0 	call	8886c <__muldf3>
   82b14:	1021883a 	mov	r16,r2
   82b18:	b5800044 	addi	r22,r22,1
   82b1c:	1823883a 	mov	r17,r3
   82b20:	9025d07a 	srai	r18,r18,1
   82b24:	9cc00204 	addi	r19,r19,8
   82b28:	903ff21e 	bne	r18,zero,82af4 <_dtoa_r+0x430>
   82b2c:	a80b883a 	mov	r5,r21
   82b30:	a009883a 	mov	r4,r20
   82b34:	880f883a 	mov	r7,r17
   82b38:	800d883a 	mov	r6,r16
   82b3c:	0088c300 	call	88c30 <__divdf3>
   82b40:	1029883a 	mov	r20,r2
   82b44:	182b883a 	mov	r21,r3
   82b48:	d8c00c17 	ldw	r3,48(sp)
   82b4c:	1805003a 	cmpeq	r2,r3,zero
   82b50:	1000081e 	bne	r2,zero,82b74 <_dtoa_r+0x4b0>
   82b54:	0005883a 	mov	r2,zero
   82b58:	00cffc34 	movhi	r3,16368
   82b5c:	180f883a 	mov	r7,r3
   82b60:	a009883a 	mov	r4,r20
   82b64:	a80b883a 	mov	r5,r21
   82b68:	100d883a 	mov	r6,r2
   82b6c:	00890a80 	call	890a8 <__ltdf2>
   82b70:	1003fe16 	blt	r2,zero,83b6c <_dtoa_r+0x14a8>
   82b74:	b009883a 	mov	r4,r22
   82b78:	00891300 	call	89130 <__floatsidf>
   82b7c:	180b883a 	mov	r5,r3
   82b80:	1009883a 	mov	r4,r2
   82b84:	a00d883a 	mov	r6,r20
   82b88:	a80f883a 	mov	r7,r21
   82b8c:	008886c0 	call	8886c <__muldf3>
   82b90:	0011883a 	mov	r8,zero
   82b94:	02500734 	movhi	r9,16412
   82b98:	1009883a 	mov	r4,r2
   82b9c:	180b883a 	mov	r5,r3
   82ba0:	480f883a 	mov	r7,r9
   82ba4:	400d883a 	mov	r6,r8
   82ba8:	00887f80 	call	887f8 <__adddf3>
   82bac:	d9000f17 	ldw	r4,60(sp)
   82bb0:	102d883a 	mov	r22,r2
   82bb4:	00bf3034 	movhi	r2,64704
   82bb8:	18b9883a 	add	fp,r3,r2
   82bbc:	e02f883a 	mov	r23,fp
   82bc0:	20028f1e 	bne	r4,zero,83600 <_dtoa_r+0xf3c>
   82bc4:	0005883a 	mov	r2,zero
   82bc8:	00d00534 	movhi	r3,16404
   82bcc:	a009883a 	mov	r4,r20
   82bd0:	a80b883a 	mov	r5,r21
   82bd4:	180f883a 	mov	r7,r3
   82bd8:	100d883a 	mov	r6,r2
   82bdc:	00887780 	call	88778 <__subdf3>
   82be0:	1009883a 	mov	r4,r2
   82be4:	e00f883a 	mov	r7,fp
   82be8:	180b883a 	mov	r5,r3
   82bec:	b00d883a 	mov	r6,r22
   82bf0:	1025883a 	mov	r18,r2
   82bf4:	1827883a 	mov	r19,r3
   82bf8:	0088f980 	call	88f98 <__gtdf2>
   82bfc:	00834f16 	blt	zero,r2,8393c <_dtoa_r+0x1278>
   82c00:	e0e0003c 	xorhi	r3,fp,32768
   82c04:	9009883a 	mov	r4,r18
   82c08:	980b883a 	mov	r5,r19
   82c0c:	180f883a 	mov	r7,r3
   82c10:	b00d883a 	mov	r6,r22
   82c14:	00890a80 	call	890a8 <__ltdf2>
   82c18:	1000080e 	bge	r2,zero,82c3c <_dtoa_r+0x578>
   82c1c:	0027883a 	mov	r19,zero
   82c20:	0025883a 	mov	r18,zero
   82c24:	d8802617 	ldw	r2,152(sp)
   82c28:	df000517 	ldw	fp,20(sp)
   82c2c:	d8000615 	stw	zero,24(sp)
   82c30:	0084303a 	nor	r2,zero,r2
   82c34:	d8800d15 	stw	r2,52(sp)
   82c38:	00019b06 	br	832a8 <_dtoa_r+0xbe4>
   82c3c:	d9801217 	ldw	r6,72(sp)
   82c40:	d8801317 	ldw	r2,76(sp)
   82c44:	3029883a 	mov	r20,r6
   82c48:	102b883a 	mov	r21,r2
   82c4c:	d8c00217 	ldw	r3,8(sp)
   82c50:	18008516 	blt	r3,zero,82e68 <_dtoa_r+0x7a4>
   82c54:	d9000d17 	ldw	r4,52(sp)
   82c58:	00800384 	movi	r2,14
   82c5c:	11008216 	blt	r2,r4,82e68 <_dtoa_r+0x7a4>
   82c60:	200490fa 	slli	r2,r4,3
   82c64:	d9802617 	ldw	r6,152(sp)
   82c68:	00c00274 	movhi	r3,9
   82c6c:	18f1be04 	addi	r3,r3,-14600
   82c70:	10c5883a 	add	r2,r2,r3
   82c74:	14800017 	ldw	r18,0(r2)
   82c78:	14c00117 	ldw	r19,4(r2)
   82c7c:	30031e16 	blt	r6,zero,838f8 <_dtoa_r+0x1234>
   82c80:	d9000517 	ldw	r4,20(sp)
   82c84:	d8c00f17 	ldw	r3,60(sp)
   82c88:	a823883a 	mov	r17,r21
   82c8c:	a021883a 	mov	r16,r20
   82c90:	192b883a 	add	r21,r3,r4
   82c94:	2039883a 	mov	fp,r4
   82c98:	00000f06 	br	82cd8 <_dtoa_r+0x614>
   82c9c:	0005883a 	mov	r2,zero
   82ca0:	00d00934 	movhi	r3,16420
   82ca4:	5009883a 	mov	r4,r10
   82ca8:	580b883a 	mov	r5,r11
   82cac:	180f883a 	mov	r7,r3
   82cb0:	100d883a 	mov	r6,r2
   82cb4:	008886c0 	call	8886c <__muldf3>
   82cb8:	180b883a 	mov	r5,r3
   82cbc:	000d883a 	mov	r6,zero
   82cc0:	000f883a 	mov	r7,zero
   82cc4:	1009883a 	mov	r4,r2
   82cc8:	1021883a 	mov	r16,r2
   82ccc:	1823883a 	mov	r17,r3
   82cd0:	0088f100 	call	88f10 <__nedf2>
   82cd4:	10004526 	beq	r2,zero,82dec <_dtoa_r+0x728>
   82cd8:	900d883a 	mov	r6,r18
   82cdc:	980f883a 	mov	r7,r19
   82ce0:	8009883a 	mov	r4,r16
   82ce4:	880b883a 	mov	r5,r17
   82ce8:	0088c300 	call	88c30 <__divdf3>
   82cec:	180b883a 	mov	r5,r3
   82cf0:	1009883a 	mov	r4,r2
   82cf4:	00892280 	call	89228 <__fixdfsi>
   82cf8:	1009883a 	mov	r4,r2
   82cfc:	1029883a 	mov	r20,r2
   82d00:	00891300 	call	89130 <__floatsidf>
   82d04:	180f883a 	mov	r7,r3
   82d08:	9009883a 	mov	r4,r18
   82d0c:	980b883a 	mov	r5,r19
   82d10:	100d883a 	mov	r6,r2
   82d14:	008886c0 	call	8886c <__muldf3>
   82d18:	180f883a 	mov	r7,r3
   82d1c:	880b883a 	mov	r5,r17
   82d20:	8009883a 	mov	r4,r16
   82d24:	100d883a 	mov	r6,r2
   82d28:	00887780 	call	88778 <__subdf3>
   82d2c:	1015883a 	mov	r10,r2
   82d30:	a0800c04 	addi	r2,r20,48
   82d34:	e0800005 	stb	r2,0(fp)
   82d38:	e7000044 	addi	fp,fp,1
   82d3c:	1817883a 	mov	r11,r3
   82d40:	e57fd61e 	bne	fp,r21,82c9c <_dtoa_r+0x5d8>
   82d44:	500d883a 	mov	r6,r10
   82d48:	180f883a 	mov	r7,r3
   82d4c:	5009883a 	mov	r4,r10
   82d50:	180b883a 	mov	r5,r3
   82d54:	00887f80 	call	887f8 <__adddf3>
   82d58:	100d883a 	mov	r6,r2
   82d5c:	9009883a 	mov	r4,r18
   82d60:	980b883a 	mov	r5,r19
   82d64:	180f883a 	mov	r7,r3
   82d68:	1021883a 	mov	r16,r2
   82d6c:	1823883a 	mov	r17,r3
   82d70:	00890a80 	call	890a8 <__ltdf2>
   82d74:	10000816 	blt	r2,zero,82d98 <_dtoa_r+0x6d4>
   82d78:	980b883a 	mov	r5,r19
   82d7c:	800d883a 	mov	r6,r16
   82d80:	880f883a 	mov	r7,r17
   82d84:	9009883a 	mov	r4,r18
   82d88:	0088e880 	call	88e88 <__eqdf2>
   82d8c:	1000171e 	bne	r2,zero,82dec <_dtoa_r+0x728>
   82d90:	a080004c 	andi	r2,r20,1
   82d94:	10001526 	beq	r2,zero,82dec <_dtoa_r+0x728>
   82d98:	d8800d17 	ldw	r2,52(sp)
   82d9c:	d8800415 	stw	r2,16(sp)
   82da0:	e009883a 	mov	r4,fp
   82da4:	213fffc4 	addi	r4,r4,-1
   82da8:	20c00007 	ldb	r3,0(r4)
   82dac:	00800e44 	movi	r2,57
   82db0:	1880081e 	bne	r3,r2,82dd4 <_dtoa_r+0x710>
   82db4:	d8800517 	ldw	r2,20(sp)
   82db8:	113ffa1e 	bne	r2,r4,82da4 <_dtoa_r+0x6e0>
   82dbc:	d8c00417 	ldw	r3,16(sp)
   82dc0:	d9800517 	ldw	r6,20(sp)
   82dc4:	00800c04 	movi	r2,48
   82dc8:	18c00044 	addi	r3,r3,1
   82dcc:	d8c00415 	stw	r3,16(sp)
   82dd0:	30800005 	stb	r2,0(r6)
   82dd4:	20800003 	ldbu	r2,0(r4)
   82dd8:	d8c00417 	ldw	r3,16(sp)
   82ddc:	27000044 	addi	fp,r4,1
   82de0:	10800044 	addi	r2,r2,1
   82de4:	d8c00d15 	stw	r3,52(sp)
   82de8:	20800005 	stb	r2,0(r4)
   82dec:	d9001617 	ldw	r4,88(sp)
   82df0:	d9400717 	ldw	r5,28(sp)
   82df4:	008588c0 	call	8588c <_Bfree>
   82df8:	e0000005 	stb	zero,0(fp)
   82dfc:	d9800d17 	ldw	r6,52(sp)
   82e00:	d8c02717 	ldw	r3,156(sp)
   82e04:	d9002917 	ldw	r4,164(sp)
   82e08:	30800044 	addi	r2,r6,1
   82e0c:	18800015 	stw	r2,0(r3)
   82e10:	20029c26 	beq	r4,zero,83884 <_dtoa_r+0x11c0>
   82e14:	d8c00517 	ldw	r3,20(sp)
   82e18:	27000015 	stw	fp,0(r4)
   82e1c:	003e5d06 	br	82794 <_dtoa_r+0xd0>
   82e20:	d9800d17 	ldw	r6,52(sp)
   82e24:	00c00274 	movhi	r3,9
   82e28:	18f1be04 	addi	r3,r3,-14600
   82e2c:	d9001217 	ldw	r4,72(sp)
   82e30:	300490fa 	slli	r2,r6,3
   82e34:	d9401317 	ldw	r5,76(sp)
   82e38:	10c5883a 	add	r2,r2,r3
   82e3c:	12000017 	ldw	r8,0(r2)
   82e40:	12400117 	ldw	r9,4(r2)
   82e44:	400d883a 	mov	r6,r8
   82e48:	480f883a 	mov	r7,r9
   82e4c:	00890a80 	call	890a8 <__ltdf2>
   82e50:	1000030e 	bge	r2,zero,82e60 <_dtoa_r+0x79c>
   82e54:	d8800d17 	ldw	r2,52(sp)
   82e58:	10bfffc4 	addi	r2,r2,-1
   82e5c:	d8800d15 	stw	r2,52(sp)
   82e60:	d8000c15 	stw	zero,48(sp)
   82e64:	003ea806 	br	82908 <_dtoa_r+0x244>
   82e68:	d9000b17 	ldw	r4,44(sp)
   82e6c:	202cc03a 	cmpne	r22,r4,zero
   82e70:	b000c71e 	bne	r22,zero,83190 <_dtoa_r+0xacc>
   82e74:	dc001117 	ldw	r16,68(sp)
   82e78:	dc801017 	ldw	r18,64(sp)
   82e7c:	0027883a 	mov	r19,zero
   82e80:	04000b0e 	bge	zero,r16,82eb0 <_dtoa_r+0x7ec>
   82e84:	d8c00a17 	ldw	r3,40(sp)
   82e88:	00c0090e 	bge	zero,r3,82eb0 <_dtoa_r+0x7ec>
   82e8c:	8005883a 	mov	r2,r16
   82e90:	1c011316 	blt	r3,r16,832e0 <_dtoa_r+0xc1c>
   82e94:	d9000a17 	ldw	r4,40(sp)
   82e98:	d9801117 	ldw	r6,68(sp)
   82e9c:	80a1c83a 	sub	r16,r16,r2
   82ea0:	2089c83a 	sub	r4,r4,r2
   82ea4:	308dc83a 	sub	r6,r6,r2
   82ea8:	d9000a15 	stw	r4,40(sp)
   82eac:	d9801115 	stw	r6,68(sp)
   82eb0:	d8801017 	ldw	r2,64(sp)
   82eb4:	0080150e 	bge	zero,r2,82f0c <_dtoa_r+0x848>
   82eb8:	d8c00b17 	ldw	r3,44(sp)
   82ebc:	1805003a 	cmpeq	r2,r3,zero
   82ec0:	1001c91e 	bne	r2,zero,835e8 <_dtoa_r+0xf24>
   82ec4:	04800e0e 	bge	zero,r18,82f00 <_dtoa_r+0x83c>
   82ec8:	d9001617 	ldw	r4,88(sp)
   82ecc:	980b883a 	mov	r5,r19
   82ed0:	900d883a 	mov	r6,r18
   82ed4:	00866d80 	call	866d8 <__pow5mult>
   82ed8:	d9001617 	ldw	r4,88(sp)
   82edc:	d9800717 	ldw	r6,28(sp)
   82ee0:	100b883a 	mov	r5,r2
   82ee4:	1027883a 	mov	r19,r2
   82ee8:	008631c0 	call	8631c <__multiply>
   82eec:	d9001617 	ldw	r4,88(sp)
   82ef0:	d9400717 	ldw	r5,28(sp)
   82ef4:	1023883a 	mov	r17,r2
   82ef8:	008588c0 	call	8588c <_Bfree>
   82efc:	dc400715 	stw	r17,28(sp)
   82f00:	d9001017 	ldw	r4,64(sp)
   82f04:	248dc83a 	sub	r6,r4,r18
   82f08:	30010e1e 	bne	r6,zero,83344 <_dtoa_r+0xc80>
   82f0c:	d9001617 	ldw	r4,88(sp)
   82f10:	04400044 	movi	r17,1
   82f14:	880b883a 	mov	r5,r17
   82f18:	00865700 	call	86570 <__i2b>
   82f1c:	d9800917 	ldw	r6,36(sp)
   82f20:	1025883a 	mov	r18,r2
   82f24:	0180040e 	bge	zero,r6,82f38 <_dtoa_r+0x874>
   82f28:	d9001617 	ldw	r4,88(sp)
   82f2c:	100b883a 	mov	r5,r2
   82f30:	00866d80 	call	866d8 <__pow5mult>
   82f34:	1025883a 	mov	r18,r2
   82f38:	d8801717 	ldw	r2,92(sp)
   82f3c:	8880f30e 	bge	r17,r2,8330c <_dtoa_r+0xc48>
   82f40:	0023883a 	mov	r17,zero
   82f44:	d9800917 	ldw	r6,36(sp)
   82f48:	30019e1e 	bne	r6,zero,835c4 <_dtoa_r+0xf00>
   82f4c:	00c00044 	movi	r3,1
   82f50:	d9000a17 	ldw	r4,40(sp)
   82f54:	20c5883a 	add	r2,r4,r3
   82f58:	10c007cc 	andi	r3,r2,31
   82f5c:	1800841e 	bne	r3,zero,83170 <_dtoa_r+0xaac>
   82f60:	00800704 	movi	r2,28
   82f64:	d9000a17 	ldw	r4,40(sp)
   82f68:	d9801117 	ldw	r6,68(sp)
   82f6c:	80a1883a 	add	r16,r16,r2
   82f70:	2089883a 	add	r4,r4,r2
   82f74:	308d883a 	add	r6,r6,r2
   82f78:	d9000a15 	stw	r4,40(sp)
   82f7c:	d9801115 	stw	r6,68(sp)
   82f80:	d8801117 	ldw	r2,68(sp)
   82f84:	0080050e 	bge	zero,r2,82f9c <_dtoa_r+0x8d8>
   82f88:	d9400717 	ldw	r5,28(sp)
   82f8c:	d9001617 	ldw	r4,88(sp)
   82f90:	100d883a 	mov	r6,r2
   82f94:	00861d00 	call	861d0 <__lshift>
   82f98:	d8800715 	stw	r2,28(sp)
   82f9c:	d8c00a17 	ldw	r3,40(sp)
   82fa0:	00c0050e 	bge	zero,r3,82fb8 <_dtoa_r+0x8f4>
   82fa4:	d9001617 	ldw	r4,88(sp)
   82fa8:	900b883a 	mov	r5,r18
   82fac:	180d883a 	mov	r6,r3
   82fb0:	00861d00 	call	861d0 <__lshift>
   82fb4:	1025883a 	mov	r18,r2
   82fb8:	d9000c17 	ldw	r4,48(sp)
   82fbc:	2005003a 	cmpeq	r2,r4,zero
   82fc0:	10016f26 	beq	r2,zero,83580 <_dtoa_r+0xebc>
   82fc4:	d9000f17 	ldw	r4,60(sp)
   82fc8:	0102170e 	bge	zero,r4,83828 <_dtoa_r+0x1164>
   82fcc:	d9800b17 	ldw	r6,44(sp)
   82fd0:	3005003a 	cmpeq	r2,r6,zero
   82fd4:	1000881e 	bne	r2,zero,831f8 <_dtoa_r+0xb34>
   82fd8:	0400050e 	bge	zero,r16,82ff0 <_dtoa_r+0x92c>
   82fdc:	d9001617 	ldw	r4,88(sp)
   82fe0:	980b883a 	mov	r5,r19
   82fe4:	800d883a 	mov	r6,r16
   82fe8:	00861d00 	call	861d0 <__lshift>
   82fec:	1027883a 	mov	r19,r2
   82ff0:	8804c03a 	cmpne	r2,r17,zero
   82ff4:	1002541e 	bne	r2,zero,83948 <_dtoa_r+0x1284>
   82ff8:	980b883a 	mov	r5,r19
   82ffc:	dd800517 	ldw	r22,20(sp)
   83000:	dcc00615 	stw	r19,24(sp)
   83004:	a700004c 	andi	fp,r20,1
   83008:	2827883a 	mov	r19,r5
   8300c:	d9000717 	ldw	r4,28(sp)
   83010:	900b883a 	mov	r5,r18
   83014:	00824800 	call	82480 <quorem>
   83018:	d9000717 	ldw	r4,28(sp)
   8301c:	d9400617 	ldw	r5,24(sp)
   83020:	1023883a 	mov	r17,r2
   83024:	8dc00c04 	addi	r23,r17,48
   83028:	00859e80 	call	859e8 <__mcmp>
   8302c:	d9001617 	ldw	r4,88(sp)
   83030:	900b883a 	mov	r5,r18
   83034:	980d883a 	mov	r6,r19
   83038:	1029883a 	mov	r20,r2
   8303c:	00860440 	call	86044 <__mdiff>
   83040:	102b883a 	mov	r21,r2
   83044:	10800317 	ldw	r2,12(r2)
   83048:	1001281e 	bne	r2,zero,834ec <_dtoa_r+0xe28>
   8304c:	d9000717 	ldw	r4,28(sp)
   83050:	a80b883a 	mov	r5,r21
   83054:	00859e80 	call	859e8 <__mcmp>
   83058:	d9001617 	ldw	r4,88(sp)
   8305c:	1021883a 	mov	r16,r2
   83060:	a80b883a 	mov	r5,r21
   83064:	008588c0 	call	8588c <_Bfree>
   83068:	8000041e 	bne	r16,zero,8307c <_dtoa_r+0x9b8>
   8306c:	d8801717 	ldw	r2,92(sp)
   83070:	1000021e 	bne	r2,zero,8307c <_dtoa_r+0x9b8>
   83074:	e004c03a 	cmpne	r2,fp,zero
   83078:	10011726 	beq	r2,zero,834d8 <_dtoa_r+0xe14>
   8307c:	a0010616 	blt	r20,zero,83498 <_dtoa_r+0xdd4>
   83080:	a000041e 	bne	r20,zero,83094 <_dtoa_r+0x9d0>
   83084:	d8c01717 	ldw	r3,92(sp)
   83088:	1800021e 	bne	r3,zero,83094 <_dtoa_r+0x9d0>
   8308c:	e004c03a 	cmpne	r2,fp,zero
   83090:	10010126 	beq	r2,zero,83498 <_dtoa_r+0xdd4>
   83094:	04023d16 	blt	zero,r16,8398c <_dtoa_r+0x12c8>
   83098:	b5c00005 	stb	r23,0(r22)
   8309c:	d9800517 	ldw	r6,20(sp)
   830a0:	d9000f17 	ldw	r4,60(sp)
   830a4:	b5800044 	addi	r22,r22,1
   830a8:	3105883a 	add	r2,r6,r4
   830ac:	b0806526 	beq	r22,r2,83244 <_dtoa_r+0xb80>
   830b0:	d9400717 	ldw	r5,28(sp)
   830b4:	d9001617 	ldw	r4,88(sp)
   830b8:	01800284 	movi	r6,10
   830bc:	000f883a 	mov	r7,zero
   830c0:	00865ac0 	call	865ac <__multadd>
   830c4:	d8800715 	stw	r2,28(sp)
   830c8:	d8800617 	ldw	r2,24(sp)
   830cc:	14c10c26 	beq	r2,r19,83500 <_dtoa_r+0xe3c>
   830d0:	d9400617 	ldw	r5,24(sp)
   830d4:	d9001617 	ldw	r4,88(sp)
   830d8:	01800284 	movi	r6,10
   830dc:	000f883a 	mov	r7,zero
   830e0:	00865ac0 	call	865ac <__multadd>
   830e4:	d9001617 	ldw	r4,88(sp)
   830e8:	980b883a 	mov	r5,r19
   830ec:	01800284 	movi	r6,10
   830f0:	000f883a 	mov	r7,zero
   830f4:	d8800615 	stw	r2,24(sp)
   830f8:	00865ac0 	call	865ac <__multadd>
   830fc:	1027883a 	mov	r19,r2
   83100:	003fc206 	br	8300c <_dtoa_r+0x948>
   83104:	2445c83a 	sub	r2,r4,r17
   83108:	a088983a 	sll	r4,r20,r2
   8310c:	003e4b06 	br	82a3c <_dtoa_r+0x378>
   83110:	01bfffc4 	movi	r6,-1
   83114:	00800044 	movi	r2,1
   83118:	d9800e15 	stw	r6,56(sp)
   8311c:	d9800f15 	stw	r6,60(sp)
   83120:	d8800b15 	stw	r2,44(sp)
   83124:	d8c01617 	ldw	r3,88(sp)
   83128:	008005c4 	movi	r2,23
   8312c:	18001115 	stw	zero,68(r3)
   83130:	1580082e 	bgeu	r2,r22,83154 <_dtoa_r+0xa90>
   83134:	00c00104 	movi	r3,4
   83138:	0009883a 	mov	r4,zero
   8313c:	18c7883a 	add	r3,r3,r3
   83140:	18800504 	addi	r2,r3,20
   83144:	21000044 	addi	r4,r4,1
   83148:	b0bffc2e 	bgeu	r22,r2,8313c <_dtoa_r+0xa78>
   8314c:	d9801617 	ldw	r6,88(sp)
   83150:	31001115 	stw	r4,68(r6)
   83154:	dc000f17 	ldw	r16,60(sp)
   83158:	003e4b06 	br	82a88 <_dtoa_r+0x3c4>
   8315c:	d9801717 	ldw	r6,92(sp)
   83160:	0023883a 	mov	r17,zero
   83164:	31bfff04 	addi	r6,r6,-4
   83168:	d9801715 	stw	r6,92(sp)
   8316c:	003df806 	br	82950 <_dtoa_r+0x28c>
   83170:	00800804 	movi	r2,32
   83174:	10c9c83a 	sub	r4,r2,r3
   83178:	00c00104 	movi	r3,4
   8317c:	19005a16 	blt	r3,r4,832e8 <_dtoa_r+0xc24>
   83180:	008000c4 	movi	r2,3
   83184:	113f7e16 	blt	r2,r4,82f80 <_dtoa_r+0x8bc>
   83188:	20800704 	addi	r2,r4,28
   8318c:	003f7506 	br	82f64 <_dtoa_r+0x8a0>
   83190:	d9801717 	ldw	r6,92(sp)
   83194:	00800044 	movi	r2,1
   83198:	1180a10e 	bge	r2,r6,83420 <_dtoa_r+0xd5c>
   8319c:	d9800f17 	ldw	r6,60(sp)
   831a0:	d8c01017 	ldw	r3,64(sp)
   831a4:	30bfffc4 	addi	r2,r6,-1
   831a8:	1881c616 	blt	r3,r2,838c4 <_dtoa_r+0x1200>
   831ac:	18a5c83a 	sub	r18,r3,r2
   831b0:	d8800f17 	ldw	r2,60(sp)
   831b4:	10026216 	blt	r2,zero,83b40 <_dtoa_r+0x147c>
   831b8:	dc001117 	ldw	r16,68(sp)
   831bc:	1007883a 	mov	r3,r2
   831c0:	d9800a17 	ldw	r6,40(sp)
   831c4:	d8801117 	ldw	r2,68(sp)
   831c8:	d9001617 	ldw	r4,88(sp)
   831cc:	30cd883a 	add	r6,r6,r3
   831d0:	10c5883a 	add	r2,r2,r3
   831d4:	01400044 	movi	r5,1
   831d8:	d9800a15 	stw	r6,40(sp)
   831dc:	d8801115 	stw	r2,68(sp)
   831e0:	00865700 	call	86570 <__i2b>
   831e4:	1027883a 	mov	r19,r2
   831e8:	003f2506 	br	82e80 <_dtoa_r+0x7bc>
   831ec:	00c00274 	movhi	r3,9
   831f0:	18f1a004 	addi	r3,r3,-14720
   831f4:	003d6706 	br	82794 <_dtoa_r+0xd0>
   831f8:	dd800517 	ldw	r22,20(sp)
   831fc:	04000044 	movi	r16,1
   83200:	00000706 	br	83220 <_dtoa_r+0xb5c>
   83204:	d9400717 	ldw	r5,28(sp)
   83208:	d9001617 	ldw	r4,88(sp)
   8320c:	01800284 	movi	r6,10
   83210:	000f883a 	mov	r7,zero
   83214:	00865ac0 	call	865ac <__multadd>
   83218:	d8800715 	stw	r2,28(sp)
   8321c:	84000044 	addi	r16,r16,1
   83220:	d9000717 	ldw	r4,28(sp)
   83224:	900b883a 	mov	r5,r18
   83228:	00824800 	call	82480 <quorem>
   8322c:	15c00c04 	addi	r23,r2,48
   83230:	b5c00005 	stb	r23,0(r22)
   83234:	d8c00f17 	ldw	r3,60(sp)
   83238:	b5800044 	addi	r22,r22,1
   8323c:	80fff116 	blt	r16,r3,83204 <_dtoa_r+0xb40>
   83240:	d8000615 	stw	zero,24(sp)
   83244:	d9400717 	ldw	r5,28(sp)
   83248:	d9001617 	ldw	r4,88(sp)
   8324c:	01800044 	movi	r6,1
   83250:	00861d00 	call	861d0 <__lshift>
   83254:	1009883a 	mov	r4,r2
   83258:	900b883a 	mov	r5,r18
   8325c:	d8800715 	stw	r2,28(sp)
   83260:	00859e80 	call	859e8 <__mcmp>
   83264:	00803c0e 	bge	zero,r2,83358 <_dtoa_r+0xc94>
   83268:	b009883a 	mov	r4,r22
   8326c:	213fffc4 	addi	r4,r4,-1
   83270:	21400003 	ldbu	r5,0(r4)
   83274:	00800e44 	movi	r2,57
   83278:	28c03fcc 	andi	r3,r5,255
   8327c:	18c0201c 	xori	r3,r3,128
   83280:	18ffe004 	addi	r3,r3,-128
   83284:	1881981e 	bne	r3,r2,838e8 <_dtoa_r+0x1224>
   83288:	d9800517 	ldw	r6,20(sp)
   8328c:	21bff71e 	bne	r4,r6,8326c <_dtoa_r+0xba8>
   83290:	d8800d17 	ldw	r2,52(sp)
   83294:	37000044 	addi	fp,r6,1
   83298:	10800044 	addi	r2,r2,1
   8329c:	d8800d15 	stw	r2,52(sp)
   832a0:	00800c44 	movi	r2,49
   832a4:	30800005 	stb	r2,0(r6)
   832a8:	d9001617 	ldw	r4,88(sp)
   832ac:	900b883a 	mov	r5,r18
   832b0:	008588c0 	call	8588c <_Bfree>
   832b4:	983ecd26 	beq	r19,zero,82dec <_dtoa_r+0x728>
   832b8:	d8c00617 	ldw	r3,24(sp)
   832bc:	18000426 	beq	r3,zero,832d0 <_dtoa_r+0xc0c>
   832c0:	1cc00326 	beq	r3,r19,832d0 <_dtoa_r+0xc0c>
   832c4:	d9001617 	ldw	r4,88(sp)
   832c8:	180b883a 	mov	r5,r3
   832cc:	008588c0 	call	8588c <_Bfree>
   832d0:	d9001617 	ldw	r4,88(sp)
   832d4:	980b883a 	mov	r5,r19
   832d8:	008588c0 	call	8588c <_Bfree>
   832dc:	003ec306 	br	82dec <_dtoa_r+0x728>
   832e0:	1805883a 	mov	r2,r3
   832e4:	003eeb06 	br	82e94 <_dtoa_r+0x7d0>
   832e8:	d9800a17 	ldw	r6,40(sp)
   832ec:	d8c01117 	ldw	r3,68(sp)
   832f0:	20bfff04 	addi	r2,r4,-4
   832f4:	308d883a 	add	r6,r6,r2
   832f8:	1887883a 	add	r3,r3,r2
   832fc:	80a1883a 	add	r16,r16,r2
   83300:	d9800a15 	stw	r6,40(sp)
   83304:	d8c01115 	stw	r3,68(sp)
   83308:	003f1d06 	br	82f80 <_dtoa_r+0x8bc>
   8330c:	a03f0c1e 	bne	r20,zero,82f40 <_dtoa_r+0x87c>
   83310:	00800434 	movhi	r2,16
   83314:	10bfffc4 	addi	r2,r2,-1
   83318:	a884703a 	and	r2,r21,r2
   8331c:	103f081e 	bne	r2,zero,82f40 <_dtoa_r+0x87c>
   83320:	a89ffc2c 	andhi	r2,r21,32752
   83324:	103f0626 	beq	r2,zero,82f40 <_dtoa_r+0x87c>
   83328:	d8c01117 	ldw	r3,68(sp)
   8332c:	d9000a17 	ldw	r4,40(sp)
   83330:	18c00044 	addi	r3,r3,1
   83334:	21000044 	addi	r4,r4,1
   83338:	d8c01115 	stw	r3,68(sp)
   8333c:	d9000a15 	stw	r4,40(sp)
   83340:	003f0006 	br	82f44 <_dtoa_r+0x880>
   83344:	d9400717 	ldw	r5,28(sp)
   83348:	d9001617 	ldw	r4,88(sp)
   8334c:	00866d80 	call	866d8 <__pow5mult>
   83350:	d8800715 	stw	r2,28(sp)
   83354:	003eed06 	br	82f0c <_dtoa_r+0x848>
   83358:	1000021e 	bne	r2,zero,83364 <_dtoa_r+0xca0>
   8335c:	b880004c 	andi	r2,r23,1
   83360:	103fc11e 	bne	r2,zero,83268 <_dtoa_r+0xba4>
   83364:	b5bfffc4 	addi	r22,r22,-1
   83368:	b0c00007 	ldb	r3,0(r22)
   8336c:	00800c04 	movi	r2,48
   83370:	18bffc26 	beq	r3,r2,83364 <_dtoa_r+0xca0>
   83374:	b7000044 	addi	fp,r22,1
   83378:	003fcb06 	br	832a8 <_dtoa_r+0xbe4>
   8337c:	d9800d17 	ldw	r6,52(sp)
   83380:	018fc83a 	sub	r7,zero,r6
   83384:	3801f726 	beq	r7,zero,83b64 <_dtoa_r+0x14a0>
   83388:	398003cc 	andi	r6,r7,15
   8338c:	300c90fa 	slli	r6,r6,3
   83390:	01400274 	movhi	r5,9
   83394:	2971be04 	addi	r5,r5,-14600
   83398:	d9001217 	ldw	r4,72(sp)
   8339c:	314d883a 	add	r6,r6,r5
   833a0:	30c00117 	ldw	r3,4(r6)
   833a4:	30800017 	ldw	r2,0(r6)
   833a8:	d9401317 	ldw	r5,76(sp)
   833ac:	3821d13a 	srai	r16,r7,4
   833b0:	100d883a 	mov	r6,r2
   833b4:	180f883a 	mov	r7,r3
   833b8:	008886c0 	call	8886c <__muldf3>
   833bc:	1011883a 	mov	r8,r2
   833c0:	1813883a 	mov	r9,r3
   833c4:	1029883a 	mov	r20,r2
   833c8:	182b883a 	mov	r21,r3
   833cc:	8001e526 	beq	r16,zero,83b64 <_dtoa_r+0x14a0>
   833d0:	05800084 	movi	r22,2
   833d4:	04400274 	movhi	r17,9
   833d8:	8c71f004 	addi	r17,r17,-14400
   833dc:	8080004c 	andi	r2,r16,1
   833e0:	1005003a 	cmpeq	r2,r2,zero
   833e4:	1000081e 	bne	r2,zero,83408 <_dtoa_r+0xd44>
   833e8:	89800017 	ldw	r6,0(r17)
   833ec:	89c00117 	ldw	r7,4(r17)
   833f0:	480b883a 	mov	r5,r9
   833f4:	4009883a 	mov	r4,r8
   833f8:	008886c0 	call	8886c <__muldf3>
   833fc:	1011883a 	mov	r8,r2
   83400:	b5800044 	addi	r22,r22,1
   83404:	1813883a 	mov	r9,r3
   83408:	8021d07a 	srai	r16,r16,1
   8340c:	8c400204 	addi	r17,r17,8
   83410:	803ff21e 	bne	r16,zero,833dc <_dtoa_r+0xd18>
   83414:	4029883a 	mov	r20,r8
   83418:	482b883a 	mov	r21,r9
   8341c:	003dca06 	br	82b48 <_dtoa_r+0x484>
   83420:	d9000817 	ldw	r4,32(sp)
   83424:	2005003a 	cmpeq	r2,r4,zero
   83428:	1001f61e 	bne	r2,zero,83c04 <_dtoa_r+0x1540>
   8342c:	dc001117 	ldw	r16,68(sp)
   83430:	dc801017 	ldw	r18,64(sp)
   83434:	18c10cc4 	addi	r3,r3,1075
   83438:	003f6106 	br	831c0 <_dtoa_r+0xafc>
   8343c:	d8000b15 	stw	zero,44(sp)
   83440:	d9802617 	ldw	r6,152(sp)
   83444:	d8c00d17 	ldw	r3,52(sp)
   83448:	30800044 	addi	r2,r6,1
   8344c:	18ad883a 	add	r22,r3,r2
   83450:	b13fffc4 	addi	r4,r22,-1
   83454:	d9000e15 	stw	r4,56(sp)
   83458:	0581f60e 	bge	zero,r22,83c34 <_dtoa_r+0x1570>
   8345c:	dd800f15 	stw	r22,60(sp)
   83460:	003f3006 	br	83124 <_dtoa_r+0xa60>
   83464:	d8000b15 	stw	zero,44(sp)
   83468:	d9002617 	ldw	r4,152(sp)
   8346c:	0101eb0e 	bge	zero,r4,83c1c <_dtoa_r+0x1558>
   83470:	202d883a 	mov	r22,r4
   83474:	d9000e15 	stw	r4,56(sp)
   83478:	d9000f15 	stw	r4,60(sp)
   8347c:	003f2906 	br	83124 <_dtoa_r+0xa60>
   83480:	01800044 	movi	r6,1
   83484:	d9800b15 	stw	r6,44(sp)
   83488:	003ff706 	br	83468 <_dtoa_r+0xda4>
   8348c:	01000044 	movi	r4,1
   83490:	d9000b15 	stw	r4,44(sp)
   83494:	003fea06 	br	83440 <_dtoa_r+0xd7c>
   83498:	04000c0e 	bge	zero,r16,834cc <_dtoa_r+0xe08>
   8349c:	d9400717 	ldw	r5,28(sp)
   834a0:	d9001617 	ldw	r4,88(sp)
   834a4:	01800044 	movi	r6,1
   834a8:	00861d00 	call	861d0 <__lshift>
   834ac:	1009883a 	mov	r4,r2
   834b0:	900b883a 	mov	r5,r18
   834b4:	d8800715 	stw	r2,28(sp)
   834b8:	00859e80 	call	859e8 <__mcmp>
   834bc:	0081e00e 	bge	zero,r2,83c40 <_dtoa_r+0x157c>
   834c0:	bdc00044 	addi	r23,r23,1
   834c4:	00800e84 	movi	r2,58
   834c8:	b881a226 	beq	r23,r2,83b54 <_dtoa_r+0x1490>
   834cc:	b7000044 	addi	fp,r22,1
   834d0:	b5c00005 	stb	r23,0(r22)
   834d4:	003f7406 	br	832a8 <_dtoa_r+0xbe4>
   834d8:	00800e44 	movi	r2,57
   834dc:	b8819d26 	beq	r23,r2,83b54 <_dtoa_r+0x1490>
   834e0:	053ffa0e 	bge	zero,r20,834cc <_dtoa_r+0xe08>
   834e4:	8dc00c44 	addi	r23,r17,49
   834e8:	003ff806 	br	834cc <_dtoa_r+0xe08>
   834ec:	d9001617 	ldw	r4,88(sp)
   834f0:	a80b883a 	mov	r5,r21
   834f4:	04000044 	movi	r16,1
   834f8:	008588c0 	call	8588c <_Bfree>
   834fc:	003edf06 	br	8307c <_dtoa_r+0x9b8>
   83500:	d9001617 	ldw	r4,88(sp)
   83504:	980b883a 	mov	r5,r19
   83508:	01800284 	movi	r6,10
   8350c:	000f883a 	mov	r7,zero
   83510:	00865ac0 	call	865ac <__multadd>
   83514:	1027883a 	mov	r19,r2
   83518:	d8800615 	stw	r2,24(sp)
   8351c:	003ebb06 	br	8300c <_dtoa_r+0x948>
   83520:	d9801117 	ldw	r6,68(sp)
   83524:	d8800d17 	ldw	r2,52(sp)
   83528:	d8000915 	stw	zero,36(sp)
   8352c:	308dc83a 	sub	r6,r6,r2
   83530:	0087c83a 	sub	r3,zero,r2
   83534:	d9801115 	stw	r6,68(sp)
   83538:	d8c01015 	stw	r3,64(sp)
   8353c:	003cfe06 	br	82938 <_dtoa_r+0x274>
   83540:	018dc83a 	sub	r6,zero,r6
   83544:	d9801115 	stw	r6,68(sp)
   83548:	d8000a15 	stw	zero,40(sp)
   8354c:	003cf306 	br	8291c <_dtoa_r+0x258>
   83550:	d9000d17 	ldw	r4,52(sp)
   83554:	00891300 	call	89130 <__floatsidf>
   83558:	880b883a 	mov	r5,r17
   8355c:	8009883a 	mov	r4,r16
   83560:	180f883a 	mov	r7,r3
   83564:	100d883a 	mov	r6,r2
   83568:	0088f100 	call	88f10 <__nedf2>
   8356c:	103ce126 	beq	r2,zero,828f4 <_dtoa_r+0x230>
   83570:	d9800d17 	ldw	r6,52(sp)
   83574:	31bfffc4 	addi	r6,r6,-1
   83578:	d9800d15 	stw	r6,52(sp)
   8357c:	003cdd06 	br	828f4 <_dtoa_r+0x230>
   83580:	d9000717 	ldw	r4,28(sp)
   83584:	900b883a 	mov	r5,r18
   83588:	00859e80 	call	859e8 <__mcmp>
   8358c:	103e8d0e 	bge	r2,zero,82fc4 <_dtoa_r+0x900>
   83590:	d9400717 	ldw	r5,28(sp)
   83594:	d9001617 	ldw	r4,88(sp)
   83598:	01800284 	movi	r6,10
   8359c:	000f883a 	mov	r7,zero
   835a0:	00865ac0 	call	865ac <__multadd>
   835a4:	d9800d17 	ldw	r6,52(sp)
   835a8:	d8800715 	stw	r2,28(sp)
   835ac:	31bfffc4 	addi	r6,r6,-1
   835b0:	d9800d15 	stw	r6,52(sp)
   835b4:	b001a71e 	bne	r22,zero,83c54 <_dtoa_r+0x1590>
   835b8:	d8800e17 	ldw	r2,56(sp)
   835bc:	d8800f15 	stw	r2,60(sp)
   835c0:	003e8006 	br	82fc4 <_dtoa_r+0x900>
   835c4:	90800417 	ldw	r2,16(r18)
   835c8:	1085883a 	add	r2,r2,r2
   835cc:	1085883a 	add	r2,r2,r2
   835d0:	1485883a 	add	r2,r2,r18
   835d4:	11000417 	ldw	r4,16(r2)
   835d8:	00858b40 	call	858b4 <__hi0bits>
   835dc:	00c00804 	movi	r3,32
   835e0:	1887c83a 	sub	r3,r3,r2
   835e4:	003e5a06 	br	82f50 <_dtoa_r+0x88c>
   835e8:	d9400717 	ldw	r5,28(sp)
   835ec:	d9801017 	ldw	r6,64(sp)
   835f0:	d9001617 	ldw	r4,88(sp)
   835f4:	00866d80 	call	866d8 <__pow5mult>
   835f8:	d8800715 	stw	r2,28(sp)
   835fc:	003e4306 	br	82f0c <_dtoa_r+0x848>
   83600:	d9800f17 	ldw	r6,60(sp)
   83604:	d8800d17 	ldw	r2,52(sp)
   83608:	d9800315 	stw	r6,12(sp)
   8360c:	d8800415 	stw	r2,16(sp)
   83610:	d8c00b17 	ldw	r3,44(sp)
   83614:	1805003a 	cmpeq	r2,r3,zero
   83618:	1000e21e 	bne	r2,zero,839a4 <_dtoa_r+0x12e0>
   8361c:	d9000317 	ldw	r4,12(sp)
   83620:	0005883a 	mov	r2,zero
   83624:	00cff834 	movhi	r3,16352
   83628:	200c90fa 	slli	r6,r4,3
   8362c:	01000274 	movhi	r4,9
   83630:	2131be04 	addi	r4,r4,-14600
   83634:	180b883a 	mov	r5,r3
   83638:	310d883a 	add	r6,r6,r4
   8363c:	327fff17 	ldw	r9,-4(r6)
   83640:	323ffe17 	ldw	r8,-8(r6)
   83644:	1009883a 	mov	r4,r2
   83648:	480f883a 	mov	r7,r9
   8364c:	400d883a 	mov	r6,r8
   83650:	0088c300 	call	88c30 <__divdf3>
   83654:	180b883a 	mov	r5,r3
   83658:	b00d883a 	mov	r6,r22
   8365c:	b80f883a 	mov	r7,r23
   83660:	1009883a 	mov	r4,r2
   83664:	00887780 	call	88778 <__subdf3>
   83668:	a80b883a 	mov	r5,r21
   8366c:	a009883a 	mov	r4,r20
   83670:	d8c01915 	stw	r3,100(sp)
   83674:	d8801815 	stw	r2,96(sp)
   83678:	00892280 	call	89228 <__fixdfsi>
   8367c:	1009883a 	mov	r4,r2
   83680:	1027883a 	mov	r19,r2
   83684:	00891300 	call	89130 <__floatsidf>
   83688:	a80b883a 	mov	r5,r21
   8368c:	a009883a 	mov	r4,r20
   83690:	180f883a 	mov	r7,r3
   83694:	100d883a 	mov	r6,r2
   83698:	00887780 	call	88778 <__subdf3>
   8369c:	d9801817 	ldw	r6,96(sp)
   836a0:	1823883a 	mov	r17,r3
   836a4:	d8801415 	stw	r2,80(sp)
   836a8:	302d883a 	mov	r22,r6
   836ac:	d9800517 	ldw	r6,20(sp)
   836b0:	9cc00c04 	addi	r19,r19,48
   836b4:	dc401515 	stw	r17,84(sp)
   836b8:	d8c01917 	ldw	r3,100(sp)
   836bc:	34c00005 	stb	r19,0(r6)
   836c0:	d8800517 	ldw	r2,20(sp)
   836c4:	d9401917 	ldw	r5,100(sp)
   836c8:	d9801417 	ldw	r6,80(sp)
   836cc:	b009883a 	mov	r4,r22
   836d0:	880f883a 	mov	r7,r17
   836d4:	182f883a 	mov	r23,r3
   836d8:	17000044 	addi	fp,r2,1
   836dc:	0088f980 	call	88f98 <__gtdf2>
   836e0:	00804e16 	blt	zero,r2,8381c <_dtoa_r+0x1158>
   836e4:	d9801417 	ldw	r6,80(sp)
   836e8:	0005883a 	mov	r2,zero
   836ec:	00cffc34 	movhi	r3,16368
   836f0:	180b883a 	mov	r5,r3
   836f4:	880f883a 	mov	r7,r17
   836f8:	1009883a 	mov	r4,r2
   836fc:	00887780 	call	88778 <__subdf3>
   83700:	d9401917 	ldw	r5,100(sp)
   83704:	180f883a 	mov	r7,r3
   83708:	b009883a 	mov	r4,r22
   8370c:	100d883a 	mov	r6,r2
   83710:	0088f980 	call	88f98 <__gtdf2>
   83714:	00bda216 	blt	zero,r2,82da0 <_dtoa_r+0x6dc>
   83718:	d8c00317 	ldw	r3,12(sp)
   8371c:	00800044 	movi	r2,1
   83720:	10c01216 	blt	r2,r3,8376c <_dtoa_r+0x10a8>
   83724:	003d4506 	br	82c3c <_dtoa_r+0x578>
   83728:	d9801417 	ldw	r6,80(sp)
   8372c:	0005883a 	mov	r2,zero
   83730:	00cffc34 	movhi	r3,16368
   83734:	180b883a 	mov	r5,r3
   83738:	880f883a 	mov	r7,r17
   8373c:	1009883a 	mov	r4,r2
   83740:	00887780 	call	88778 <__subdf3>
   83744:	d9c01b17 	ldw	r7,108(sp)
   83748:	180b883a 	mov	r5,r3
   8374c:	1009883a 	mov	r4,r2
   83750:	b00d883a 	mov	r6,r22
   83754:	00890a80 	call	890a8 <__ltdf2>
   83758:	103d9116 	blt	r2,zero,82da0 <_dtoa_r+0x6dc>
   8375c:	d9800517 	ldw	r6,20(sp)
   83760:	d9000317 	ldw	r4,12(sp)
   83764:	3105883a 	add	r2,r6,r4
   83768:	e0bd3426 	beq	fp,r2,82c3c <_dtoa_r+0x578>
   8376c:	04500934 	movhi	r17,16420
   83770:	0021883a 	mov	r16,zero
   83774:	b80b883a 	mov	r5,r23
   83778:	b009883a 	mov	r4,r22
   8377c:	800d883a 	mov	r6,r16
   83780:	880f883a 	mov	r7,r17
   83784:	008886c0 	call	8886c <__muldf3>
   83788:	d9401517 	ldw	r5,84(sp)
   8378c:	d9001417 	ldw	r4,80(sp)
   83790:	880f883a 	mov	r7,r17
   83794:	000d883a 	mov	r6,zero
   83798:	d8801a15 	stw	r2,104(sp)
   8379c:	d8c01b15 	stw	r3,108(sp)
   837a0:	008886c0 	call	8886c <__muldf3>
   837a4:	180b883a 	mov	r5,r3
   837a8:	1009883a 	mov	r4,r2
   837ac:	1823883a 	mov	r17,r3
   837b0:	1021883a 	mov	r16,r2
   837b4:	00892280 	call	89228 <__fixdfsi>
   837b8:	1009883a 	mov	r4,r2
   837bc:	102b883a 	mov	r21,r2
   837c0:	00891300 	call	89130 <__floatsidf>
   837c4:	880b883a 	mov	r5,r17
   837c8:	8009883a 	mov	r4,r16
   837cc:	180f883a 	mov	r7,r3
   837d0:	100d883a 	mov	r6,r2
   837d4:	00887780 	call	88778 <__subdf3>
   837d8:	1021883a 	mov	r16,r2
   837dc:	d9001b17 	ldw	r4,108(sp)
   837e0:	1823883a 	mov	r17,r3
   837e4:	dc001415 	stw	r16,80(sp)
   837e8:	ad400c04 	addi	r21,r21,48
   837ec:	dc401515 	stw	r17,84(sp)
   837f0:	d8801a17 	ldw	r2,104(sp)
   837f4:	e5400005 	stb	r21,0(fp)
   837f8:	202f883a 	mov	r23,r4
   837fc:	d9c01b17 	ldw	r7,108(sp)
   83800:	d9001417 	ldw	r4,80(sp)
   83804:	880b883a 	mov	r5,r17
   83808:	100d883a 	mov	r6,r2
   8380c:	102d883a 	mov	r22,r2
   83810:	e7000044 	addi	fp,fp,1
   83814:	00890a80 	call	890a8 <__ltdf2>
   83818:	103fc30e 	bge	r2,zero,83728 <_dtoa_r+0x1064>
   8381c:	d9000417 	ldw	r4,16(sp)
   83820:	d9000d15 	stw	r4,52(sp)
   83824:	003d7106 	br	82dec <_dtoa_r+0x728>
   83828:	d9801717 	ldw	r6,92(sp)
   8382c:	00800084 	movi	r2,2
   83830:	11bde60e 	bge	r2,r6,82fcc <_dtoa_r+0x908>
   83834:	203cfb1e 	bne	r4,zero,82c24 <_dtoa_r+0x560>
   83838:	d9001617 	ldw	r4,88(sp)
   8383c:	900b883a 	mov	r5,r18
   83840:	01800144 	movi	r6,5
   83844:	000f883a 	mov	r7,zero
   83848:	00865ac0 	call	865ac <__multadd>
   8384c:	d9000717 	ldw	r4,28(sp)
   83850:	100b883a 	mov	r5,r2
   83854:	1025883a 	mov	r18,r2
   83858:	00859e80 	call	859e8 <__mcmp>
   8385c:	00bcf10e 	bge	zero,r2,82c24 <_dtoa_r+0x560>
   83860:	d8c00d17 	ldw	r3,52(sp)
   83864:	d9000517 	ldw	r4,20(sp)
   83868:	d8000615 	stw	zero,24(sp)
   8386c:	18c00044 	addi	r3,r3,1
   83870:	d8c00d15 	stw	r3,52(sp)
   83874:	00800c44 	movi	r2,49
   83878:	27000044 	addi	fp,r4,1
   8387c:	20800005 	stb	r2,0(r4)
   83880:	003e8906 	br	832a8 <_dtoa_r+0xbe4>
   83884:	d8c00517 	ldw	r3,20(sp)
   83888:	003bc206 	br	82794 <_dtoa_r+0xd0>
   8388c:	01800274 	movhi	r6,9
   83890:	31b1f004 	addi	r6,r6,-14400
   83894:	30c00917 	ldw	r3,36(r6)
   83898:	30800817 	ldw	r2,32(r6)
   8389c:	d9001217 	ldw	r4,72(sp)
   838a0:	d9401317 	ldw	r5,76(sp)
   838a4:	180f883a 	mov	r7,r3
   838a8:	100d883a 	mov	r6,r2
   838ac:	0088c300 	call	88c30 <__divdf3>
   838b0:	948003cc 	andi	r18,r18,15
   838b4:	058000c4 	movi	r22,3
   838b8:	1029883a 	mov	r20,r2
   838bc:	182b883a 	mov	r21,r3
   838c0:	003c8906 	br	82ae8 <_dtoa_r+0x424>
   838c4:	d9001017 	ldw	r4,64(sp)
   838c8:	d9800917 	ldw	r6,36(sp)
   838cc:	0025883a 	mov	r18,zero
   838d0:	1105c83a 	sub	r2,r2,r4
   838d4:	2089883a 	add	r4,r4,r2
   838d8:	308d883a 	add	r6,r6,r2
   838dc:	d9001015 	stw	r4,64(sp)
   838e0:	d9800915 	stw	r6,36(sp)
   838e4:	003e3206 	br	831b0 <_dtoa_r+0xaec>
   838e8:	28800044 	addi	r2,r5,1
   838ec:	27000044 	addi	fp,r4,1
   838f0:	20800005 	stb	r2,0(r4)
   838f4:	003e6c06 	br	832a8 <_dtoa_r+0xbe4>
   838f8:	d8800f17 	ldw	r2,60(sp)
   838fc:	00bce016 	blt	zero,r2,82c80 <_dtoa_r+0x5bc>
   83900:	d9800f17 	ldw	r6,60(sp)
   83904:	303cc51e 	bne	r6,zero,82c1c <_dtoa_r+0x558>
   83908:	0005883a 	mov	r2,zero
   8390c:	00d00534 	movhi	r3,16404
   83910:	980b883a 	mov	r5,r19
   83914:	180f883a 	mov	r7,r3
   83918:	9009883a 	mov	r4,r18
   8391c:	100d883a 	mov	r6,r2
   83920:	008886c0 	call	8886c <__muldf3>
   83924:	180b883a 	mov	r5,r3
   83928:	a80f883a 	mov	r7,r21
   8392c:	1009883a 	mov	r4,r2
   83930:	a00d883a 	mov	r6,r20
   83934:	00890200 	call	89020 <__gedf2>
   83938:	103cb80e 	bge	r2,zero,82c1c <_dtoa_r+0x558>
   8393c:	0027883a 	mov	r19,zero
   83940:	0025883a 	mov	r18,zero
   83944:	003fc606 	br	83860 <_dtoa_r+0x119c>
   83948:	99400117 	ldw	r5,4(r19)
   8394c:	d9001617 	ldw	r4,88(sp)
   83950:	0085e0c0 	call	85e0c <_Balloc>
   83954:	99800417 	ldw	r6,16(r19)
   83958:	11000304 	addi	r4,r2,12
   8395c:	99400304 	addi	r5,r19,12
   83960:	318d883a 	add	r6,r6,r6
   83964:	318d883a 	add	r6,r6,r6
   83968:	31800204 	addi	r6,r6,8
   8396c:	1023883a 	mov	r17,r2
   83970:	00856740 	call	85674 <memcpy>
   83974:	d9001617 	ldw	r4,88(sp)
   83978:	880b883a 	mov	r5,r17
   8397c:	01800044 	movi	r6,1
   83980:	00861d00 	call	861d0 <__lshift>
   83984:	100b883a 	mov	r5,r2
   83988:	003d9c06 	br	82ffc <_dtoa_r+0x938>
   8398c:	00800e44 	movi	r2,57
   83990:	b8807026 	beq	r23,r2,83b54 <_dtoa_r+0x1490>
   83994:	b8800044 	addi	r2,r23,1
   83998:	b7000044 	addi	fp,r22,1
   8399c:	b0800005 	stb	r2,0(r22)
   839a0:	003e4106 	br	832a8 <_dtoa_r+0xbe4>
   839a4:	d8800317 	ldw	r2,12(sp)
   839a8:	01800274 	movhi	r6,9
   839ac:	31b1be04 	addi	r6,r6,-14600
   839b0:	b009883a 	mov	r4,r22
   839b4:	100e90fa 	slli	r7,r2,3
   839b8:	b80b883a 	mov	r5,r23
   839bc:	398f883a 	add	r7,r7,r6
   839c0:	38bffe17 	ldw	r2,-8(r7)
   839c4:	d9800517 	ldw	r6,20(sp)
   839c8:	38ffff17 	ldw	r3,-4(r7)
   839cc:	37000044 	addi	fp,r6,1
   839d0:	180f883a 	mov	r7,r3
   839d4:	100d883a 	mov	r6,r2
   839d8:	008886c0 	call	8886c <__muldf3>
   839dc:	a80b883a 	mov	r5,r21
   839e0:	a009883a 	mov	r4,r20
   839e4:	182f883a 	mov	r23,r3
   839e8:	102d883a 	mov	r22,r2
   839ec:	00892280 	call	89228 <__fixdfsi>
   839f0:	1009883a 	mov	r4,r2
   839f4:	1027883a 	mov	r19,r2
   839f8:	00891300 	call	89130 <__floatsidf>
   839fc:	a80b883a 	mov	r5,r21
   83a00:	a009883a 	mov	r4,r20
   83a04:	180f883a 	mov	r7,r3
   83a08:	100d883a 	mov	r6,r2
   83a0c:	00887780 	call	88778 <__subdf3>
   83a10:	180b883a 	mov	r5,r3
   83a14:	d8c00517 	ldw	r3,20(sp)
   83a18:	9cc00c04 	addi	r19,r19,48
   83a1c:	1009883a 	mov	r4,r2
   83a20:	1cc00005 	stb	r19,0(r3)
   83a24:	2021883a 	mov	r16,r4
   83a28:	d9000317 	ldw	r4,12(sp)
   83a2c:	00800044 	movi	r2,1
   83a30:	2823883a 	mov	r17,r5
   83a34:	20802226 	beq	r4,r2,83ac0 <_dtoa_r+0x13fc>
   83a38:	1029883a 	mov	r20,r2
   83a3c:	0005883a 	mov	r2,zero
   83a40:	00d00934 	movhi	r3,16420
   83a44:	180f883a 	mov	r7,r3
   83a48:	100d883a 	mov	r6,r2
   83a4c:	880b883a 	mov	r5,r17
   83a50:	8009883a 	mov	r4,r16
   83a54:	008886c0 	call	8886c <__muldf3>
   83a58:	180b883a 	mov	r5,r3
   83a5c:	1009883a 	mov	r4,r2
   83a60:	1823883a 	mov	r17,r3
   83a64:	1021883a 	mov	r16,r2
   83a68:	00892280 	call	89228 <__fixdfsi>
   83a6c:	1009883a 	mov	r4,r2
   83a70:	102b883a 	mov	r21,r2
   83a74:	00891300 	call	89130 <__floatsidf>
   83a78:	880b883a 	mov	r5,r17
   83a7c:	8009883a 	mov	r4,r16
   83a80:	180f883a 	mov	r7,r3
   83a84:	100d883a 	mov	r6,r2
   83a88:	00887780 	call	88778 <__subdf3>
   83a8c:	180b883a 	mov	r5,r3
   83a90:	d8c00517 	ldw	r3,20(sp)
   83a94:	1009883a 	mov	r4,r2
   83a98:	ad400c04 	addi	r21,r21,48
   83a9c:	1d05883a 	add	r2,r3,r20
   83aa0:	15400005 	stb	r21,0(r2)
   83aa4:	2021883a 	mov	r16,r4
   83aa8:	d9000317 	ldw	r4,12(sp)
   83aac:	a5000044 	addi	r20,r20,1
   83ab0:	2823883a 	mov	r17,r5
   83ab4:	a13fe11e 	bne	r20,r4,83a3c <_dtoa_r+0x1378>
   83ab8:	e505883a 	add	r2,fp,r20
   83abc:	173fffc4 	addi	fp,r2,-1
   83ac0:	0025883a 	mov	r18,zero
   83ac4:	04cff834 	movhi	r19,16352
   83ac8:	b009883a 	mov	r4,r22
   83acc:	b80b883a 	mov	r5,r23
   83ad0:	900d883a 	mov	r6,r18
   83ad4:	980f883a 	mov	r7,r19
   83ad8:	00887f80 	call	887f8 <__adddf3>
   83adc:	180b883a 	mov	r5,r3
   83ae0:	1009883a 	mov	r4,r2
   83ae4:	800d883a 	mov	r6,r16
   83ae8:	880f883a 	mov	r7,r17
   83aec:	00890a80 	call	890a8 <__ltdf2>
   83af0:	103cab16 	blt	r2,zero,82da0 <_dtoa_r+0x6dc>
   83af4:	0009883a 	mov	r4,zero
   83af8:	980b883a 	mov	r5,r19
   83afc:	b80f883a 	mov	r7,r23
   83b00:	b00d883a 	mov	r6,r22
   83b04:	00887780 	call	88778 <__subdf3>
   83b08:	180b883a 	mov	r5,r3
   83b0c:	880f883a 	mov	r7,r17
   83b10:	1009883a 	mov	r4,r2
   83b14:	800d883a 	mov	r6,r16
   83b18:	0088f980 	call	88f98 <__gtdf2>
   83b1c:	00bc470e 	bge	zero,r2,82c3c <_dtoa_r+0x578>
   83b20:	00c00c04 	movi	r3,48
   83b24:	e73fffc4 	addi	fp,fp,-1
   83b28:	e0800007 	ldb	r2,0(fp)
   83b2c:	10fffd26 	beq	r2,r3,83b24 <_dtoa_r+0x1460>
   83b30:	d9800417 	ldw	r6,16(sp)
   83b34:	e7000044 	addi	fp,fp,1
   83b38:	d9800d15 	stw	r6,52(sp)
   83b3c:	003cab06 	br	82dec <_dtoa_r+0x728>
   83b40:	d8c00f17 	ldw	r3,60(sp)
   83b44:	d9001117 	ldw	r4,68(sp)
   83b48:	20e1c83a 	sub	r16,r4,r3
   83b4c:	0007883a 	mov	r3,zero
   83b50:	003d9b06 	br	831c0 <_dtoa_r+0xafc>
   83b54:	00800e44 	movi	r2,57
   83b58:	b0800005 	stb	r2,0(r22)
   83b5c:	b5800044 	addi	r22,r22,1
   83b60:	003dc106 	br	83268 <_dtoa_r+0xba4>
   83b64:	05800084 	movi	r22,2
   83b68:	003bf706 	br	82b48 <_dtoa_r+0x484>
   83b6c:	d9000f17 	ldw	r4,60(sp)
   83b70:	013c000e 	bge	zero,r4,82b74 <_dtoa_r+0x4b0>
   83b74:	d9800e17 	ldw	r6,56(sp)
   83b78:	01bc300e 	bge	zero,r6,82c3c <_dtoa_r+0x578>
   83b7c:	0005883a 	mov	r2,zero
   83b80:	00d00934 	movhi	r3,16420
   83b84:	a80b883a 	mov	r5,r21
   83b88:	180f883a 	mov	r7,r3
   83b8c:	a009883a 	mov	r4,r20
   83b90:	100d883a 	mov	r6,r2
   83b94:	008886c0 	call	8886c <__muldf3>
   83b98:	b1000044 	addi	r4,r22,1
   83b9c:	1021883a 	mov	r16,r2
   83ba0:	1823883a 	mov	r17,r3
   83ba4:	00891300 	call	89130 <__floatsidf>
   83ba8:	880b883a 	mov	r5,r17
   83bac:	8009883a 	mov	r4,r16
   83bb0:	180f883a 	mov	r7,r3
   83bb4:	100d883a 	mov	r6,r2
   83bb8:	008886c0 	call	8886c <__muldf3>
   83bbc:	0011883a 	mov	r8,zero
   83bc0:	02500734 	movhi	r9,16412
   83bc4:	180b883a 	mov	r5,r3
   83bc8:	480f883a 	mov	r7,r9
   83bcc:	1009883a 	mov	r4,r2
   83bd0:	400d883a 	mov	r6,r8
   83bd4:	00887f80 	call	887f8 <__adddf3>
   83bd8:	102d883a 	mov	r22,r2
   83bdc:	00bf3034 	movhi	r2,64704
   83be0:	10ef883a 	add	r23,r2,r3
   83be4:	d8800d17 	ldw	r2,52(sp)
   83be8:	d8c00e17 	ldw	r3,56(sp)
   83bec:	8029883a 	mov	r20,r16
   83bf0:	10bfffc4 	addi	r2,r2,-1
   83bf4:	882b883a 	mov	r21,r17
   83bf8:	d8800415 	stw	r2,16(sp)
   83bfc:	d8c00315 	stw	r3,12(sp)
   83c00:	003e8306 	br	83610 <_dtoa_r+0xf4c>
   83c04:	d8800117 	ldw	r2,4(sp)
   83c08:	dc001117 	ldw	r16,68(sp)
   83c0c:	dc801017 	ldw	r18,64(sp)
   83c10:	00c00d84 	movi	r3,54
   83c14:	1887c83a 	sub	r3,r3,r2
   83c18:	003d6906 	br	831c0 <_dtoa_r+0xafc>
   83c1c:	01800044 	movi	r6,1
   83c20:	3021883a 	mov	r16,r6
   83c24:	d9800f15 	stw	r6,60(sp)
   83c28:	d9802615 	stw	r6,152(sp)
   83c2c:	d9800e15 	stw	r6,56(sp)
   83c30:	003b9306 	br	82a80 <_dtoa_r+0x3bc>
   83c34:	b021883a 	mov	r16,r22
   83c38:	dd800f15 	stw	r22,60(sp)
   83c3c:	003b9006 	br	82a80 <_dtoa_r+0x3bc>
   83c40:	103e221e 	bne	r2,zero,834cc <_dtoa_r+0xe08>
   83c44:	b880004c 	andi	r2,r23,1
   83c48:	1005003a 	cmpeq	r2,r2,zero
   83c4c:	103e1f1e 	bne	r2,zero,834cc <_dtoa_r+0xe08>
   83c50:	003e1b06 	br	834c0 <_dtoa_r+0xdfc>
   83c54:	d9001617 	ldw	r4,88(sp)
   83c58:	980b883a 	mov	r5,r19
   83c5c:	01800284 	movi	r6,10
   83c60:	000f883a 	mov	r7,zero
   83c64:	00865ac0 	call	865ac <__multadd>
   83c68:	d8c00e17 	ldw	r3,56(sp)
   83c6c:	1027883a 	mov	r19,r2
   83c70:	d8c00f15 	stw	r3,60(sp)
   83c74:	003cd306 	br	82fc4 <_dtoa_r+0x900>

00083c78 <_fflush_r>:
   83c78:	defffb04 	addi	sp,sp,-20
   83c7c:	dcc00315 	stw	r19,12(sp)
   83c80:	dc800215 	stw	r18,8(sp)
   83c84:	dfc00415 	stw	ra,16(sp)
   83c88:	dc400115 	stw	r17,4(sp)
   83c8c:	dc000015 	stw	r16,0(sp)
   83c90:	2027883a 	mov	r19,r4
   83c94:	2825883a 	mov	r18,r5
   83c98:	20000226 	beq	r4,zero,83ca4 <_fflush_r+0x2c>
   83c9c:	20800e17 	ldw	r2,56(r4)
   83ca0:	10005626 	beq	r2,zero,83dfc <_fflush_r+0x184>
   83ca4:	9100030b 	ldhu	r4,12(r18)
   83ca8:	20ffffcc 	andi	r3,r4,65535
   83cac:	18e0001c 	xori	r3,r3,32768
   83cb0:	18e00004 	addi	r3,r3,-32768
   83cb4:	1880020c 	andi	r2,r3,8
   83cb8:	1000261e 	bne	r2,zero,83d54 <_fflush_r+0xdc>
   83cbc:	90c00117 	ldw	r3,4(r18)
   83cc0:	20820014 	ori	r2,r4,2048
   83cc4:	9080030d 	sth	r2,12(r18)
   83cc8:	1009883a 	mov	r4,r2
   83ccc:	00c0400e 	bge	zero,r3,83dd0 <_fflush_r+0x158>
   83cd0:	92000a17 	ldw	r8,40(r18)
   83cd4:	40004026 	beq	r8,zero,83dd8 <_fflush_r+0x160>
   83cd8:	2084000c 	andi	r2,r4,4096
   83cdc:	10005326 	beq	r2,zero,83e2c <_fflush_r+0x1b4>
   83ce0:	94001417 	ldw	r16,80(r18)
   83ce4:	9080030b 	ldhu	r2,12(r18)
   83ce8:	1080010c 	andi	r2,r2,4
   83cec:	1000481e 	bne	r2,zero,83e10 <_fflush_r+0x198>
   83cf0:	91400717 	ldw	r5,28(r18)
   83cf4:	9809883a 	mov	r4,r19
   83cf8:	800d883a 	mov	r6,r16
   83cfc:	000f883a 	mov	r7,zero
   83d00:	403ee83a 	callr	r8
   83d04:	8080261e 	bne	r16,r2,83da0 <_fflush_r+0x128>
   83d08:	9080030b 	ldhu	r2,12(r18)
   83d0c:	91000417 	ldw	r4,16(r18)
   83d10:	90000115 	stw	zero,4(r18)
   83d14:	10bdffcc 	andi	r2,r2,63487
   83d18:	10ffffcc 	andi	r3,r2,65535
   83d1c:	18c4000c 	andi	r3,r3,4096
   83d20:	9080030d 	sth	r2,12(r18)
   83d24:	91000015 	stw	r4,0(r18)
   83d28:	18002b26 	beq	r3,zero,83dd8 <_fflush_r+0x160>
   83d2c:	0007883a 	mov	r3,zero
   83d30:	1805883a 	mov	r2,r3
   83d34:	94001415 	stw	r16,80(r18)
   83d38:	dfc00417 	ldw	ra,16(sp)
   83d3c:	dcc00317 	ldw	r19,12(sp)
   83d40:	dc800217 	ldw	r18,8(sp)
   83d44:	dc400117 	ldw	r17,4(sp)
   83d48:	dc000017 	ldw	r16,0(sp)
   83d4c:	dec00504 	addi	sp,sp,20
   83d50:	f800283a 	ret
   83d54:	94400417 	ldw	r17,16(r18)
   83d58:	88001f26 	beq	r17,zero,83dd8 <_fflush_r+0x160>
   83d5c:	90800017 	ldw	r2,0(r18)
   83d60:	18c000cc 	andi	r3,r3,3
   83d64:	94400015 	stw	r17,0(r18)
   83d68:	1461c83a 	sub	r16,r2,r17
   83d6c:	18002526 	beq	r3,zero,83e04 <_fflush_r+0x18c>
   83d70:	0005883a 	mov	r2,zero
   83d74:	90800215 	stw	r2,8(r18)
   83d78:	0400170e 	bge	zero,r16,83dd8 <_fflush_r+0x160>
   83d7c:	90c00917 	ldw	r3,36(r18)
   83d80:	91400717 	ldw	r5,28(r18)
   83d84:	880d883a 	mov	r6,r17
   83d88:	800f883a 	mov	r7,r16
   83d8c:	9809883a 	mov	r4,r19
   83d90:	183ee83a 	callr	r3
   83d94:	88a3883a 	add	r17,r17,r2
   83d98:	80a1c83a 	sub	r16,r16,r2
   83d9c:	00bff616 	blt	zero,r2,83d78 <_fflush_r+0x100>
   83da0:	9080030b 	ldhu	r2,12(r18)
   83da4:	00ffffc4 	movi	r3,-1
   83da8:	10801014 	ori	r2,r2,64
   83dac:	9080030d 	sth	r2,12(r18)
   83db0:	1805883a 	mov	r2,r3
   83db4:	dfc00417 	ldw	ra,16(sp)
   83db8:	dcc00317 	ldw	r19,12(sp)
   83dbc:	dc800217 	ldw	r18,8(sp)
   83dc0:	dc400117 	ldw	r17,4(sp)
   83dc4:	dc000017 	ldw	r16,0(sp)
   83dc8:	dec00504 	addi	sp,sp,20
   83dcc:	f800283a 	ret
   83dd0:	90800f17 	ldw	r2,60(r18)
   83dd4:	00bfbe16 	blt	zero,r2,83cd0 <_fflush_r+0x58>
   83dd8:	0007883a 	mov	r3,zero
   83ddc:	1805883a 	mov	r2,r3
   83de0:	dfc00417 	ldw	ra,16(sp)
   83de4:	dcc00317 	ldw	r19,12(sp)
   83de8:	dc800217 	ldw	r18,8(sp)
   83dec:	dc400117 	ldw	r17,4(sp)
   83df0:	dc000017 	ldw	r16,0(sp)
   83df4:	dec00504 	addi	sp,sp,20
   83df8:	f800283a 	ret
   83dfc:	0083f100 	call	83f10 <__sinit>
   83e00:	003fa806 	br	83ca4 <_fflush_r+0x2c>
   83e04:	90800517 	ldw	r2,20(r18)
   83e08:	90800215 	stw	r2,8(r18)
   83e0c:	003fda06 	br	83d78 <_fflush_r+0x100>
   83e10:	90800117 	ldw	r2,4(r18)
   83e14:	90c00c17 	ldw	r3,48(r18)
   83e18:	80a1c83a 	sub	r16,r16,r2
   83e1c:	183fb426 	beq	r3,zero,83cf0 <_fflush_r+0x78>
   83e20:	90800f17 	ldw	r2,60(r18)
   83e24:	80a1c83a 	sub	r16,r16,r2
   83e28:	003fb106 	br	83cf0 <_fflush_r+0x78>
   83e2c:	91400717 	ldw	r5,28(r18)
   83e30:	9809883a 	mov	r4,r19
   83e34:	000d883a 	mov	r6,zero
   83e38:	01c00044 	movi	r7,1
   83e3c:	403ee83a 	callr	r8
   83e40:	1021883a 	mov	r16,r2
   83e44:	00bfffc4 	movi	r2,-1
   83e48:	80800226 	beq	r16,r2,83e54 <_fflush_r+0x1dc>
   83e4c:	92000a17 	ldw	r8,40(r18)
   83e50:	003fa406 	br	83ce4 <_fflush_r+0x6c>
   83e54:	98c00017 	ldw	r3,0(r19)
   83e58:	00800744 	movi	r2,29
   83e5c:	18bfde26 	beq	r3,r2,83dd8 <_fflush_r+0x160>
   83e60:	9080030b 	ldhu	r2,12(r18)
   83e64:	8007883a 	mov	r3,r16
   83e68:	10801014 	ori	r2,r2,64
   83e6c:	9080030d 	sth	r2,12(r18)
   83e70:	003fcf06 	br	83db0 <_fflush_r+0x138>

00083e74 <fflush>:
   83e74:	01400234 	movhi	r5,8
   83e78:	294f1e04 	addi	r5,r5,15480
   83e7c:	2007883a 	mov	r3,r4
   83e80:	20000526 	beq	r4,zero,83e98 <fflush+0x24>
   83e84:	00800274 	movhi	r2,9
   83e88:	10b8e004 	addi	r2,r2,-7296
   83e8c:	11000017 	ldw	r4,0(r2)
   83e90:	180b883a 	mov	r5,r3
   83e94:	0083c781 	jmpi	83c78 <_fflush_r>
   83e98:	00800274 	movhi	r2,9
   83e9c:	10b8e104 	addi	r2,r2,-7292
   83ea0:	11000017 	ldw	r4,0(r2)
   83ea4:	0084a781 	jmpi	84a78 <_fwalk_reent>

00083ea8 <std>:
   83ea8:	00800234 	movhi	r2,8
   83eac:	109bfb04 	addi	r2,r2,28652
   83eb0:	20800b15 	stw	r2,44(r4)
   83eb4:	00800234 	movhi	r2,8
   83eb8:	109c3604 	addi	r2,r2,28888
   83ebc:	20800815 	stw	r2,32(r4)
   83ec0:	00c00234 	movhi	r3,8
   83ec4:	18dc1704 	addi	r3,r3,28764
   83ec8:	00800234 	movhi	r2,8
   83ecc:	109bfd04 	addi	r2,r2,28660
   83ed0:	2140030d 	sth	r5,12(r4)
   83ed4:	2180038d 	sth	r6,14(r4)
   83ed8:	20c00915 	stw	r3,36(r4)
   83edc:	20800a15 	stw	r2,40(r4)
   83ee0:	20000015 	stw	zero,0(r4)
   83ee4:	20000115 	stw	zero,4(r4)
   83ee8:	20000215 	stw	zero,8(r4)
   83eec:	20000415 	stw	zero,16(r4)
   83ef0:	20000515 	stw	zero,20(r4)
   83ef4:	20000615 	stw	zero,24(r4)
   83ef8:	21000715 	stw	r4,28(r4)
   83efc:	f800283a 	ret

00083f00 <__sfp_lock_acquire>:
   83f00:	f800283a 	ret

00083f04 <__sfp_lock_release>:
   83f04:	f800283a 	ret

00083f08 <__sinit_lock_acquire>:
   83f08:	f800283a 	ret

00083f0c <__sinit_lock_release>:
   83f0c:	f800283a 	ret

00083f10 <__sinit>:
   83f10:	20800e17 	ldw	r2,56(r4)
   83f14:	defffd04 	addi	sp,sp,-12
   83f18:	dc400115 	stw	r17,4(sp)
   83f1c:	dc000015 	stw	r16,0(sp)
   83f20:	dfc00215 	stw	ra,8(sp)
   83f24:	04400044 	movi	r17,1
   83f28:	01400104 	movi	r5,4
   83f2c:	000d883a 	mov	r6,zero
   83f30:	2021883a 	mov	r16,r4
   83f34:	2200bb04 	addi	r8,r4,748
   83f38:	200f883a 	mov	r7,r4
   83f3c:	10000526 	beq	r2,zero,83f54 <__sinit+0x44>
   83f40:	dfc00217 	ldw	ra,8(sp)
   83f44:	dc400117 	ldw	r17,4(sp)
   83f48:	dc000017 	ldw	r16,0(sp)
   83f4c:	dec00304 	addi	sp,sp,12
   83f50:	f800283a 	ret
   83f54:	21000117 	ldw	r4,4(r4)
   83f58:	00800234 	movhi	r2,8
   83f5c:	108ffd04 	addi	r2,r2,16372
   83f60:	00c000c4 	movi	r3,3
   83f64:	80800f15 	stw	r2,60(r16)
   83f68:	80c0b915 	stw	r3,740(r16)
   83f6c:	8200ba15 	stw	r8,744(r16)
   83f70:	84400e15 	stw	r17,56(r16)
   83f74:	8000b815 	stw	zero,736(r16)
   83f78:	0083ea80 	call	83ea8 <std>
   83f7c:	81000217 	ldw	r4,8(r16)
   83f80:	880d883a 	mov	r6,r17
   83f84:	800f883a 	mov	r7,r16
   83f88:	01400284 	movi	r5,10
   83f8c:	0083ea80 	call	83ea8 <std>
   83f90:	81000317 	ldw	r4,12(r16)
   83f94:	800f883a 	mov	r7,r16
   83f98:	01400484 	movi	r5,18
   83f9c:	01800084 	movi	r6,2
   83fa0:	dfc00217 	ldw	ra,8(sp)
   83fa4:	dc400117 	ldw	r17,4(sp)
   83fa8:	dc000017 	ldw	r16,0(sp)
   83fac:	dec00304 	addi	sp,sp,12
   83fb0:	0083ea81 	jmpi	83ea8 <std>

00083fb4 <__fp_lock>:
   83fb4:	0005883a 	mov	r2,zero
   83fb8:	f800283a 	ret

00083fbc <__fp_unlock>:
   83fbc:	0005883a 	mov	r2,zero
   83fc0:	f800283a 	ret

00083fc4 <__fp_unlock_all>:
   83fc4:	00800274 	movhi	r2,9
   83fc8:	10b8e004 	addi	r2,r2,-7296
   83fcc:	11000017 	ldw	r4,0(r2)
   83fd0:	01400234 	movhi	r5,8
   83fd4:	294fef04 	addi	r5,r5,16316
   83fd8:	0084b401 	jmpi	84b40 <_fwalk>

00083fdc <__fp_lock_all>:
   83fdc:	00800274 	movhi	r2,9
   83fe0:	10b8e004 	addi	r2,r2,-7296
   83fe4:	11000017 	ldw	r4,0(r2)
   83fe8:	01400234 	movhi	r5,8
   83fec:	294fed04 	addi	r5,r5,16308
   83ff0:	0084b401 	jmpi	84b40 <_fwalk>

00083ff4 <_cleanup_r>:
   83ff4:	01400234 	movhi	r5,8
   83ff8:	295d2d04 	addi	r5,r5,29876
   83ffc:	0084b401 	jmpi	84b40 <_fwalk>

00084000 <_cleanup>:
   84000:	00800274 	movhi	r2,9
   84004:	10b8e104 	addi	r2,r2,-7292
   84008:	11000017 	ldw	r4,0(r2)
   8400c:	0083ff41 	jmpi	83ff4 <_cleanup_r>

00084010 <__sfmoreglue>:
   84010:	defffc04 	addi	sp,sp,-16
   84014:	dc000015 	stw	r16,0(sp)
   84018:	2821883a 	mov	r16,r5
   8401c:	dc400115 	stw	r17,4(sp)
   84020:	01401704 	movi	r5,92
   84024:	2023883a 	mov	r17,r4
   84028:	8009883a 	mov	r4,r16
   8402c:	dfc00315 	stw	ra,12(sp)
   84030:	dcc00215 	stw	r19,8(sp)
   84034:	00895e00 	call	895e0 <__mulsi3>
   84038:	11400304 	addi	r5,r2,12
   8403c:	8809883a 	mov	r4,r17
   84040:	1027883a 	mov	r19,r2
   84044:	0084e500 	call	84e50 <_malloc_r>
   84048:	10c00304 	addi	r3,r2,12
   8404c:	1023883a 	mov	r17,r2
   84050:	1809883a 	mov	r4,r3
   84054:	980d883a 	mov	r6,r19
   84058:	000b883a 	mov	r5,zero
   8405c:	10000b26 	beq	r2,zero,8408c <__sfmoreglue+0x7c>
   84060:	14000115 	stw	r16,4(r2)
   84064:	10c00215 	stw	r3,8(r2)
   84068:	10000015 	stw	zero,0(r2)
   8406c:	00857f40 	call	857f4 <memset>
   84070:	8805883a 	mov	r2,r17
   84074:	dfc00317 	ldw	ra,12(sp)
   84078:	dcc00217 	ldw	r19,8(sp)
   8407c:	dc400117 	ldw	r17,4(sp)
   84080:	dc000017 	ldw	r16,0(sp)
   84084:	dec00404 	addi	sp,sp,16
   84088:	f800283a 	ret
   8408c:	0023883a 	mov	r17,zero
   84090:	8805883a 	mov	r2,r17
   84094:	dfc00317 	ldw	ra,12(sp)
   84098:	dcc00217 	ldw	r19,8(sp)
   8409c:	dc400117 	ldw	r17,4(sp)
   840a0:	dc000017 	ldw	r16,0(sp)
   840a4:	dec00404 	addi	sp,sp,16
   840a8:	f800283a 	ret

000840ac <__sfp>:
   840ac:	defffd04 	addi	sp,sp,-12
   840b0:	00800274 	movhi	r2,9
   840b4:	10b8e104 	addi	r2,r2,-7292
   840b8:	dc000015 	stw	r16,0(sp)
   840bc:	14000017 	ldw	r16,0(r2)
   840c0:	dc400115 	stw	r17,4(sp)
   840c4:	dfc00215 	stw	ra,8(sp)
   840c8:	80800e17 	ldw	r2,56(r16)
   840cc:	2023883a 	mov	r17,r4
   840d0:	10002626 	beq	r2,zero,8416c <__sfp+0xc0>
   840d4:	8400b804 	addi	r16,r16,736
   840d8:	80800117 	ldw	r2,4(r16)
   840dc:	81000217 	ldw	r4,8(r16)
   840e0:	10ffffc4 	addi	r3,r2,-1
   840e4:	18000916 	blt	r3,zero,8410c <__sfp+0x60>
   840e8:	2080030f 	ldh	r2,12(r4)
   840ec:	10000b26 	beq	r2,zero,8411c <__sfp+0x70>
   840f0:	017fffc4 	movi	r5,-1
   840f4:	00000206 	br	84100 <__sfp+0x54>
   840f8:	2080030f 	ldh	r2,12(r4)
   840fc:	10000726 	beq	r2,zero,8411c <__sfp+0x70>
   84100:	18ffffc4 	addi	r3,r3,-1
   84104:	21001704 	addi	r4,r4,92
   84108:	197ffb1e 	bne	r3,r5,840f8 <__sfp+0x4c>
   8410c:	80800017 	ldw	r2,0(r16)
   84110:	10001926 	beq	r2,zero,84178 <__sfp+0xcc>
   84114:	1021883a 	mov	r16,r2
   84118:	003fef06 	br	840d8 <__sfp+0x2c>
   8411c:	00bfffc4 	movi	r2,-1
   84120:	00c00044 	movi	r3,1
   84124:	2080038d 	sth	r2,14(r4)
   84128:	20c0030d 	sth	r3,12(r4)
   8412c:	20000015 	stw	zero,0(r4)
   84130:	20000215 	stw	zero,8(r4)
   84134:	20000115 	stw	zero,4(r4)
   84138:	20000415 	stw	zero,16(r4)
   8413c:	20000515 	stw	zero,20(r4)
   84140:	20000615 	stw	zero,24(r4)
   84144:	20000c15 	stw	zero,48(r4)
   84148:	20000d15 	stw	zero,52(r4)
   8414c:	20001115 	stw	zero,68(r4)
   84150:	20001215 	stw	zero,72(r4)
   84154:	2005883a 	mov	r2,r4
   84158:	dfc00217 	ldw	ra,8(sp)
   8415c:	dc400117 	ldw	r17,4(sp)
   84160:	dc000017 	ldw	r16,0(sp)
   84164:	dec00304 	addi	sp,sp,12
   84168:	f800283a 	ret
   8416c:	8009883a 	mov	r4,r16
   84170:	0083f100 	call	83f10 <__sinit>
   84174:	003fd706 	br	840d4 <__sfp+0x28>
   84178:	8809883a 	mov	r4,r17
   8417c:	01400104 	movi	r5,4
   84180:	00840100 	call	84010 <__sfmoreglue>
   84184:	80800015 	stw	r2,0(r16)
   84188:	103fe21e 	bne	r2,zero,84114 <__sfp+0x68>
   8418c:	00800304 	movi	r2,12
   84190:	0009883a 	mov	r4,zero
   84194:	88800015 	stw	r2,0(r17)
   84198:	003fee06 	br	84154 <__sfp+0xa8>

0008419c <_malloc_trim_r>:
   8419c:	defffb04 	addi	sp,sp,-20
   841a0:	dcc00315 	stw	r19,12(sp)
   841a4:	04c00274 	movhi	r19,9
   841a8:	9cf35c04 	addi	r19,r19,-12944
   841ac:	dc800215 	stw	r18,8(sp)
   841b0:	dc400115 	stw	r17,4(sp)
   841b4:	dc000015 	stw	r16,0(sp)
   841b8:	2823883a 	mov	r17,r5
   841bc:	2025883a 	mov	r18,r4
   841c0:	dfc00415 	stw	ra,16(sp)
   841c4:	008a3640 	call	8a364 <__malloc_lock>
   841c8:	98800217 	ldw	r2,8(r19)
   841cc:	9009883a 	mov	r4,r18
   841d0:	000b883a 	mov	r5,zero
   841d4:	10c00117 	ldw	r3,4(r2)
   841d8:	00bfff04 	movi	r2,-4
   841dc:	18a0703a 	and	r16,r3,r2
   841e0:	8463c83a 	sub	r17,r16,r17
   841e4:	8c43fbc4 	addi	r17,r17,4079
   841e8:	8822d33a 	srli	r17,r17,12
   841ec:	0083ffc4 	movi	r2,4095
   841f0:	8c7fffc4 	addi	r17,r17,-1
   841f4:	8822933a 	slli	r17,r17,12
   841f8:	1440060e 	bge	r2,r17,84214 <_malloc_trim_r+0x78>
   841fc:	0086f7c0 	call	86f7c <_sbrk_r>
   84200:	98c00217 	ldw	r3,8(r19)
   84204:	9009883a 	mov	r4,r18
   84208:	044bc83a 	sub	r5,zero,r17
   8420c:	80c7883a 	add	r3,r16,r3
   84210:	10c00926 	beq	r2,r3,84238 <_malloc_trim_r+0x9c>
   84214:	008a3840 	call	8a384 <__malloc_unlock>
   84218:	0005883a 	mov	r2,zero
   8421c:	dfc00417 	ldw	ra,16(sp)
   84220:	dcc00317 	ldw	r19,12(sp)
   84224:	dc800217 	ldw	r18,8(sp)
   84228:	dc400117 	ldw	r17,4(sp)
   8422c:	dc000017 	ldw	r16,0(sp)
   84230:	dec00504 	addi	sp,sp,20
   84234:	f800283a 	ret
   84238:	9009883a 	mov	r4,r18
   8423c:	0086f7c0 	call	86f7c <_sbrk_r>
   84240:	844dc83a 	sub	r6,r16,r17
   84244:	00ffffc4 	movi	r3,-1
   84248:	9009883a 	mov	r4,r18
   8424c:	000b883a 	mov	r5,zero
   84250:	01c00274 	movhi	r7,9
   84254:	39ff9404 	addi	r7,r7,-432
   84258:	31800054 	ori	r6,r6,1
   8425c:	10c00926 	beq	r2,r3,84284 <_malloc_trim_r+0xe8>
   84260:	38800017 	ldw	r2,0(r7)
   84264:	98c00217 	ldw	r3,8(r19)
   84268:	9009883a 	mov	r4,r18
   8426c:	1445c83a 	sub	r2,r2,r17
   84270:	38800015 	stw	r2,0(r7)
   84274:	19800115 	stw	r6,4(r3)
   84278:	008a3840 	call	8a384 <__malloc_unlock>
   8427c:	00800044 	movi	r2,1
   84280:	003fe606 	br	8421c <_malloc_trim_r+0x80>
   84284:	0086f7c0 	call	86f7c <_sbrk_r>
   84288:	99800217 	ldw	r6,8(r19)
   8428c:	100f883a 	mov	r7,r2
   84290:	9009883a 	mov	r4,r18
   84294:	1187c83a 	sub	r3,r2,r6
   84298:	008003c4 	movi	r2,15
   8429c:	19400054 	ori	r5,r3,1
   842a0:	10ffdc0e 	bge	r2,r3,84214 <_malloc_trim_r+0x78>
   842a4:	00800274 	movhi	r2,9
   842a8:	10b8e504 	addi	r2,r2,-7276
   842ac:	10c00017 	ldw	r3,0(r2)
   842b0:	00800274 	movhi	r2,9
   842b4:	10bf9404 	addi	r2,r2,-432
   842b8:	31400115 	stw	r5,4(r6)
   842bc:	38c7c83a 	sub	r3,r7,r3
   842c0:	10c00015 	stw	r3,0(r2)
   842c4:	003fd306 	br	84214 <_malloc_trim_r+0x78>

000842c8 <_free_r>:
   842c8:	defffd04 	addi	sp,sp,-12
   842cc:	dc400115 	stw	r17,4(sp)
   842d0:	dc000015 	stw	r16,0(sp)
   842d4:	dfc00215 	stw	ra,8(sp)
   842d8:	2821883a 	mov	r16,r5
   842dc:	2023883a 	mov	r17,r4
   842e0:	28005a26 	beq	r5,zero,8444c <_free_r+0x184>
   842e4:	008a3640 	call	8a364 <__malloc_lock>
   842e8:	823ffe04 	addi	r8,r16,-8
   842ec:	41400117 	ldw	r5,4(r8)
   842f0:	00bfff84 	movi	r2,-2
   842f4:	02800274 	movhi	r10,9
   842f8:	52b35c04 	addi	r10,r10,-12944
   842fc:	288e703a 	and	r7,r5,r2
   84300:	41cd883a 	add	r6,r8,r7
   84304:	30c00117 	ldw	r3,4(r6)
   84308:	51000217 	ldw	r4,8(r10)
   8430c:	00bfff04 	movi	r2,-4
   84310:	1892703a 	and	r9,r3,r2
   84314:	5017883a 	mov	r11,r10
   84318:	31006726 	beq	r6,r4,844b8 <_free_r+0x1f0>
   8431c:	2880004c 	andi	r2,r5,1
   84320:	1005003a 	cmpeq	r2,r2,zero
   84324:	32400115 	stw	r9,4(r6)
   84328:	10001a1e 	bne	r2,zero,84394 <_free_r+0xcc>
   8432c:	000b883a 	mov	r5,zero
   84330:	3247883a 	add	r3,r6,r9
   84334:	18800117 	ldw	r2,4(r3)
   84338:	1080004c 	andi	r2,r2,1
   8433c:	1000231e 	bne	r2,zero,843cc <_free_r+0x104>
   84340:	280ac03a 	cmpne	r5,r5,zero
   84344:	3a4f883a 	add	r7,r7,r9
   84348:	2800451e 	bne	r5,zero,84460 <_free_r+0x198>
   8434c:	31000217 	ldw	r4,8(r6)
   84350:	00800274 	movhi	r2,9
   84354:	10b35e04 	addi	r2,r2,-12936
   84358:	20807b26 	beq	r4,r2,84548 <_free_r+0x280>
   8435c:	30800317 	ldw	r2,12(r6)
   84360:	3a07883a 	add	r3,r7,r8
   84364:	19c00015 	stw	r7,0(r3)
   84368:	11000215 	stw	r4,8(r2)
   8436c:	20800315 	stw	r2,12(r4)
   84370:	38800054 	ori	r2,r7,1
   84374:	40800115 	stw	r2,4(r8)
   84378:	28001a26 	beq	r5,zero,843e4 <_free_r+0x11c>
   8437c:	8809883a 	mov	r4,r17
   84380:	dfc00217 	ldw	ra,8(sp)
   84384:	dc400117 	ldw	r17,4(sp)
   84388:	dc000017 	ldw	r16,0(sp)
   8438c:	dec00304 	addi	sp,sp,12
   84390:	008a3841 	jmpi	8a384 <__malloc_unlock>
   84394:	80bffe17 	ldw	r2,-8(r16)
   84398:	50c00204 	addi	r3,r10,8
   8439c:	4091c83a 	sub	r8,r8,r2
   843a0:	41000217 	ldw	r4,8(r8)
   843a4:	388f883a 	add	r7,r7,r2
   843a8:	20c06126 	beq	r4,r3,84530 <_free_r+0x268>
   843ac:	40800317 	ldw	r2,12(r8)
   843b0:	3247883a 	add	r3,r6,r9
   843b4:	000b883a 	mov	r5,zero
   843b8:	11000215 	stw	r4,8(r2)
   843bc:	20800315 	stw	r2,12(r4)
   843c0:	18800117 	ldw	r2,4(r3)
   843c4:	1080004c 	andi	r2,r2,1
   843c8:	103fdd26 	beq	r2,zero,84340 <_free_r+0x78>
   843cc:	38800054 	ori	r2,r7,1
   843d0:	3a07883a 	add	r3,r7,r8
   843d4:	280ac03a 	cmpne	r5,r5,zero
   843d8:	40800115 	stw	r2,4(r8)
   843dc:	19c00015 	stw	r7,0(r3)
   843e0:	283fe61e 	bne	r5,zero,8437c <_free_r+0xb4>
   843e4:	00807fc4 	movi	r2,511
   843e8:	11c01f2e 	bgeu	r2,r7,84468 <_free_r+0x1a0>
   843ec:	3806d27a 	srli	r3,r7,9
   843f0:	1800481e 	bne	r3,zero,84514 <_free_r+0x24c>
   843f4:	3804d0fa 	srli	r2,r7,3
   843f8:	100690fa 	slli	r3,r2,3
   843fc:	1acd883a 	add	r6,r3,r11
   84400:	31400217 	ldw	r5,8(r6)
   84404:	31405926 	beq	r6,r5,8456c <_free_r+0x2a4>
   84408:	28800117 	ldw	r2,4(r5)
   8440c:	00ffff04 	movi	r3,-4
   84410:	10c4703a 	and	r2,r2,r3
   84414:	3880022e 	bgeu	r7,r2,84420 <_free_r+0x158>
   84418:	29400217 	ldw	r5,8(r5)
   8441c:	317ffa1e 	bne	r6,r5,84408 <_free_r+0x140>
   84420:	29800317 	ldw	r6,12(r5)
   84424:	41800315 	stw	r6,12(r8)
   84428:	41400215 	stw	r5,8(r8)
   8442c:	8809883a 	mov	r4,r17
   84430:	2a000315 	stw	r8,12(r5)
   84434:	32000215 	stw	r8,8(r6)
   84438:	dfc00217 	ldw	ra,8(sp)
   8443c:	dc400117 	ldw	r17,4(sp)
   84440:	dc000017 	ldw	r16,0(sp)
   84444:	dec00304 	addi	sp,sp,12
   84448:	008a3841 	jmpi	8a384 <__malloc_unlock>
   8444c:	dfc00217 	ldw	ra,8(sp)
   84450:	dc400117 	ldw	r17,4(sp)
   84454:	dc000017 	ldw	r16,0(sp)
   84458:	dec00304 	addi	sp,sp,12
   8445c:	f800283a 	ret
   84460:	31000217 	ldw	r4,8(r6)
   84464:	003fbd06 	br	8435c <_free_r+0x94>
   84468:	3806d0fa 	srli	r3,r7,3
   8446c:	00800044 	movi	r2,1
   84470:	51400117 	ldw	r5,4(r10)
   84474:	180890fa 	slli	r4,r3,3
   84478:	1807d0ba 	srai	r3,r3,2
   8447c:	22c9883a 	add	r4,r4,r11
   84480:	21800217 	ldw	r6,8(r4)
   84484:	10c4983a 	sll	r2,r2,r3
   84488:	41000315 	stw	r4,12(r8)
   8448c:	41800215 	stw	r6,8(r8)
   84490:	288ab03a 	or	r5,r5,r2
   84494:	22000215 	stw	r8,8(r4)
   84498:	8809883a 	mov	r4,r17
   8449c:	51400115 	stw	r5,4(r10)
   844a0:	32000315 	stw	r8,12(r6)
   844a4:	dfc00217 	ldw	ra,8(sp)
   844a8:	dc400117 	ldw	r17,4(sp)
   844ac:	dc000017 	ldw	r16,0(sp)
   844b0:	dec00304 	addi	sp,sp,12
   844b4:	008a3841 	jmpi	8a384 <__malloc_unlock>
   844b8:	2880004c 	andi	r2,r5,1
   844bc:	3a4d883a 	add	r6,r7,r9
   844c0:	1000071e 	bne	r2,zero,844e0 <_free_r+0x218>
   844c4:	80bffe17 	ldw	r2,-8(r16)
   844c8:	4091c83a 	sub	r8,r8,r2
   844cc:	41000317 	ldw	r4,12(r8)
   844d0:	40c00217 	ldw	r3,8(r8)
   844d4:	308d883a 	add	r6,r6,r2
   844d8:	20c00215 	stw	r3,8(r4)
   844dc:	19000315 	stw	r4,12(r3)
   844e0:	00800274 	movhi	r2,9
   844e4:	10b8e404 	addi	r2,r2,-7280
   844e8:	11000017 	ldw	r4,0(r2)
   844ec:	30c00054 	ori	r3,r6,1
   844f0:	52000215 	stw	r8,8(r10)
   844f4:	40c00115 	stw	r3,4(r8)
   844f8:	313fa036 	bltu	r6,r4,8437c <_free_r+0xb4>
   844fc:	00800274 	movhi	r2,9
   84500:	10bf8a04 	addi	r2,r2,-472
   84504:	11400017 	ldw	r5,0(r2)
   84508:	8809883a 	mov	r4,r17
   8450c:	008419c0 	call	8419c <_malloc_trim_r>
   84510:	003f9a06 	br	8437c <_free_r+0xb4>
   84514:	00800104 	movi	r2,4
   84518:	10c0072e 	bgeu	r2,r3,84538 <_free_r+0x270>
   8451c:	00800504 	movi	r2,20
   84520:	10c01936 	bltu	r2,r3,84588 <_free_r+0x2c0>
   84524:	188016c4 	addi	r2,r3,91
   84528:	100690fa 	slli	r3,r2,3
   8452c:	003fb306 	br	843fc <_free_r+0x134>
   84530:	01400044 	movi	r5,1
   84534:	003f7e06 	br	84330 <_free_r+0x68>
   84538:	3804d1ba 	srli	r2,r7,6
   8453c:	10800e04 	addi	r2,r2,56
   84540:	100690fa 	slli	r3,r2,3
   84544:	003fad06 	br	843fc <_free_r+0x134>
   84548:	22000315 	stw	r8,12(r4)
   8454c:	22000215 	stw	r8,8(r4)
   84550:	3a05883a 	add	r2,r7,r8
   84554:	38c00054 	ori	r3,r7,1
   84558:	11c00015 	stw	r7,0(r2)
   8455c:	41000215 	stw	r4,8(r8)
   84560:	40c00115 	stw	r3,4(r8)
   84564:	41000315 	stw	r4,12(r8)
   84568:	003f8406 	br	8437c <_free_r+0xb4>
   8456c:	1005d0ba 	srai	r2,r2,2
   84570:	00c00044 	movi	r3,1
   84574:	51000117 	ldw	r4,4(r10)
   84578:	1886983a 	sll	r3,r3,r2
   8457c:	20c8b03a 	or	r4,r4,r3
   84580:	51000115 	stw	r4,4(r10)
   84584:	003fa706 	br	84424 <_free_r+0x15c>
   84588:	00801504 	movi	r2,84
   8458c:	10c00436 	bltu	r2,r3,845a0 <_free_r+0x2d8>
   84590:	3804d33a 	srli	r2,r7,12
   84594:	10801b84 	addi	r2,r2,110
   84598:	100690fa 	slli	r3,r2,3
   8459c:	003f9706 	br	843fc <_free_r+0x134>
   845a0:	00805504 	movi	r2,340
   845a4:	10c00436 	bltu	r2,r3,845b8 <_free_r+0x2f0>
   845a8:	3804d3fa 	srli	r2,r7,15
   845ac:	10801dc4 	addi	r2,r2,119
   845b0:	100690fa 	slli	r3,r2,3
   845b4:	003f9106 	br	843fc <_free_r+0x134>
   845b8:	00815504 	movi	r2,1364
   845bc:	10c0032e 	bgeu	r2,r3,845cc <_free_r+0x304>
   845c0:	00801f84 	movi	r2,126
   845c4:	00c0fc04 	movi	r3,1008
   845c8:	003f8c06 	br	843fc <_free_r+0x134>
   845cc:	3804d4ba 	srli	r2,r7,18
   845d0:	10801f04 	addi	r2,r2,124
   845d4:	100690fa 	slli	r3,r2,3
   845d8:	003f8806 	br	843fc <_free_r+0x134>

000845dc <__sfvwrite_r>:
   845dc:	30800217 	ldw	r2,8(r6)
   845e0:	defff504 	addi	sp,sp,-44
   845e4:	df000915 	stw	fp,36(sp)
   845e8:	dd800715 	stw	r22,28(sp)
   845ec:	dc800315 	stw	r18,12(sp)
   845f0:	dfc00a15 	stw	ra,40(sp)
   845f4:	ddc00815 	stw	r23,32(sp)
   845f8:	dd400615 	stw	r21,24(sp)
   845fc:	dd000515 	stw	r20,20(sp)
   84600:	dcc00415 	stw	r19,16(sp)
   84604:	dc400215 	stw	r17,8(sp)
   84608:	dc000115 	stw	r16,4(sp)
   8460c:	302d883a 	mov	r22,r6
   84610:	2039883a 	mov	fp,r4
   84614:	2825883a 	mov	r18,r5
   84618:	10001c26 	beq	r2,zero,8468c <__sfvwrite_r+0xb0>
   8461c:	29c0030b 	ldhu	r7,12(r5)
   84620:	3880020c 	andi	r2,r7,8
   84624:	10002726 	beq	r2,zero,846c4 <__sfvwrite_r+0xe8>
   84628:	28800417 	ldw	r2,16(r5)
   8462c:	10002526 	beq	r2,zero,846c4 <__sfvwrite_r+0xe8>
   84630:	3880008c 	andi	r2,r7,2
   84634:	b5400017 	ldw	r21,0(r22)
   84638:	10002826 	beq	r2,zero,846dc <__sfvwrite_r+0x100>
   8463c:	0021883a 	mov	r16,zero
   84640:	0023883a 	mov	r17,zero
   84644:	880d883a 	mov	r6,r17
   84648:	e009883a 	mov	r4,fp
   8464c:	00810004 	movi	r2,1024
   84650:	80006e26 	beq	r16,zero,8480c <__sfvwrite_r+0x230>
   84654:	800f883a 	mov	r7,r16
   84658:	91400717 	ldw	r5,28(r18)
   8465c:	1400012e 	bgeu	r2,r16,84664 <__sfvwrite_r+0x88>
   84660:	100f883a 	mov	r7,r2
   84664:	90c00917 	ldw	r3,36(r18)
   84668:	183ee83a 	callr	r3
   8466c:	1007883a 	mov	r3,r2
   84670:	80a1c83a 	sub	r16,r16,r2
   84674:	88a3883a 	add	r17,r17,r2
   84678:	00806d0e 	bge	zero,r2,84830 <__sfvwrite_r+0x254>
   8467c:	b0800217 	ldw	r2,8(r22)
   84680:	10c5c83a 	sub	r2,r2,r3
   84684:	b0800215 	stw	r2,8(r22)
   84688:	103fee1e 	bne	r2,zero,84644 <__sfvwrite_r+0x68>
   8468c:	0009883a 	mov	r4,zero
   84690:	2005883a 	mov	r2,r4
   84694:	dfc00a17 	ldw	ra,40(sp)
   84698:	df000917 	ldw	fp,36(sp)
   8469c:	ddc00817 	ldw	r23,32(sp)
   846a0:	dd800717 	ldw	r22,28(sp)
   846a4:	dd400617 	ldw	r21,24(sp)
   846a8:	dd000517 	ldw	r20,20(sp)
   846ac:	dcc00417 	ldw	r19,16(sp)
   846b0:	dc800317 	ldw	r18,12(sp)
   846b4:	dc400217 	ldw	r17,8(sp)
   846b8:	dc000117 	ldw	r16,4(sp)
   846bc:	dec00b04 	addi	sp,sp,44
   846c0:	f800283a 	ret
   846c4:	00823440 	call	82344 <__swsetup_r>
   846c8:	1000e41e 	bne	r2,zero,84a5c <__sfvwrite_r+0x480>
   846cc:	91c0030b 	ldhu	r7,12(r18)
   846d0:	b5400017 	ldw	r21,0(r22)
   846d4:	3880008c 	andi	r2,r7,2
   846d8:	103fd81e 	bne	r2,zero,8463c <__sfvwrite_r+0x60>
   846dc:	3880004c 	andi	r2,r7,1
   846e0:	1005003a 	cmpeq	r2,r2,zero
   846e4:	10005726 	beq	r2,zero,84844 <__sfvwrite_r+0x268>
   846e8:	0029883a 	mov	r20,zero
   846ec:	002f883a 	mov	r23,zero
   846f0:	a0004226 	beq	r20,zero,847fc <__sfvwrite_r+0x220>
   846f4:	3880800c 	andi	r2,r7,512
   846f8:	94000217 	ldw	r16,8(r18)
   846fc:	10008b26 	beq	r2,zero,8492c <__sfvwrite_r+0x350>
   84700:	800d883a 	mov	r6,r16
   84704:	a400a536 	bltu	r20,r16,8499c <__sfvwrite_r+0x3c0>
   84708:	3881200c 	andi	r2,r7,1152
   8470c:	10002726 	beq	r2,zero,847ac <__sfvwrite_r+0x1d0>
   84710:	90800517 	ldw	r2,20(r18)
   84714:	92000417 	ldw	r8,16(r18)
   84718:	91400017 	ldw	r5,0(r18)
   8471c:	1087883a 	add	r3,r2,r2
   84720:	1887883a 	add	r3,r3,r2
   84724:	1808d7fa 	srli	r4,r3,31
   84728:	2a21c83a 	sub	r16,r5,r8
   8472c:	80800044 	addi	r2,r16,1
   84730:	20c9883a 	add	r4,r4,r3
   84734:	2027d07a 	srai	r19,r4,1
   84738:	a085883a 	add	r2,r20,r2
   8473c:	980d883a 	mov	r6,r19
   84740:	9880022e 	bgeu	r19,r2,8474c <__sfvwrite_r+0x170>
   84744:	1027883a 	mov	r19,r2
   84748:	100d883a 	mov	r6,r2
   8474c:	3881000c 	andi	r2,r7,1024
   84750:	1000b826 	beq	r2,zero,84a34 <__sfvwrite_r+0x458>
   84754:	300b883a 	mov	r5,r6
   84758:	e009883a 	mov	r4,fp
   8475c:	0084e500 	call	84e50 <_malloc_r>
   84760:	10003126 	beq	r2,zero,84828 <__sfvwrite_r+0x24c>
   84764:	91400417 	ldw	r5,16(r18)
   84768:	1009883a 	mov	r4,r2
   8476c:	800d883a 	mov	r6,r16
   84770:	1023883a 	mov	r17,r2
   84774:	00856740 	call	85674 <memcpy>
   84778:	90c0030b 	ldhu	r3,12(r18)
   8477c:	00beffc4 	movi	r2,-1025
   84780:	1886703a 	and	r3,r3,r2
   84784:	18c02014 	ori	r3,r3,128
   84788:	90c0030d 	sth	r3,12(r18)
   8478c:	9c07c83a 	sub	r3,r19,r16
   84790:	8c05883a 	add	r2,r17,r16
   84794:	a00d883a 	mov	r6,r20
   84798:	a021883a 	mov	r16,r20
   8479c:	90800015 	stw	r2,0(r18)
   847a0:	90c00215 	stw	r3,8(r18)
   847a4:	94400415 	stw	r17,16(r18)
   847a8:	94c00515 	stw	r19,20(r18)
   847ac:	91000017 	ldw	r4,0(r18)
   847b0:	b80b883a 	mov	r5,r23
   847b4:	a023883a 	mov	r17,r20
   847b8:	00857140 	call	85714 <memmove>
   847bc:	90c00217 	ldw	r3,8(r18)
   847c0:	90800017 	ldw	r2,0(r18)
   847c4:	a027883a 	mov	r19,r20
   847c8:	1c07c83a 	sub	r3,r3,r16
   847cc:	1405883a 	add	r2,r2,r16
   847d0:	90c00215 	stw	r3,8(r18)
   847d4:	a021883a 	mov	r16,r20
   847d8:	90800015 	stw	r2,0(r18)
   847dc:	b0800217 	ldw	r2,8(r22)
   847e0:	1405c83a 	sub	r2,r2,r16
   847e4:	b0800215 	stw	r2,8(r22)
   847e8:	103fa826 	beq	r2,zero,8468c <__sfvwrite_r+0xb0>
   847ec:	a469c83a 	sub	r20,r20,r17
   847f0:	91c0030b 	ldhu	r7,12(r18)
   847f4:	bcef883a 	add	r23,r23,r19
   847f8:	a03fbe1e 	bne	r20,zero,846f4 <__sfvwrite_r+0x118>
   847fc:	adc00017 	ldw	r23,0(r21)
   84800:	ad000117 	ldw	r20,4(r21)
   84804:	ad400204 	addi	r21,r21,8
   84808:	003fb906 	br	846f0 <__sfvwrite_r+0x114>
   8480c:	ac400017 	ldw	r17,0(r21)
   84810:	ac000117 	ldw	r16,4(r21)
   84814:	ad400204 	addi	r21,r21,8
   84818:	003f8a06 	br	84644 <__sfvwrite_r+0x68>
   8481c:	91400417 	ldw	r5,16(r18)
   84820:	e009883a 	mov	r4,fp
   84824:	00842c80 	call	842c8 <_free_r>
   84828:	00800304 	movi	r2,12
   8482c:	e0800015 	stw	r2,0(fp)
   84830:	9080030b 	ldhu	r2,12(r18)
   84834:	013fffc4 	movi	r4,-1
   84838:	10801014 	ori	r2,r2,64
   8483c:	9080030d 	sth	r2,12(r18)
   84840:	003f9306 	br	84690 <__sfvwrite_r+0xb4>
   84844:	0027883a 	mov	r19,zero
   84848:	002f883a 	mov	r23,zero
   8484c:	d8000015 	stw	zero,0(sp)
   84850:	0029883a 	mov	r20,zero
   84854:	98001e26 	beq	r19,zero,848d0 <__sfvwrite_r+0x2f4>
   84858:	d8c00017 	ldw	r3,0(sp)
   8485c:	1804c03a 	cmpne	r2,r3,zero
   84860:	10005e26 	beq	r2,zero,849dc <__sfvwrite_r+0x400>
   84864:	9821883a 	mov	r16,r19
   84868:	a4c0012e 	bgeu	r20,r19,84870 <__sfvwrite_r+0x294>
   8486c:	a021883a 	mov	r16,r20
   84870:	91000017 	ldw	r4,0(r18)
   84874:	90800417 	ldw	r2,16(r18)
   84878:	91800217 	ldw	r6,8(r18)
   8487c:	91c00517 	ldw	r7,20(r18)
   84880:	1100022e 	bgeu	r2,r4,8488c <__sfvwrite_r+0x2b0>
   84884:	31e3883a 	add	r17,r6,r7
   84888:	8c001616 	blt	r17,r16,848e4 <__sfvwrite_r+0x308>
   8488c:	81c03816 	blt	r16,r7,84970 <__sfvwrite_r+0x394>
   84890:	90c00917 	ldw	r3,36(r18)
   84894:	91400717 	ldw	r5,28(r18)
   84898:	e009883a 	mov	r4,fp
   8489c:	b80d883a 	mov	r6,r23
   848a0:	183ee83a 	callr	r3
   848a4:	1023883a 	mov	r17,r2
   848a8:	00bfe10e 	bge	zero,r2,84830 <__sfvwrite_r+0x254>
   848ac:	a469c83a 	sub	r20,r20,r17
   848b0:	a0001826 	beq	r20,zero,84914 <__sfvwrite_r+0x338>
   848b4:	b0800217 	ldw	r2,8(r22)
   848b8:	1445c83a 	sub	r2,r2,r17
   848bc:	b0800215 	stw	r2,8(r22)
   848c0:	103f7226 	beq	r2,zero,8468c <__sfvwrite_r+0xb0>
   848c4:	9c67c83a 	sub	r19,r19,r17
   848c8:	bc6f883a 	add	r23,r23,r17
   848cc:	983fe21e 	bne	r19,zero,84858 <__sfvwrite_r+0x27c>
   848d0:	adc00017 	ldw	r23,0(r21)
   848d4:	acc00117 	ldw	r19,4(r21)
   848d8:	ad400204 	addi	r21,r21,8
   848dc:	d8000015 	stw	zero,0(sp)
   848e0:	003fdc06 	br	84854 <__sfvwrite_r+0x278>
   848e4:	b80b883a 	mov	r5,r23
   848e8:	880d883a 	mov	r6,r17
   848ec:	00857140 	call	85714 <memmove>
   848f0:	90c00017 	ldw	r3,0(r18)
   848f4:	e009883a 	mov	r4,fp
   848f8:	900b883a 	mov	r5,r18
   848fc:	1c47883a 	add	r3,r3,r17
   84900:	90c00015 	stw	r3,0(r18)
   84904:	0083c780 	call	83c78 <_fflush_r>
   84908:	103fc91e 	bne	r2,zero,84830 <__sfvwrite_r+0x254>
   8490c:	a469c83a 	sub	r20,r20,r17
   84910:	a03fe81e 	bne	r20,zero,848b4 <__sfvwrite_r+0x2d8>
   84914:	e009883a 	mov	r4,fp
   84918:	900b883a 	mov	r5,r18
   8491c:	0083c780 	call	83c78 <_fflush_r>
   84920:	103fc31e 	bne	r2,zero,84830 <__sfvwrite_r+0x254>
   84924:	d8000015 	stw	zero,0(sp)
   84928:	003fe206 	br	848b4 <__sfvwrite_r+0x2d8>
   8492c:	91000017 	ldw	r4,0(r18)
   84930:	90800417 	ldw	r2,16(r18)
   84934:	1100022e 	bgeu	r2,r4,84940 <__sfvwrite_r+0x364>
   84938:	8023883a 	mov	r17,r16
   8493c:	85003136 	bltu	r16,r20,84a04 <__sfvwrite_r+0x428>
   84940:	91c00517 	ldw	r7,20(r18)
   84944:	a1c01836 	bltu	r20,r7,849a8 <__sfvwrite_r+0x3cc>
   84948:	90c00917 	ldw	r3,36(r18)
   8494c:	91400717 	ldw	r5,28(r18)
   84950:	e009883a 	mov	r4,fp
   84954:	b80d883a 	mov	r6,r23
   84958:	183ee83a 	callr	r3
   8495c:	1021883a 	mov	r16,r2
   84960:	00bfb30e 	bge	zero,r2,84830 <__sfvwrite_r+0x254>
   84964:	1023883a 	mov	r17,r2
   84968:	1027883a 	mov	r19,r2
   8496c:	003f9b06 	br	847dc <__sfvwrite_r+0x200>
   84970:	b80b883a 	mov	r5,r23
   84974:	800d883a 	mov	r6,r16
   84978:	00857140 	call	85714 <memmove>
   8497c:	90c00217 	ldw	r3,8(r18)
   84980:	90800017 	ldw	r2,0(r18)
   84984:	8023883a 	mov	r17,r16
   84988:	1c07c83a 	sub	r3,r3,r16
   8498c:	1405883a 	add	r2,r2,r16
   84990:	90c00215 	stw	r3,8(r18)
   84994:	90800015 	stw	r2,0(r18)
   84998:	003fc406 	br	848ac <__sfvwrite_r+0x2d0>
   8499c:	a00d883a 	mov	r6,r20
   849a0:	a021883a 	mov	r16,r20
   849a4:	003f8106 	br	847ac <__sfvwrite_r+0x1d0>
   849a8:	b80b883a 	mov	r5,r23
   849ac:	a00d883a 	mov	r6,r20
   849b0:	00857140 	call	85714 <memmove>
   849b4:	90c00217 	ldw	r3,8(r18)
   849b8:	90800017 	ldw	r2,0(r18)
   849bc:	a021883a 	mov	r16,r20
   849c0:	1d07c83a 	sub	r3,r3,r20
   849c4:	1505883a 	add	r2,r2,r20
   849c8:	a023883a 	mov	r17,r20
   849cc:	a027883a 	mov	r19,r20
   849d0:	90c00215 	stw	r3,8(r18)
   849d4:	90800015 	stw	r2,0(r18)
   849d8:	003f8006 	br	847dc <__sfvwrite_r+0x200>
   849dc:	b809883a 	mov	r4,r23
   849e0:	01400284 	movi	r5,10
   849e4:	980d883a 	mov	r6,r19
   849e8:	00855900 	call	85590 <memchr>
   849ec:	10001726 	beq	r2,zero,84a4c <__sfvwrite_r+0x470>
   849f0:	15c5c83a 	sub	r2,r2,r23
   849f4:	15000044 	addi	r20,r2,1
   849f8:	00800044 	movi	r2,1
   849fc:	d8800015 	stw	r2,0(sp)
   84a00:	003f9806 	br	84864 <__sfvwrite_r+0x288>
   84a04:	b80b883a 	mov	r5,r23
   84a08:	800d883a 	mov	r6,r16
   84a0c:	00857140 	call	85714 <memmove>
   84a10:	90c00017 	ldw	r3,0(r18)
   84a14:	e009883a 	mov	r4,fp
   84a18:	900b883a 	mov	r5,r18
   84a1c:	1c07883a 	add	r3,r3,r16
   84a20:	90c00015 	stw	r3,0(r18)
   84a24:	8027883a 	mov	r19,r16
   84a28:	0083c780 	call	83c78 <_fflush_r>
   84a2c:	103f6b26 	beq	r2,zero,847dc <__sfvwrite_r+0x200>
   84a30:	003f7f06 	br	84830 <__sfvwrite_r+0x254>
   84a34:	400b883a 	mov	r5,r8
   84a38:	e009883a 	mov	r4,fp
   84a3c:	00869180 	call	86918 <_realloc_r>
   84a40:	103f7626 	beq	r2,zero,8481c <__sfvwrite_r+0x240>
   84a44:	1023883a 	mov	r17,r2
   84a48:	003f5006 	br	8478c <__sfvwrite_r+0x1b0>
   84a4c:	00c00044 	movi	r3,1
   84a50:	9d000044 	addi	r20,r19,1
   84a54:	d8c00015 	stw	r3,0(sp)
   84a58:	003f8206 	br	84864 <__sfvwrite_r+0x288>
   84a5c:	9080030b 	ldhu	r2,12(r18)
   84a60:	00c00244 	movi	r3,9
   84a64:	013fffc4 	movi	r4,-1
   84a68:	10801014 	ori	r2,r2,64
   84a6c:	9080030d 	sth	r2,12(r18)
   84a70:	e0c00015 	stw	r3,0(fp)
   84a74:	003f0606 	br	84690 <__sfvwrite_r+0xb4>

00084a78 <_fwalk_reent>:
   84a78:	defff704 	addi	sp,sp,-36
   84a7c:	dcc00315 	stw	r19,12(sp)
   84a80:	24c0b804 	addi	r19,r4,736
   84a84:	dd800615 	stw	r22,24(sp)
   84a88:	dd400515 	stw	r21,20(sp)
   84a8c:	dfc00815 	stw	ra,32(sp)
   84a90:	ddc00715 	stw	r23,28(sp)
   84a94:	dd000415 	stw	r20,16(sp)
   84a98:	dc800215 	stw	r18,8(sp)
   84a9c:	dc400115 	stw	r17,4(sp)
   84aa0:	dc000015 	stw	r16,0(sp)
   84aa4:	202b883a 	mov	r21,r4
   84aa8:	282d883a 	mov	r22,r5
   84aac:	0083f000 	call	83f00 <__sfp_lock_acquire>
   84ab0:	98002126 	beq	r19,zero,84b38 <_fwalk_reent+0xc0>
   84ab4:	002f883a 	mov	r23,zero
   84ab8:	9c800117 	ldw	r18,4(r19)
   84abc:	9c000217 	ldw	r16,8(r19)
   84ac0:	90bfffc4 	addi	r2,r18,-1
   84ac4:	10000d16 	blt	r2,zero,84afc <_fwalk_reent+0x84>
   84ac8:	0023883a 	mov	r17,zero
   84acc:	053fffc4 	movi	r20,-1
   84ad0:	8080030f 	ldh	r2,12(r16)
   84ad4:	8c400044 	addi	r17,r17,1
   84ad8:	10000626 	beq	r2,zero,84af4 <_fwalk_reent+0x7c>
   84adc:	8080038f 	ldh	r2,14(r16)
   84ae0:	800b883a 	mov	r5,r16
   84ae4:	a809883a 	mov	r4,r21
   84ae8:	15000226 	beq	r2,r20,84af4 <_fwalk_reent+0x7c>
   84aec:	b03ee83a 	callr	r22
   84af0:	b8aeb03a 	or	r23,r23,r2
   84af4:	84001704 	addi	r16,r16,92
   84af8:	947ff51e 	bne	r18,r17,84ad0 <_fwalk_reent+0x58>
   84afc:	9cc00017 	ldw	r19,0(r19)
   84b00:	983fed1e 	bne	r19,zero,84ab8 <_fwalk_reent+0x40>
   84b04:	0083f040 	call	83f04 <__sfp_lock_release>
   84b08:	b805883a 	mov	r2,r23
   84b0c:	dfc00817 	ldw	ra,32(sp)
   84b10:	ddc00717 	ldw	r23,28(sp)
   84b14:	dd800617 	ldw	r22,24(sp)
   84b18:	dd400517 	ldw	r21,20(sp)
   84b1c:	dd000417 	ldw	r20,16(sp)
   84b20:	dcc00317 	ldw	r19,12(sp)
   84b24:	dc800217 	ldw	r18,8(sp)
   84b28:	dc400117 	ldw	r17,4(sp)
   84b2c:	dc000017 	ldw	r16,0(sp)
   84b30:	dec00904 	addi	sp,sp,36
   84b34:	f800283a 	ret
   84b38:	002f883a 	mov	r23,zero
   84b3c:	003ff106 	br	84b04 <_fwalk_reent+0x8c>

00084b40 <_fwalk>:
   84b40:	defff804 	addi	sp,sp,-32
   84b44:	dcc00315 	stw	r19,12(sp)
   84b48:	24c0b804 	addi	r19,r4,736
   84b4c:	dd400515 	stw	r21,20(sp)
   84b50:	dfc00715 	stw	ra,28(sp)
   84b54:	dd800615 	stw	r22,24(sp)
   84b58:	dd000415 	stw	r20,16(sp)
   84b5c:	dc800215 	stw	r18,8(sp)
   84b60:	dc400115 	stw	r17,4(sp)
   84b64:	dc000015 	stw	r16,0(sp)
   84b68:	282b883a 	mov	r21,r5
   84b6c:	0083f000 	call	83f00 <__sfp_lock_acquire>
   84b70:	98001f26 	beq	r19,zero,84bf0 <_fwalk+0xb0>
   84b74:	002d883a 	mov	r22,zero
   84b78:	9c800117 	ldw	r18,4(r19)
   84b7c:	9c000217 	ldw	r16,8(r19)
   84b80:	90bfffc4 	addi	r2,r18,-1
   84b84:	10000c16 	blt	r2,zero,84bb8 <_fwalk+0x78>
   84b88:	0023883a 	mov	r17,zero
   84b8c:	053fffc4 	movi	r20,-1
   84b90:	8080030f 	ldh	r2,12(r16)
   84b94:	8c400044 	addi	r17,r17,1
   84b98:	10000526 	beq	r2,zero,84bb0 <_fwalk+0x70>
   84b9c:	8080038f 	ldh	r2,14(r16)
   84ba0:	8009883a 	mov	r4,r16
   84ba4:	15000226 	beq	r2,r20,84bb0 <_fwalk+0x70>
   84ba8:	a83ee83a 	callr	r21
   84bac:	b0acb03a 	or	r22,r22,r2
   84bb0:	84001704 	addi	r16,r16,92
   84bb4:	947ff61e 	bne	r18,r17,84b90 <_fwalk+0x50>
   84bb8:	9cc00017 	ldw	r19,0(r19)
   84bbc:	983fee1e 	bne	r19,zero,84b78 <_fwalk+0x38>
   84bc0:	0083f040 	call	83f04 <__sfp_lock_release>
   84bc4:	b005883a 	mov	r2,r22
   84bc8:	dfc00717 	ldw	ra,28(sp)
   84bcc:	dd800617 	ldw	r22,24(sp)
   84bd0:	dd400517 	ldw	r21,20(sp)
   84bd4:	dd000417 	ldw	r20,16(sp)
   84bd8:	dcc00317 	ldw	r19,12(sp)
   84bdc:	dc800217 	ldw	r18,8(sp)
   84be0:	dc400117 	ldw	r17,4(sp)
   84be4:	dc000017 	ldw	r16,0(sp)
   84be8:	dec00804 	addi	sp,sp,32
   84bec:	f800283a 	ret
   84bf0:	002d883a 	mov	r22,zero
   84bf4:	003ff206 	br	84bc0 <_fwalk+0x80>

00084bf8 <__locale_charset>:
   84bf8:	d0a00317 	ldw	r2,-32756(gp)
   84bfc:	f800283a 	ret

00084c00 <_localeconv_r>:
   84c00:	00800274 	movhi	r2,9
   84c04:	10b1b204 	addi	r2,r2,-14648
   84c08:	f800283a 	ret

00084c0c <localeconv>:
   84c0c:	00800274 	movhi	r2,9
   84c10:	10b8e004 	addi	r2,r2,-7296
   84c14:	11000017 	ldw	r4,0(r2)
   84c18:	0084c001 	jmpi	84c00 <_localeconv_r>

00084c1c <_setlocale_r>:
   84c1c:	defffc04 	addi	sp,sp,-16
   84c20:	00c00274 	movhi	r3,9
   84c24:	18f1ad04 	addi	r3,r3,-14668
   84c28:	dc800215 	stw	r18,8(sp)
   84c2c:	dc400115 	stw	r17,4(sp)
   84c30:	dc000015 	stw	r16,0(sp)
   84c34:	2023883a 	mov	r17,r4
   84c38:	2825883a 	mov	r18,r5
   84c3c:	dfc00315 	stw	ra,12(sp)
   84c40:	3021883a 	mov	r16,r6
   84c44:	3009883a 	mov	r4,r6
   84c48:	180b883a 	mov	r5,r3
   84c4c:	30000926 	beq	r6,zero,84c74 <_setlocale_r+0x58>
   84c50:	00871380 	call	87138 <strcmp>
   84c54:	8009883a 	mov	r4,r16
   84c58:	01400274 	movhi	r5,9
   84c5c:	29719804 	addi	r5,r5,-14752
   84c60:	10000b1e 	bne	r2,zero,84c90 <_setlocale_r+0x74>
   84c64:	8c000d15 	stw	r16,52(r17)
   84c68:	8c800c15 	stw	r18,48(r17)
   84c6c:	00c00274 	movhi	r3,9
   84c70:	18f1ad04 	addi	r3,r3,-14668
   84c74:	1805883a 	mov	r2,r3
   84c78:	dfc00317 	ldw	ra,12(sp)
   84c7c:	dc800217 	ldw	r18,8(sp)
   84c80:	dc400117 	ldw	r17,4(sp)
   84c84:	dc000017 	ldw	r16,0(sp)
   84c88:	dec00404 	addi	sp,sp,16
   84c8c:	f800283a 	ret
   84c90:	00871380 	call	87138 <strcmp>
   84c94:	0007883a 	mov	r3,zero
   84c98:	103ff226 	beq	r2,zero,84c64 <_setlocale_r+0x48>
   84c9c:	003ff506 	br	84c74 <_setlocale_r+0x58>

00084ca0 <setlocale>:
   84ca0:	01800274 	movhi	r6,9
   84ca4:	31b8e004 	addi	r6,r6,-7296
   84ca8:	2007883a 	mov	r3,r4
   84cac:	31000017 	ldw	r4,0(r6)
   84cb0:	280d883a 	mov	r6,r5
   84cb4:	180b883a 	mov	r5,r3
   84cb8:	0084c1c1 	jmpi	84c1c <_setlocale_r>

00084cbc <__smakebuf_r>:
   84cbc:	2880030b 	ldhu	r2,12(r5)
   84cc0:	deffed04 	addi	sp,sp,-76
   84cc4:	dc401015 	stw	r17,64(sp)
   84cc8:	1080008c 	andi	r2,r2,2
   84ccc:	dc000f15 	stw	r16,60(sp)
   84cd0:	dfc01215 	stw	ra,72(sp)
   84cd4:	dc801115 	stw	r18,68(sp)
   84cd8:	2821883a 	mov	r16,r5
   84cdc:	2023883a 	mov	r17,r4
   84ce0:	10000b26 	beq	r2,zero,84d10 <__smakebuf_r+0x54>
   84ce4:	28c010c4 	addi	r3,r5,67
   84ce8:	00800044 	movi	r2,1
   84cec:	28800515 	stw	r2,20(r5)
   84cf0:	28c00415 	stw	r3,16(r5)
   84cf4:	28c00015 	stw	r3,0(r5)
   84cf8:	dfc01217 	ldw	ra,72(sp)
   84cfc:	dc801117 	ldw	r18,68(sp)
   84d00:	dc401017 	ldw	r17,64(sp)
   84d04:	dc000f17 	ldw	r16,60(sp)
   84d08:	dec01304 	addi	sp,sp,76
   84d0c:	f800283a 	ret
   84d10:	2940038f 	ldh	r5,14(r5)
   84d14:	28002116 	blt	r5,zero,84d9c <__smakebuf_r+0xe0>
   84d18:	d80d883a 	mov	r6,sp
   84d1c:	00874c80 	call	874c8 <_fstat_r>
   84d20:	10001e16 	blt	r2,zero,84d9c <__smakebuf_r+0xe0>
   84d24:	d8800117 	ldw	r2,4(sp)
   84d28:	00e00014 	movui	r3,32768
   84d2c:	113c000c 	andi	r4,r2,61440
   84d30:	20c03126 	beq	r4,r3,84df8 <__smakebuf_r+0x13c>
   84d34:	8080030b 	ldhu	r2,12(r16)
   84d38:	00c80004 	movi	r3,8192
   84d3c:	10820014 	ori	r2,r2,2048
   84d40:	8080030d 	sth	r2,12(r16)
   84d44:	20c01e26 	beq	r4,r3,84dc0 <__smakebuf_r+0x104>
   84d48:	04810004 	movi	r18,1024
   84d4c:	8809883a 	mov	r4,r17
   84d50:	900b883a 	mov	r5,r18
   84d54:	0084e500 	call	84e50 <_malloc_r>
   84d58:	1009883a 	mov	r4,r2
   84d5c:	10003126 	beq	r2,zero,84e24 <__smakebuf_r+0x168>
   84d60:	80c0030b 	ldhu	r3,12(r16)
   84d64:	00800234 	movhi	r2,8
   84d68:	108ffd04 	addi	r2,r2,16372
   84d6c:	88800f15 	stw	r2,60(r17)
   84d70:	18c02014 	ori	r3,r3,128
   84d74:	84800515 	stw	r18,20(r16)
   84d78:	80c0030d 	sth	r3,12(r16)
   84d7c:	81000415 	stw	r4,16(r16)
   84d80:	81000015 	stw	r4,0(r16)
   84d84:	dfc01217 	ldw	ra,72(sp)
   84d88:	dc801117 	ldw	r18,68(sp)
   84d8c:	dc401017 	ldw	r17,64(sp)
   84d90:	dc000f17 	ldw	r16,60(sp)
   84d94:	dec01304 	addi	sp,sp,76
   84d98:	f800283a 	ret
   84d9c:	80c0030b 	ldhu	r3,12(r16)
   84da0:	1880200c 	andi	r2,r3,128
   84da4:	10000426 	beq	r2,zero,84db8 <__smakebuf_r+0xfc>
   84da8:	04801004 	movi	r18,64
   84dac:	18820014 	ori	r2,r3,2048
   84db0:	8080030d 	sth	r2,12(r16)
   84db4:	003fe506 	br	84d4c <__smakebuf_r+0x90>
   84db8:	04810004 	movi	r18,1024
   84dbc:	003ffb06 	br	84dac <__smakebuf_r+0xf0>
   84dc0:	8140038f 	ldh	r5,14(r16)
   84dc4:	8809883a 	mov	r4,r17
   84dc8:	008753c0 	call	8753c <_isatty_r>
   84dcc:	103fde26 	beq	r2,zero,84d48 <__smakebuf_r+0x8c>
   84dd0:	8080030b 	ldhu	r2,12(r16)
   84dd4:	80c010c4 	addi	r3,r16,67
   84dd8:	04810004 	movi	r18,1024
   84ddc:	10800054 	ori	r2,r2,1
   84de0:	8080030d 	sth	r2,12(r16)
   84de4:	00800044 	movi	r2,1
   84de8:	80c00415 	stw	r3,16(r16)
   84dec:	80800515 	stw	r2,20(r16)
   84df0:	80c00015 	stw	r3,0(r16)
   84df4:	003fd506 	br	84d4c <__smakebuf_r+0x90>
   84df8:	80c00a17 	ldw	r3,40(r16)
   84dfc:	00800234 	movhi	r2,8
   84e00:	109bfd04 	addi	r2,r2,28660
   84e04:	18bfcb1e 	bne	r3,r2,84d34 <__smakebuf_r+0x78>
   84e08:	8080030b 	ldhu	r2,12(r16)
   84e0c:	00c10004 	movi	r3,1024
   84e10:	1825883a 	mov	r18,r3
   84e14:	10c4b03a 	or	r2,r2,r3
   84e18:	8080030d 	sth	r2,12(r16)
   84e1c:	80c01315 	stw	r3,76(r16)
   84e20:	003fca06 	br	84d4c <__smakebuf_r+0x90>
   84e24:	8100030b 	ldhu	r4,12(r16)
   84e28:	2080800c 	andi	r2,r4,512
   84e2c:	103fb21e 	bne	r2,zero,84cf8 <__smakebuf_r+0x3c>
   84e30:	80c010c4 	addi	r3,r16,67
   84e34:	21000094 	ori	r4,r4,2
   84e38:	00800044 	movi	r2,1
   84e3c:	80800515 	stw	r2,20(r16)
   84e40:	8100030d 	sth	r4,12(r16)
   84e44:	80c00415 	stw	r3,16(r16)
   84e48:	80c00015 	stw	r3,0(r16)
   84e4c:	003faa06 	br	84cf8 <__smakebuf_r+0x3c>

00084e50 <_malloc_r>:
   84e50:	defff604 	addi	sp,sp,-40
   84e54:	28c002c4 	addi	r3,r5,11
   84e58:	00800584 	movi	r2,22
   84e5c:	dc800215 	stw	r18,8(sp)
   84e60:	dfc00915 	stw	ra,36(sp)
   84e64:	df000815 	stw	fp,32(sp)
   84e68:	ddc00715 	stw	r23,28(sp)
   84e6c:	dd800615 	stw	r22,24(sp)
   84e70:	dd400515 	stw	r21,20(sp)
   84e74:	dd000415 	stw	r20,16(sp)
   84e78:	dcc00315 	stw	r19,12(sp)
   84e7c:	dc400115 	stw	r17,4(sp)
   84e80:	dc000015 	stw	r16,0(sp)
   84e84:	2025883a 	mov	r18,r4
   84e88:	10c01236 	bltu	r2,r3,84ed4 <_malloc_r+0x84>
   84e8c:	04400404 	movi	r17,16
   84e90:	8940142e 	bgeu	r17,r5,84ee4 <_malloc_r+0x94>
   84e94:	00800304 	movi	r2,12
   84e98:	0007883a 	mov	r3,zero
   84e9c:	90800015 	stw	r2,0(r18)
   84ea0:	1805883a 	mov	r2,r3
   84ea4:	dfc00917 	ldw	ra,36(sp)
   84ea8:	df000817 	ldw	fp,32(sp)
   84eac:	ddc00717 	ldw	r23,28(sp)
   84eb0:	dd800617 	ldw	r22,24(sp)
   84eb4:	dd400517 	ldw	r21,20(sp)
   84eb8:	dd000417 	ldw	r20,16(sp)
   84ebc:	dcc00317 	ldw	r19,12(sp)
   84ec0:	dc800217 	ldw	r18,8(sp)
   84ec4:	dc400117 	ldw	r17,4(sp)
   84ec8:	dc000017 	ldw	r16,0(sp)
   84ecc:	dec00a04 	addi	sp,sp,40
   84ed0:	f800283a 	ret
   84ed4:	00bffe04 	movi	r2,-8
   84ed8:	18a2703a 	and	r17,r3,r2
   84edc:	883fed16 	blt	r17,zero,84e94 <_malloc_r+0x44>
   84ee0:	897fec36 	bltu	r17,r5,84e94 <_malloc_r+0x44>
   84ee4:	9009883a 	mov	r4,r18
   84ee8:	008a3640 	call	8a364 <__malloc_lock>
   84eec:	00807dc4 	movi	r2,503
   84ef0:	14402b2e 	bgeu	r2,r17,84fa0 <_malloc_r+0x150>
   84ef4:	8806d27a 	srli	r3,r17,9
   84ef8:	18003f1e 	bne	r3,zero,84ff8 <_malloc_r+0x1a8>
   84efc:	880cd0fa 	srli	r6,r17,3
   84f00:	300490fa 	slli	r2,r6,3
   84f04:	02c00274 	movhi	r11,9
   84f08:	5af35c04 	addi	r11,r11,-12944
   84f0c:	12cb883a 	add	r5,r2,r11
   84f10:	2c000317 	ldw	r16,12(r5)
   84f14:	580f883a 	mov	r7,r11
   84f18:	2c00041e 	bne	r5,r16,84f2c <_malloc_r+0xdc>
   84f1c:	00000a06 	br	84f48 <_malloc_r+0xf8>
   84f20:	1800860e 	bge	r3,zero,8513c <_malloc_r+0x2ec>
   84f24:	84000317 	ldw	r16,12(r16)
   84f28:	2c000726 	beq	r5,r16,84f48 <_malloc_r+0xf8>
   84f2c:	80800117 	ldw	r2,4(r16)
   84f30:	00ffff04 	movi	r3,-4
   84f34:	10c8703a 	and	r4,r2,r3
   84f38:	2447c83a 	sub	r3,r4,r17
   84f3c:	008003c4 	movi	r2,15
   84f40:	10fff70e 	bge	r2,r3,84f20 <_malloc_r+0xd0>
   84f44:	31bfffc4 	addi	r6,r6,-1
   84f48:	32400044 	addi	r9,r6,1
   84f4c:	02800274 	movhi	r10,9
   84f50:	52b35e04 	addi	r10,r10,-12936
   84f54:	54000217 	ldw	r16,8(r10)
   84f58:	8280a026 	beq	r16,r10,851dc <_malloc_r+0x38c>
   84f5c:	80800117 	ldw	r2,4(r16)
   84f60:	00ffff04 	movi	r3,-4
   84f64:	10ca703a 	and	r5,r2,r3
   84f68:	2c4dc83a 	sub	r6,r5,r17
   84f6c:	008003c4 	movi	r2,15
   84f70:	11808316 	blt	r2,r6,85180 <_malloc_r+0x330>
   84f74:	52800315 	stw	r10,12(r10)
   84f78:	52800215 	stw	r10,8(r10)
   84f7c:	30002916 	blt	r6,zero,85024 <_malloc_r+0x1d4>
   84f80:	8147883a 	add	r3,r16,r5
   84f84:	18800117 	ldw	r2,4(r3)
   84f88:	9009883a 	mov	r4,r18
   84f8c:	10800054 	ori	r2,r2,1
   84f90:	18800115 	stw	r2,4(r3)
   84f94:	008a3840 	call	8a384 <__malloc_unlock>
   84f98:	80c00204 	addi	r3,r16,8
   84f9c:	003fc006 	br	84ea0 <_malloc_r+0x50>
   84fa0:	02c00274 	movhi	r11,9
   84fa4:	5af35c04 	addi	r11,r11,-12944
   84fa8:	8ac5883a 	add	r2,r17,r11
   84fac:	14000317 	ldw	r16,12(r2)
   84fb0:	580f883a 	mov	r7,r11
   84fb4:	8806d0fa 	srli	r3,r17,3
   84fb8:	14006c26 	beq	r2,r16,8516c <_malloc_r+0x31c>
   84fbc:	80c00117 	ldw	r3,4(r16)
   84fc0:	00bfff04 	movi	r2,-4
   84fc4:	81800317 	ldw	r6,12(r16)
   84fc8:	1886703a 	and	r3,r3,r2
   84fcc:	80c7883a 	add	r3,r16,r3
   84fd0:	18800117 	ldw	r2,4(r3)
   84fd4:	81400217 	ldw	r5,8(r16)
   84fd8:	9009883a 	mov	r4,r18
   84fdc:	10800054 	ori	r2,r2,1
   84fe0:	18800115 	stw	r2,4(r3)
   84fe4:	31400215 	stw	r5,8(r6)
   84fe8:	29800315 	stw	r6,12(r5)
   84fec:	008a3840 	call	8a384 <__malloc_unlock>
   84ff0:	80c00204 	addi	r3,r16,8
   84ff4:	003faa06 	br	84ea0 <_malloc_r+0x50>
   84ff8:	00800104 	movi	r2,4
   84ffc:	10c0052e 	bgeu	r2,r3,85014 <_malloc_r+0x1c4>
   85000:	00800504 	movi	r2,20
   85004:	10c07836 	bltu	r2,r3,851e8 <_malloc_r+0x398>
   85008:	198016c4 	addi	r6,r3,91
   8500c:	300490fa 	slli	r2,r6,3
   85010:	003fbc06 	br	84f04 <_malloc_r+0xb4>
   85014:	8804d1ba 	srli	r2,r17,6
   85018:	11800e04 	addi	r6,r2,56
   8501c:	300490fa 	slli	r2,r6,3
   85020:	003fb806 	br	84f04 <_malloc_r+0xb4>
   85024:	00807fc4 	movi	r2,511
   85028:	1140bb36 	bltu	r2,r5,85318 <_malloc_r+0x4c8>
   8502c:	2806d0fa 	srli	r3,r5,3
   85030:	573ffe04 	addi	fp,r10,-8
   85034:	00800044 	movi	r2,1
   85038:	180890fa 	slli	r4,r3,3
   8503c:	1807d0ba 	srai	r3,r3,2
   85040:	e1c00117 	ldw	r7,4(fp)
   85044:	5909883a 	add	r4,r11,r4
   85048:	21400217 	ldw	r5,8(r4)
   8504c:	10c4983a 	sll	r2,r2,r3
   85050:	81000315 	stw	r4,12(r16)
   85054:	81400215 	stw	r5,8(r16)
   85058:	388eb03a 	or	r7,r7,r2
   8505c:	2c000315 	stw	r16,12(r5)
   85060:	24000215 	stw	r16,8(r4)
   85064:	e1c00115 	stw	r7,4(fp)
   85068:	4807883a 	mov	r3,r9
   8506c:	4800cd16 	blt	r9,zero,853a4 <_malloc_r+0x554>
   85070:	1807d0ba 	srai	r3,r3,2
   85074:	00800044 	movi	r2,1
   85078:	10c8983a 	sll	r4,r2,r3
   8507c:	39004436 	bltu	r7,r4,85190 <_malloc_r+0x340>
   85080:	21c4703a 	and	r2,r4,r7
   85084:	10000a1e 	bne	r2,zero,850b0 <_malloc_r+0x260>
   85088:	2109883a 	add	r4,r4,r4
   8508c:	00bfff04 	movi	r2,-4
   85090:	4884703a 	and	r2,r9,r2
   85094:	3906703a 	and	r3,r7,r4
   85098:	12400104 	addi	r9,r2,4
   8509c:	1800041e 	bne	r3,zero,850b0 <_malloc_r+0x260>
   850a0:	2109883a 	add	r4,r4,r4
   850a4:	3904703a 	and	r2,r7,r4
   850a8:	4a400104 	addi	r9,r9,4
   850ac:	103ffc26 	beq	r2,zero,850a0 <_malloc_r+0x250>
   850b0:	480490fa 	slli	r2,r9,3
   850b4:	4819883a 	mov	r12,r9
   850b8:	023fff04 	movi	r8,-4
   850bc:	589b883a 	add	r13,r11,r2
   850c0:	6807883a 	mov	r3,r13
   850c4:	014003c4 	movi	r5,15
   850c8:	1c000317 	ldw	r16,12(r3)
   850cc:	1c00041e 	bne	r3,r16,850e0 <_malloc_r+0x290>
   850d0:	0000a706 	br	85370 <_malloc_r+0x520>
   850d4:	3000ab0e 	bge	r6,zero,85384 <_malloc_r+0x534>
   850d8:	84000317 	ldw	r16,12(r16)
   850dc:	1c00a426 	beq	r3,r16,85370 <_malloc_r+0x520>
   850e0:	80800117 	ldw	r2,4(r16)
   850e4:	1204703a 	and	r2,r2,r8
   850e8:	144dc83a 	sub	r6,r2,r17
   850ec:	29bff90e 	bge	r5,r6,850d4 <_malloc_r+0x284>
   850f0:	81000317 	ldw	r4,12(r16)
   850f4:	80c00217 	ldw	r3,8(r16)
   850f8:	89400054 	ori	r5,r17,1
   850fc:	8445883a 	add	r2,r16,r17
   85100:	20c00215 	stw	r3,8(r4)
   85104:	19000315 	stw	r4,12(r3)
   85108:	81400115 	stw	r5,4(r16)
   8510c:	1187883a 	add	r3,r2,r6
   85110:	31000054 	ori	r4,r6,1
   85114:	50800315 	stw	r2,12(r10)
   85118:	50800215 	stw	r2,8(r10)
   8511c:	19800015 	stw	r6,0(r3)
   85120:	11000115 	stw	r4,4(r2)
   85124:	12800215 	stw	r10,8(r2)
   85128:	12800315 	stw	r10,12(r2)
   8512c:	9009883a 	mov	r4,r18
   85130:	008a3840 	call	8a384 <__malloc_unlock>
   85134:	80c00204 	addi	r3,r16,8
   85138:	003f5906 	br	84ea0 <_malloc_r+0x50>
   8513c:	8109883a 	add	r4,r16,r4
   85140:	20800117 	ldw	r2,4(r4)
   85144:	80c00217 	ldw	r3,8(r16)
   85148:	81400317 	ldw	r5,12(r16)
   8514c:	10800054 	ori	r2,r2,1
   85150:	20800115 	stw	r2,4(r4)
   85154:	28c00215 	stw	r3,8(r5)
   85158:	19400315 	stw	r5,12(r3)
   8515c:	9009883a 	mov	r4,r18
   85160:	008a3840 	call	8a384 <__malloc_unlock>
   85164:	80c00204 	addi	r3,r16,8
   85168:	003f4d06 	br	84ea0 <_malloc_r+0x50>
   8516c:	80800204 	addi	r2,r16,8
   85170:	14000317 	ldw	r16,12(r2)
   85174:	143f911e 	bne	r2,r16,84fbc <_malloc_r+0x16c>
   85178:	1a400084 	addi	r9,r3,2
   8517c:	003f7306 	br	84f4c <_malloc_r+0xfc>
   85180:	88c00054 	ori	r3,r17,1
   85184:	8445883a 	add	r2,r16,r17
   85188:	80c00115 	stw	r3,4(r16)
   8518c:	003fdf06 	br	8510c <_malloc_r+0x2bc>
   85190:	e4000217 	ldw	r16,8(fp)
   85194:	00bfff04 	movi	r2,-4
   85198:	80c00117 	ldw	r3,4(r16)
   8519c:	802d883a 	mov	r22,r16
   851a0:	18aa703a 	and	r21,r3,r2
   851a4:	ac401636 	bltu	r21,r17,85200 <_malloc_r+0x3b0>
   851a8:	ac49c83a 	sub	r4,r21,r17
   851ac:	008003c4 	movi	r2,15
   851b0:	1100130e 	bge	r2,r4,85200 <_malloc_r+0x3b0>
   851b4:	88800054 	ori	r2,r17,1
   851b8:	8447883a 	add	r3,r16,r17
   851bc:	80800115 	stw	r2,4(r16)
   851c0:	20800054 	ori	r2,r4,1
   851c4:	18800115 	stw	r2,4(r3)
   851c8:	e0c00215 	stw	r3,8(fp)
   851cc:	9009883a 	mov	r4,r18
   851d0:	008a3840 	call	8a384 <__malloc_unlock>
   851d4:	80c00204 	addi	r3,r16,8
   851d8:	003f3106 	br	84ea0 <_malloc_r+0x50>
   851dc:	39c00117 	ldw	r7,4(r7)
   851e0:	573ffe04 	addi	fp,r10,-8
   851e4:	003fa006 	br	85068 <_malloc_r+0x218>
   851e8:	00801504 	movi	r2,84
   851ec:	10c06736 	bltu	r2,r3,8538c <_malloc_r+0x53c>
   851f0:	8804d33a 	srli	r2,r17,12
   851f4:	11801b84 	addi	r6,r2,110
   851f8:	300490fa 	slli	r2,r6,3
   851fc:	003f4106 	br	84f04 <_malloc_r+0xb4>
   85200:	d0a6aa17 	ldw	r2,-25944(gp)
   85204:	d0e00517 	ldw	r3,-32748(gp)
   85208:	053fffc4 	movi	r20,-1
   8520c:	10800404 	addi	r2,r2,16
   85210:	88a7883a 	add	r19,r17,r2
   85214:	1d000326 	beq	r3,r20,85224 <_malloc_r+0x3d4>
   85218:	98c3ffc4 	addi	r3,r19,4095
   8521c:	00bc0004 	movi	r2,-4096
   85220:	18a6703a 	and	r19,r3,r2
   85224:	9009883a 	mov	r4,r18
   85228:	980b883a 	mov	r5,r19
   8522c:	0086f7c0 	call	86f7c <_sbrk_r>
   85230:	1009883a 	mov	r4,r2
   85234:	15000426 	beq	r2,r20,85248 <_malloc_r+0x3f8>
   85238:	854b883a 	add	r5,r16,r21
   8523c:	1029883a 	mov	r20,r2
   85240:	11405a2e 	bgeu	r2,r5,853ac <_malloc_r+0x55c>
   85244:	87000c26 	beq	r16,fp,85278 <_malloc_r+0x428>
   85248:	e4000217 	ldw	r16,8(fp)
   8524c:	80c00117 	ldw	r3,4(r16)
   85250:	00bfff04 	movi	r2,-4
   85254:	1884703a 	and	r2,r3,r2
   85258:	14400336 	bltu	r2,r17,85268 <_malloc_r+0x418>
   8525c:	1449c83a 	sub	r4,r2,r17
   85260:	008003c4 	movi	r2,15
   85264:	113fd316 	blt	r2,r4,851b4 <_malloc_r+0x364>
   85268:	9009883a 	mov	r4,r18
   8526c:	008a3840 	call	8a384 <__malloc_unlock>
   85270:	0007883a 	mov	r3,zero
   85274:	003f0a06 	br	84ea0 <_malloc_r+0x50>
   85278:	05c00274 	movhi	r23,9
   8527c:	bdff9404 	addi	r23,r23,-432
   85280:	b8800017 	ldw	r2,0(r23)
   85284:	988d883a 	add	r6,r19,r2
   85288:	b9800015 	stw	r6,0(r23)
   8528c:	d0e00517 	ldw	r3,-32748(gp)
   85290:	00bfffc4 	movi	r2,-1
   85294:	18808e26 	beq	r3,r2,854d0 <_malloc_r+0x680>
   85298:	2145c83a 	sub	r2,r4,r5
   8529c:	3085883a 	add	r2,r6,r2
   852a0:	b8800015 	stw	r2,0(r23)
   852a4:	20c001cc 	andi	r3,r4,7
   852a8:	18005f1e 	bne	r3,zero,85428 <_malloc_r+0x5d8>
   852ac:	000b883a 	mov	r5,zero
   852b0:	a4c5883a 	add	r2,r20,r19
   852b4:	1083ffcc 	andi	r2,r2,4095
   852b8:	00c40004 	movi	r3,4096
   852bc:	1887c83a 	sub	r3,r3,r2
   852c0:	28e7883a 	add	r19,r5,r3
   852c4:	9009883a 	mov	r4,r18
   852c8:	980b883a 	mov	r5,r19
   852cc:	0086f7c0 	call	86f7c <_sbrk_r>
   852d0:	1007883a 	mov	r3,r2
   852d4:	00bfffc4 	movi	r2,-1
   852d8:	18807a26 	beq	r3,r2,854c4 <_malloc_r+0x674>
   852dc:	1d05c83a 	sub	r2,r3,r20
   852e0:	9885883a 	add	r2,r19,r2
   852e4:	10c00054 	ori	r3,r2,1
   852e8:	b8800017 	ldw	r2,0(r23)
   852ec:	a021883a 	mov	r16,r20
   852f0:	a0c00115 	stw	r3,4(r20)
   852f4:	9885883a 	add	r2,r19,r2
   852f8:	b8800015 	stw	r2,0(r23)
   852fc:	e5000215 	stw	r20,8(fp)
   85300:	b7003626 	beq	r22,fp,853dc <_malloc_r+0x58c>
   85304:	018003c4 	movi	r6,15
   85308:	35404b36 	bltu	r6,r21,85438 <_malloc_r+0x5e8>
   8530c:	00800044 	movi	r2,1
   85310:	a0800115 	stw	r2,4(r20)
   85314:	003fcd06 	br	8524c <_malloc_r+0x3fc>
   85318:	2808d27a 	srli	r4,r5,9
   8531c:	2000371e 	bne	r4,zero,853fc <_malloc_r+0x5ac>
   85320:	2808d0fa 	srli	r4,r5,3
   85324:	200690fa 	slli	r3,r4,3
   85328:	1ad1883a 	add	r8,r3,r11
   8532c:	41800217 	ldw	r6,8(r8)
   85330:	41805b26 	beq	r8,r6,854a0 <_malloc_r+0x650>
   85334:	30800117 	ldw	r2,4(r6)
   85338:	00ffff04 	movi	r3,-4
   8533c:	10c4703a 	and	r2,r2,r3
   85340:	2880022e 	bgeu	r5,r2,8534c <_malloc_r+0x4fc>
   85344:	31800217 	ldw	r6,8(r6)
   85348:	41bffa1e 	bne	r8,r6,85334 <_malloc_r+0x4e4>
   8534c:	32000317 	ldw	r8,12(r6)
   85350:	39c00117 	ldw	r7,4(r7)
   85354:	82000315 	stw	r8,12(r16)
   85358:	81800215 	stw	r6,8(r16)
   8535c:	07000274 	movhi	fp,9
   85360:	e7335c04 	addi	fp,fp,-12944
   85364:	34000315 	stw	r16,12(r6)
   85368:	44000215 	stw	r16,8(r8)
   8536c:	003f3e06 	br	85068 <_malloc_r+0x218>
   85370:	63000044 	addi	r12,r12,1
   85374:	608000cc 	andi	r2,r12,3
   85378:	10005d26 	beq	r2,zero,854f0 <_malloc_r+0x6a0>
   8537c:	18c00204 	addi	r3,r3,8
   85380:	003f5106 	br	850c8 <_malloc_r+0x278>
   85384:	8089883a 	add	r4,r16,r2
   85388:	003f6d06 	br	85140 <_malloc_r+0x2f0>
   8538c:	00805504 	movi	r2,340
   85390:	10c02036 	bltu	r2,r3,85414 <_malloc_r+0x5c4>
   85394:	8804d3fa 	srli	r2,r17,15
   85398:	11801dc4 	addi	r6,r2,119
   8539c:	300490fa 	slli	r2,r6,3
   853a0:	003ed806 	br	84f04 <_malloc_r+0xb4>
   853a4:	48c000c4 	addi	r3,r9,3
   853a8:	003f3106 	br	85070 <_malloc_r+0x220>
   853ac:	05c00274 	movhi	r23,9
   853b0:	bdff9404 	addi	r23,r23,-432
   853b4:	b8800017 	ldw	r2,0(r23)
   853b8:	988d883a 	add	r6,r19,r2
   853bc:	b9800015 	stw	r6,0(r23)
   853c0:	293fb21e 	bne	r5,r4,8528c <_malloc_r+0x43c>
   853c4:	2083ffcc 	andi	r2,r4,4095
   853c8:	103fb01e 	bne	r2,zero,8528c <_malloc_r+0x43c>
   853cc:	e4000217 	ldw	r16,8(fp)
   853d0:	9d45883a 	add	r2,r19,r21
   853d4:	10800054 	ori	r2,r2,1
   853d8:	80800115 	stw	r2,4(r16)
   853dc:	b8c00017 	ldw	r3,0(r23)
   853e0:	d0a6ab17 	ldw	r2,-25940(gp)
   853e4:	10c0012e 	bgeu	r2,r3,853ec <_malloc_r+0x59c>
   853e8:	d0e6ab15 	stw	r3,-25940(gp)
   853ec:	d0a6ac17 	ldw	r2,-25936(gp)
   853f0:	10ff962e 	bgeu	r2,r3,8524c <_malloc_r+0x3fc>
   853f4:	d0e6ac15 	stw	r3,-25936(gp)
   853f8:	003f9406 	br	8524c <_malloc_r+0x3fc>
   853fc:	00800104 	movi	r2,4
   85400:	11001e36 	bltu	r2,r4,8547c <_malloc_r+0x62c>
   85404:	2804d1ba 	srli	r2,r5,6
   85408:	11000e04 	addi	r4,r2,56
   8540c:	200690fa 	slli	r3,r4,3
   85410:	003fc506 	br	85328 <_malloc_r+0x4d8>
   85414:	00815504 	movi	r2,1364
   85418:	10c01d2e 	bgeu	r2,r3,85490 <_malloc_r+0x640>
   8541c:	01801f84 	movi	r6,126
   85420:	0080fc04 	movi	r2,1008
   85424:	003eb706 	br	84f04 <_malloc_r+0xb4>
   85428:	00800204 	movi	r2,8
   8542c:	10cbc83a 	sub	r5,r2,r3
   85430:	2169883a 	add	r20,r4,r5
   85434:	003f9e06 	br	852b0 <_malloc_r+0x460>
   85438:	00bffe04 	movi	r2,-8
   8543c:	a93ffd04 	addi	r4,r21,-12
   85440:	2088703a 	and	r4,r4,r2
   85444:	b10b883a 	add	r5,r22,r4
   85448:	00c00144 	movi	r3,5
   8544c:	28c00215 	stw	r3,8(r5)
   85450:	28c00115 	stw	r3,4(r5)
   85454:	b0800117 	ldw	r2,4(r22)
   85458:	1080004c 	andi	r2,r2,1
   8545c:	2084b03a 	or	r2,r4,r2
   85460:	b0800115 	stw	r2,4(r22)
   85464:	313fdd2e 	bgeu	r6,r4,853dc <_malloc_r+0x58c>
   85468:	b1400204 	addi	r5,r22,8
   8546c:	9009883a 	mov	r4,r18
   85470:	00842c80 	call	842c8 <_free_r>
   85474:	e4000217 	ldw	r16,8(fp)
   85478:	003fd806 	br	853dc <_malloc_r+0x58c>
   8547c:	00800504 	movi	r2,20
   85480:	11001536 	bltu	r2,r4,854d8 <_malloc_r+0x688>
   85484:	210016c4 	addi	r4,r4,91
   85488:	200690fa 	slli	r3,r4,3
   8548c:	003fa606 	br	85328 <_malloc_r+0x4d8>
   85490:	8804d4ba 	srli	r2,r17,18
   85494:	11801f04 	addi	r6,r2,124
   85498:	300490fa 	slli	r2,r6,3
   8549c:	003e9906 	br	84f04 <_malloc_r+0xb4>
   854a0:	2009d0ba 	srai	r4,r4,2
   854a4:	01400274 	movhi	r5,9
   854a8:	29735c04 	addi	r5,r5,-12944
   854ac:	00c00044 	movi	r3,1
   854b0:	28800117 	ldw	r2,4(r5)
   854b4:	1906983a 	sll	r3,r3,r4
   854b8:	10c4b03a 	or	r2,r2,r3
   854bc:	28800115 	stw	r2,4(r5)
   854c0:	003fa306 	br	85350 <_malloc_r+0x500>
   854c4:	0027883a 	mov	r19,zero
   854c8:	00c00044 	movi	r3,1
   854cc:	003f8606 	br	852e8 <_malloc_r+0x498>
   854d0:	d1200515 	stw	r4,-32748(gp)
   854d4:	003f7306 	br	852a4 <_malloc_r+0x454>
   854d8:	00801504 	movi	r2,84
   854dc:	11001936 	bltu	r2,r4,85544 <_malloc_r+0x6f4>
   854e0:	2804d33a 	srli	r2,r5,12
   854e4:	11001b84 	addi	r4,r2,110
   854e8:	200690fa 	slli	r3,r4,3
   854ec:	003f8e06 	br	85328 <_malloc_r+0x4d8>
   854f0:	480b883a 	mov	r5,r9
   854f4:	6807883a 	mov	r3,r13
   854f8:	288000cc 	andi	r2,r5,3
   854fc:	18fffe04 	addi	r3,r3,-8
   85500:	297fffc4 	addi	r5,r5,-1
   85504:	10001526 	beq	r2,zero,8555c <_malloc_r+0x70c>
   85508:	18800217 	ldw	r2,8(r3)
   8550c:	10fffa26 	beq	r2,r3,854f8 <_malloc_r+0x6a8>
   85510:	2109883a 	add	r4,r4,r4
   85514:	393f1e36 	bltu	r7,r4,85190 <_malloc_r+0x340>
   85518:	203f1d26 	beq	r4,zero,85190 <_malloc_r+0x340>
   8551c:	21c4703a 	and	r2,r4,r7
   85520:	10000226 	beq	r2,zero,8552c <_malloc_r+0x6dc>
   85524:	6013883a 	mov	r9,r12
   85528:	003ee106 	br	850b0 <_malloc_r+0x260>
   8552c:	2109883a 	add	r4,r4,r4
   85530:	3904703a 	and	r2,r7,r4
   85534:	63000104 	addi	r12,r12,4
   85538:	103ffc26 	beq	r2,zero,8552c <_malloc_r+0x6dc>
   8553c:	6013883a 	mov	r9,r12
   85540:	003edb06 	br	850b0 <_malloc_r+0x260>
   85544:	00805504 	movi	r2,340
   85548:	11000836 	bltu	r2,r4,8556c <_malloc_r+0x71c>
   8554c:	2804d3fa 	srli	r2,r5,15
   85550:	11001dc4 	addi	r4,r2,119
   85554:	200690fa 	slli	r3,r4,3
   85558:	003f7306 	br	85328 <_malloc_r+0x4d8>
   8555c:	0104303a 	nor	r2,zero,r4
   85560:	388e703a 	and	r7,r7,r2
   85564:	e1c00115 	stw	r7,4(fp)
   85568:	003fe906 	br	85510 <_malloc_r+0x6c0>
   8556c:	00815504 	movi	r2,1364
   85570:	1100032e 	bgeu	r2,r4,85580 <_malloc_r+0x730>
   85574:	01001f84 	movi	r4,126
   85578:	00c0fc04 	movi	r3,1008
   8557c:	003f6a06 	br	85328 <_malloc_r+0x4d8>
   85580:	2804d4ba 	srli	r2,r5,18
   85584:	11001f04 	addi	r4,r2,124
   85588:	200690fa 	slli	r3,r4,3
   8558c:	003f6606 	br	85328 <_malloc_r+0x4d8>

00085590 <memchr>:
   85590:	008000c4 	movi	r2,3
   85594:	29403fcc 	andi	r5,r5,255
   85598:	2007883a 	mov	r3,r4
   8559c:	1180022e 	bgeu	r2,r6,855a8 <memchr+0x18>
   855a0:	2084703a 	and	r2,r4,r2
   855a4:	10000b26 	beq	r2,zero,855d4 <memchr+0x44>
   855a8:	313fffc4 	addi	r4,r6,-1
   855ac:	3000051e 	bne	r6,zero,855c4 <memchr+0x34>
   855b0:	00002c06 	br	85664 <memchr+0xd4>
   855b4:	213fffc4 	addi	r4,r4,-1
   855b8:	00bfffc4 	movi	r2,-1
   855bc:	18c00044 	addi	r3,r3,1
   855c0:	20802826 	beq	r4,r2,85664 <memchr+0xd4>
   855c4:	18800003 	ldbu	r2,0(r3)
   855c8:	28bffa1e 	bne	r5,r2,855b4 <memchr+0x24>
   855cc:	1805883a 	mov	r2,r3
   855d0:	f800283a 	ret
   855d4:	0011883a 	mov	r8,zero
   855d8:	0007883a 	mov	r3,zero
   855dc:	01c00104 	movi	r7,4
   855e0:	4004923a 	slli	r2,r8,8
   855e4:	18c00044 	addi	r3,r3,1
   855e8:	1151883a 	add	r8,r2,r5
   855ec:	19fffc1e 	bne	r3,r7,855e0 <memchr+0x50>
   855f0:	02bfbff4 	movhi	r10,65279
   855f4:	52bfbfc4 	addi	r10,r10,-257
   855f8:	02602074 	movhi	r9,32897
   855fc:	4a602004 	addi	r9,r9,-32640
   85600:	02c000c4 	movi	r11,3
   85604:	20800017 	ldw	r2,0(r4)
   85608:	31bfff04 	addi	r6,r6,-4
   8560c:	200f883a 	mov	r7,r4
   85610:	1204f03a 	xor	r2,r2,r8
   85614:	1287883a 	add	r3,r2,r10
   85618:	1a46703a 	and	r3,r3,r9
   8561c:	0084303a 	nor	r2,zero,r2
   85620:	10c4703a 	and	r2,r2,r3
   85624:	10000b26 	beq	r2,zero,85654 <memchr+0xc4>
   85628:	20800003 	ldbu	r2,0(r4)
   8562c:	28800f26 	beq	r5,r2,8566c <memchr+0xdc>
   85630:	20800043 	ldbu	r2,1(r4)
   85634:	21c00044 	addi	r7,r4,1
   85638:	28800c26 	beq	r5,r2,8566c <memchr+0xdc>
   8563c:	20800083 	ldbu	r2,2(r4)
   85640:	21c00084 	addi	r7,r4,2
   85644:	28800926 	beq	r5,r2,8566c <memchr+0xdc>
   85648:	208000c3 	ldbu	r2,3(r4)
   8564c:	21c000c4 	addi	r7,r4,3
   85650:	28800626 	beq	r5,r2,8566c <memchr+0xdc>
   85654:	21000104 	addi	r4,r4,4
   85658:	59bfea36 	bltu	r11,r6,85604 <memchr+0x74>
   8565c:	2007883a 	mov	r3,r4
   85660:	003fd106 	br	855a8 <memchr+0x18>
   85664:	0005883a 	mov	r2,zero
   85668:	f800283a 	ret
   8566c:	3805883a 	mov	r2,r7
   85670:	f800283a 	ret

00085674 <memcpy>:
   85674:	01c003c4 	movi	r7,15
   85678:	2007883a 	mov	r3,r4
   8567c:	3980032e 	bgeu	r7,r6,8568c <memcpy+0x18>
   85680:	2904b03a 	or	r2,r5,r4
   85684:	108000cc 	andi	r2,r2,3
   85688:	10000926 	beq	r2,zero,856b0 <memcpy+0x3c>
   8568c:	30000626 	beq	r6,zero,856a8 <memcpy+0x34>
   85690:	30cd883a 	add	r6,r6,r3
   85694:	28800003 	ldbu	r2,0(r5)
   85698:	29400044 	addi	r5,r5,1
   8569c:	18800005 	stb	r2,0(r3)
   856a0:	18c00044 	addi	r3,r3,1
   856a4:	30fffb1e 	bne	r6,r3,85694 <memcpy+0x20>
   856a8:	2005883a 	mov	r2,r4
   856ac:	f800283a 	ret
   856b0:	3811883a 	mov	r8,r7
   856b4:	200f883a 	mov	r7,r4
   856b8:	28c00017 	ldw	r3,0(r5)
   856bc:	31bffc04 	addi	r6,r6,-16
   856c0:	38c00015 	stw	r3,0(r7)
   856c4:	28800117 	ldw	r2,4(r5)
   856c8:	38800115 	stw	r2,4(r7)
   856cc:	28c00217 	ldw	r3,8(r5)
   856d0:	38c00215 	stw	r3,8(r7)
   856d4:	28800317 	ldw	r2,12(r5)
   856d8:	29400404 	addi	r5,r5,16
   856dc:	38800315 	stw	r2,12(r7)
   856e0:	39c00404 	addi	r7,r7,16
   856e4:	41bff436 	bltu	r8,r6,856b8 <memcpy+0x44>
   856e8:	008000c4 	movi	r2,3
   856ec:	1180072e 	bgeu	r2,r6,8570c <memcpy+0x98>
   856f0:	1007883a 	mov	r3,r2
   856f4:	28800017 	ldw	r2,0(r5)
   856f8:	31bfff04 	addi	r6,r6,-4
   856fc:	29400104 	addi	r5,r5,4
   85700:	38800015 	stw	r2,0(r7)
   85704:	39c00104 	addi	r7,r7,4
   85708:	19bffa36 	bltu	r3,r6,856f4 <memcpy+0x80>
   8570c:	3807883a 	mov	r3,r7
   85710:	003fde06 	br	8568c <memcpy+0x18>

00085714 <memmove>:
   85714:	2807883a 	mov	r3,r5
   85718:	2011883a 	mov	r8,r4
   8571c:	29000c2e 	bgeu	r5,r4,85750 <memmove+0x3c>
   85720:	298f883a 	add	r7,r5,r6
   85724:	21c00a2e 	bgeu	r4,r7,85750 <memmove+0x3c>
   85728:	30000726 	beq	r6,zero,85748 <memmove+0x34>
   8572c:	2187883a 	add	r3,r4,r6
   85730:	198dc83a 	sub	r6,r3,r6
   85734:	39ffffc4 	addi	r7,r7,-1
   85738:	38800003 	ldbu	r2,0(r7)
   8573c:	18ffffc4 	addi	r3,r3,-1
   85740:	18800005 	stb	r2,0(r3)
   85744:	19bffb1e 	bne	r3,r6,85734 <memmove+0x20>
   85748:	2005883a 	mov	r2,r4
   8574c:	f800283a 	ret
   85750:	01c003c4 	movi	r7,15
   85754:	39800a36 	bltu	r7,r6,85780 <memmove+0x6c>
   85758:	303ffb26 	beq	r6,zero,85748 <memmove+0x34>
   8575c:	400f883a 	mov	r7,r8
   85760:	320d883a 	add	r6,r6,r8
   85764:	28800003 	ldbu	r2,0(r5)
   85768:	29400044 	addi	r5,r5,1
   8576c:	38800005 	stb	r2,0(r7)
   85770:	39c00044 	addi	r7,r7,1
   85774:	39bffb1e 	bne	r7,r6,85764 <memmove+0x50>
   85778:	2005883a 	mov	r2,r4
   8577c:	f800283a 	ret
   85780:	1904b03a 	or	r2,r3,r4
   85784:	108000cc 	andi	r2,r2,3
   85788:	103ff31e 	bne	r2,zero,85758 <memmove+0x44>
   8578c:	3811883a 	mov	r8,r7
   85790:	180b883a 	mov	r5,r3
   85794:	200f883a 	mov	r7,r4
   85798:	28c00017 	ldw	r3,0(r5)
   8579c:	31bffc04 	addi	r6,r6,-16
   857a0:	38c00015 	stw	r3,0(r7)
   857a4:	28800117 	ldw	r2,4(r5)
   857a8:	38800115 	stw	r2,4(r7)
   857ac:	28c00217 	ldw	r3,8(r5)
   857b0:	38c00215 	stw	r3,8(r7)
   857b4:	28800317 	ldw	r2,12(r5)
   857b8:	29400404 	addi	r5,r5,16
   857bc:	38800315 	stw	r2,12(r7)
   857c0:	39c00404 	addi	r7,r7,16
   857c4:	41bff436 	bltu	r8,r6,85798 <memmove+0x84>
   857c8:	008000c4 	movi	r2,3
   857cc:	1180072e 	bgeu	r2,r6,857ec <memmove+0xd8>
   857d0:	1007883a 	mov	r3,r2
   857d4:	28800017 	ldw	r2,0(r5)
   857d8:	31bfff04 	addi	r6,r6,-4
   857dc:	29400104 	addi	r5,r5,4
   857e0:	38800015 	stw	r2,0(r7)
   857e4:	39c00104 	addi	r7,r7,4
   857e8:	19bffa36 	bltu	r3,r6,857d4 <memmove+0xc0>
   857ec:	3811883a 	mov	r8,r7
   857f0:	003fd906 	br	85758 <memmove+0x44>

000857f4 <memset>:
   857f4:	008000c4 	movi	r2,3
   857f8:	29403fcc 	andi	r5,r5,255
   857fc:	2007883a 	mov	r3,r4
   85800:	1180022e 	bgeu	r2,r6,8580c <memset+0x18>
   85804:	2084703a 	and	r2,r4,r2
   85808:	10000826 	beq	r2,zero,8582c <memset+0x38>
   8580c:	30000526 	beq	r6,zero,85824 <memset+0x30>
   85810:	2805883a 	mov	r2,r5
   85814:	30cd883a 	add	r6,r6,r3
   85818:	18800005 	stb	r2,0(r3)
   8581c:	18c00044 	addi	r3,r3,1
   85820:	19bffd1e 	bne	r3,r6,85818 <memset+0x24>
   85824:	2005883a 	mov	r2,r4
   85828:	f800283a 	ret
   8582c:	2804923a 	slli	r2,r5,8
   85830:	020003c4 	movi	r8,15
   85834:	200f883a 	mov	r7,r4
   85838:	2884b03a 	or	r2,r5,r2
   8583c:	1006943a 	slli	r3,r2,16
   85840:	10c6b03a 	or	r3,r2,r3
   85844:	41800a2e 	bgeu	r8,r6,85870 <memset+0x7c>
   85848:	4005883a 	mov	r2,r8
   8584c:	31bffc04 	addi	r6,r6,-16
   85850:	38c00015 	stw	r3,0(r7)
   85854:	38c00115 	stw	r3,4(r7)
   85858:	38c00215 	stw	r3,8(r7)
   8585c:	38c00315 	stw	r3,12(r7)
   85860:	39c00404 	addi	r7,r7,16
   85864:	11bff936 	bltu	r2,r6,8584c <memset+0x58>
   85868:	008000c4 	movi	r2,3
   8586c:	1180052e 	bgeu	r2,r6,85884 <memset+0x90>
   85870:	31bfff04 	addi	r6,r6,-4
   85874:	008000c4 	movi	r2,3
   85878:	38c00015 	stw	r3,0(r7)
   8587c:	39c00104 	addi	r7,r7,4
   85880:	11bffb36 	bltu	r2,r6,85870 <memset+0x7c>
   85884:	3807883a 	mov	r3,r7
   85888:	003fe006 	br	8580c <memset+0x18>

0008588c <_Bfree>:
   8588c:	28000826 	beq	r5,zero,858b0 <_Bfree+0x24>
   85890:	28800117 	ldw	r2,4(r5)
   85894:	21001317 	ldw	r4,76(r4)
   85898:	1085883a 	add	r2,r2,r2
   8589c:	1085883a 	add	r2,r2,r2
   858a0:	1105883a 	add	r2,r2,r4
   858a4:	10c00017 	ldw	r3,0(r2)
   858a8:	28c00015 	stw	r3,0(r5)
   858ac:	11400015 	stw	r5,0(r2)
   858b0:	f800283a 	ret

000858b4 <__hi0bits>:
   858b4:	20bfffec 	andhi	r2,r4,65535
   858b8:	10001426 	beq	r2,zero,8590c <__hi0bits+0x58>
   858bc:	0007883a 	mov	r3,zero
   858c0:	20bfc02c 	andhi	r2,r4,65280
   858c4:	1000021e 	bne	r2,zero,858d0 <__hi0bits+0x1c>
   858c8:	2008923a 	slli	r4,r4,8
   858cc:	18c00204 	addi	r3,r3,8
   858d0:	20bc002c 	andhi	r2,r4,61440
   858d4:	1000021e 	bne	r2,zero,858e0 <__hi0bits+0x2c>
   858d8:	2008913a 	slli	r4,r4,4
   858dc:	18c00104 	addi	r3,r3,4
   858e0:	20b0002c 	andhi	r2,r4,49152
   858e4:	1000031e 	bne	r2,zero,858f4 <__hi0bits+0x40>
   858e8:	2105883a 	add	r2,r4,r4
   858ec:	18c00084 	addi	r3,r3,2
   858f0:	1089883a 	add	r4,r2,r2
   858f4:	20000316 	blt	r4,zero,85904 <__hi0bits+0x50>
   858f8:	2090002c 	andhi	r2,r4,16384
   858fc:	10000626 	beq	r2,zero,85918 <__hi0bits+0x64>
   85900:	18c00044 	addi	r3,r3,1
   85904:	1805883a 	mov	r2,r3
   85908:	f800283a 	ret
   8590c:	2008943a 	slli	r4,r4,16
   85910:	00c00404 	movi	r3,16
   85914:	003fea06 	br	858c0 <__hi0bits+0xc>
   85918:	00c00804 	movi	r3,32
   8591c:	1805883a 	mov	r2,r3
   85920:	f800283a 	ret

00085924 <__lo0bits>:
   85924:	20c00017 	ldw	r3,0(r4)
   85928:	188001cc 	andi	r2,r3,7
   8592c:	10000a26 	beq	r2,zero,85958 <__lo0bits+0x34>
   85930:	1880004c 	andi	r2,r3,1
   85934:	1005003a 	cmpeq	r2,r2,zero
   85938:	10002126 	beq	r2,zero,859c0 <__lo0bits+0x9c>
   8593c:	1880008c 	andi	r2,r3,2
   85940:	1000251e 	bne	r2,zero,859d8 <__lo0bits+0xb4>
   85944:	1804d0ba 	srli	r2,r3,2
   85948:	01400084 	movi	r5,2
   8594c:	20800015 	stw	r2,0(r4)
   85950:	2805883a 	mov	r2,r5
   85954:	f800283a 	ret
   85958:	18bfffcc 	andi	r2,r3,65535
   8595c:	10001526 	beq	r2,zero,859b4 <__lo0bits+0x90>
   85960:	000b883a 	mov	r5,zero
   85964:	18803fcc 	andi	r2,r3,255
   85968:	1000021e 	bne	r2,zero,85974 <__lo0bits+0x50>
   8596c:	1806d23a 	srli	r3,r3,8
   85970:	29400204 	addi	r5,r5,8
   85974:	188003cc 	andi	r2,r3,15
   85978:	1000021e 	bne	r2,zero,85984 <__lo0bits+0x60>
   8597c:	1806d13a 	srli	r3,r3,4
   85980:	29400104 	addi	r5,r5,4
   85984:	188000cc 	andi	r2,r3,3
   85988:	1000021e 	bne	r2,zero,85994 <__lo0bits+0x70>
   8598c:	1806d0ba 	srli	r3,r3,2
   85990:	29400084 	addi	r5,r5,2
   85994:	1880004c 	andi	r2,r3,1
   85998:	1000031e 	bne	r2,zero,859a8 <__lo0bits+0x84>
   8599c:	1806d07a 	srli	r3,r3,1
   859a0:	18000a26 	beq	r3,zero,859cc <__lo0bits+0xa8>
   859a4:	29400044 	addi	r5,r5,1
   859a8:	2805883a 	mov	r2,r5
   859ac:	20c00015 	stw	r3,0(r4)
   859b0:	f800283a 	ret
   859b4:	1806d43a 	srli	r3,r3,16
   859b8:	01400404 	movi	r5,16
   859bc:	003fe906 	br	85964 <__lo0bits+0x40>
   859c0:	000b883a 	mov	r5,zero
   859c4:	2805883a 	mov	r2,r5
   859c8:	f800283a 	ret
   859cc:	01400804 	movi	r5,32
   859d0:	2805883a 	mov	r2,r5
   859d4:	f800283a 	ret
   859d8:	1804d07a 	srli	r2,r3,1
   859dc:	01400044 	movi	r5,1
   859e0:	20800015 	stw	r2,0(r4)
   859e4:	003fda06 	br	85950 <__lo0bits+0x2c>

000859e8 <__mcmp>:
   859e8:	20800417 	ldw	r2,16(r4)
   859ec:	28c00417 	ldw	r3,16(r5)
   859f0:	10cfc83a 	sub	r7,r2,r3
   859f4:	38000c1e 	bne	r7,zero,85a28 <__mcmp+0x40>
   859f8:	18c5883a 	add	r2,r3,r3
   859fc:	1085883a 	add	r2,r2,r2
   85a00:	10c00504 	addi	r3,r2,20
   85a04:	21000504 	addi	r4,r4,20
   85a08:	28cb883a 	add	r5,r5,r3
   85a0c:	2085883a 	add	r2,r4,r2
   85a10:	10bfff04 	addi	r2,r2,-4
   85a14:	297fff04 	addi	r5,r5,-4
   85a18:	11800017 	ldw	r6,0(r2)
   85a1c:	28c00017 	ldw	r3,0(r5)
   85a20:	30c0031e 	bne	r6,r3,85a30 <__mcmp+0x48>
   85a24:	20bffa36 	bltu	r4,r2,85a10 <__mcmp+0x28>
   85a28:	3805883a 	mov	r2,r7
   85a2c:	f800283a 	ret
   85a30:	30c00336 	bltu	r6,r3,85a40 <__mcmp+0x58>
   85a34:	01c00044 	movi	r7,1
   85a38:	3805883a 	mov	r2,r7
   85a3c:	f800283a 	ret
   85a40:	01ffffc4 	movi	r7,-1
   85a44:	003ff806 	br	85a28 <__mcmp+0x40>

00085a48 <__ulp>:
   85a48:	295ffc2c 	andhi	r5,r5,32752
   85a4c:	013f3034 	movhi	r4,64704
   85a50:	290b883a 	add	r5,r5,r4
   85a54:	0145c83a 	sub	r2,zero,r5
   85a58:	1007d53a 	srai	r3,r2,20
   85a5c:	000d883a 	mov	r6,zero
   85a60:	0140040e 	bge	zero,r5,85a74 <__ulp+0x2c>
   85a64:	280f883a 	mov	r7,r5
   85a68:	3807883a 	mov	r3,r7
   85a6c:	3005883a 	mov	r2,r6
   85a70:	f800283a 	ret
   85a74:	008004c4 	movi	r2,19
   85a78:	193ffb04 	addi	r4,r3,-20
   85a7c:	10c00c0e 	bge	r2,r3,85ab0 <__ulp+0x68>
   85a80:	008007c4 	movi	r2,31
   85a84:	1107c83a 	sub	r3,r2,r4
   85a88:	00800784 	movi	r2,30
   85a8c:	01400044 	movi	r5,1
   85a90:	11000216 	blt	r2,r4,85a9c <__ulp+0x54>
   85a94:	00800044 	movi	r2,1
   85a98:	10ca983a 	sll	r5,r2,r3
   85a9c:	000f883a 	mov	r7,zero
   85aa0:	280d883a 	mov	r6,r5
   85aa4:	3807883a 	mov	r3,r7
   85aa8:	3005883a 	mov	r2,r6
   85aac:	f800283a 	ret
   85ab0:	00800234 	movhi	r2,8
   85ab4:	10cfd83a 	sra	r7,r2,r3
   85ab8:	000d883a 	mov	r6,zero
   85abc:	3005883a 	mov	r2,r6
   85ac0:	3807883a 	mov	r3,r7
   85ac4:	f800283a 	ret

00085ac8 <__b2d>:
   85ac8:	20800417 	ldw	r2,16(r4)
   85acc:	defff904 	addi	sp,sp,-28
   85ad0:	dd000415 	stw	r20,16(sp)
   85ad4:	1085883a 	add	r2,r2,r2
   85ad8:	25000504 	addi	r20,r4,20
   85adc:	1085883a 	add	r2,r2,r2
   85ae0:	dc000015 	stw	r16,0(sp)
   85ae4:	a0a1883a 	add	r16,r20,r2
   85ae8:	dd400515 	stw	r21,20(sp)
   85aec:	857fff17 	ldw	r21,-4(r16)
   85af0:	dc400115 	stw	r17,4(sp)
   85af4:	dfc00615 	stw	ra,24(sp)
   85af8:	a809883a 	mov	r4,r21
   85afc:	2823883a 	mov	r17,r5
   85b00:	dcc00315 	stw	r19,12(sp)
   85b04:	dc800215 	stw	r18,8(sp)
   85b08:	00858b40 	call	858b4 <__hi0bits>
   85b0c:	100b883a 	mov	r5,r2
   85b10:	00800804 	movi	r2,32
   85b14:	1145c83a 	sub	r2,r2,r5
   85b18:	88800015 	stw	r2,0(r17)
   85b1c:	00800284 	movi	r2,10
   85b20:	80ffff04 	addi	r3,r16,-4
   85b24:	11401416 	blt	r2,r5,85b78 <__b2d+0xb0>
   85b28:	008002c4 	movi	r2,11
   85b2c:	1149c83a 	sub	r4,r2,r5
   85b30:	a0c02736 	bltu	r20,r3,85bd0 <__b2d+0x108>
   85b34:	000d883a 	mov	r6,zero
   85b38:	28800544 	addi	r2,r5,21
   85b3c:	a906d83a 	srl	r3,r21,r4
   85b40:	a884983a 	sll	r2,r21,r2
   85b44:	1ccffc34 	orhi	r19,r3,16368
   85b48:	11a4b03a 	or	r18,r2,r6
   85b4c:	9005883a 	mov	r2,r18
   85b50:	9807883a 	mov	r3,r19
   85b54:	dfc00617 	ldw	ra,24(sp)
   85b58:	dd400517 	ldw	r21,20(sp)
   85b5c:	dd000417 	ldw	r20,16(sp)
   85b60:	dcc00317 	ldw	r19,12(sp)
   85b64:	dc800217 	ldw	r18,8(sp)
   85b68:	dc400117 	ldw	r17,4(sp)
   85b6c:	dc000017 	ldw	r16,0(sp)
   85b70:	dec00704 	addi	sp,sp,28
   85b74:	f800283a 	ret
   85b78:	a0c00e36 	bltu	r20,r3,85bb4 <__b2d+0xec>
   85b7c:	293ffd44 	addi	r4,r5,-11
   85b80:	000d883a 	mov	r6,zero
   85b84:	20000f26 	beq	r4,zero,85bc4 <__b2d+0xfc>
   85b88:	00800804 	movi	r2,32
   85b8c:	110bc83a 	sub	r5,r2,r4
   85b90:	a0c01236 	bltu	r20,r3,85bdc <__b2d+0x114>
   85b94:	000f883a 	mov	r7,zero
   85b98:	a904983a 	sll	r2,r21,r4
   85b9c:	3146d83a 	srl	r3,r6,r5
   85ba0:	3108983a 	sll	r4,r6,r4
   85ba4:	108ffc34 	orhi	r2,r2,16368
   85ba8:	18a6b03a 	or	r19,r3,r2
   85bac:	3924b03a 	or	r18,r7,r4
   85bb0:	003fe606 	br	85b4c <__b2d+0x84>
   85bb4:	293ffd44 	addi	r4,r5,-11
   85bb8:	81bffe17 	ldw	r6,-8(r16)
   85bbc:	80fffe04 	addi	r3,r16,-8
   85bc0:	203ff11e 	bne	r4,zero,85b88 <__b2d+0xc0>
   85bc4:	accffc34 	orhi	r19,r21,16368
   85bc8:	3025883a 	mov	r18,r6
   85bcc:	003fdf06 	br	85b4c <__b2d+0x84>
   85bd0:	18bfff17 	ldw	r2,-4(r3)
   85bd4:	110cd83a 	srl	r6,r2,r4
   85bd8:	003fd706 	br	85b38 <__b2d+0x70>
   85bdc:	18bfff17 	ldw	r2,-4(r3)
   85be0:	114ed83a 	srl	r7,r2,r5
   85be4:	003fec06 	br	85b98 <__b2d+0xd0>

00085be8 <__ratio>:
   85be8:	defff904 	addi	sp,sp,-28
   85bec:	dc400215 	stw	r17,8(sp)
   85bf0:	2823883a 	mov	r17,r5
   85bf4:	d80b883a 	mov	r5,sp
   85bf8:	dfc00615 	stw	ra,24(sp)
   85bfc:	dd000515 	stw	r20,20(sp)
   85c00:	dcc00415 	stw	r19,16(sp)
   85c04:	dc800315 	stw	r18,12(sp)
   85c08:	2025883a 	mov	r18,r4
   85c0c:	0085ac80 	call	85ac8 <__b2d>
   85c10:	8809883a 	mov	r4,r17
   85c14:	d9400104 	addi	r5,sp,4
   85c18:	1027883a 	mov	r19,r2
   85c1c:	1829883a 	mov	r20,r3
   85c20:	0085ac80 	call	85ac8 <__b2d>
   85c24:	89000417 	ldw	r4,16(r17)
   85c28:	91c00417 	ldw	r7,16(r18)
   85c2c:	d9800117 	ldw	r6,4(sp)
   85c30:	180b883a 	mov	r5,r3
   85c34:	390fc83a 	sub	r7,r7,r4
   85c38:	1009883a 	mov	r4,r2
   85c3c:	d8800017 	ldw	r2,0(sp)
   85c40:	380e917a 	slli	r7,r7,5
   85c44:	2011883a 	mov	r8,r4
   85c48:	1185c83a 	sub	r2,r2,r6
   85c4c:	11c5883a 	add	r2,r2,r7
   85c50:	1006953a 	slli	r3,r2,20
   85c54:	2813883a 	mov	r9,r5
   85c58:	00800d0e 	bge	zero,r2,85c90 <__ratio+0xa8>
   85c5c:	1d29883a 	add	r20,r3,r20
   85c60:	a00b883a 	mov	r5,r20
   85c64:	480f883a 	mov	r7,r9
   85c68:	9809883a 	mov	r4,r19
   85c6c:	400d883a 	mov	r6,r8
   85c70:	0088c300 	call	88c30 <__divdf3>
   85c74:	dfc00617 	ldw	ra,24(sp)
   85c78:	dd000517 	ldw	r20,20(sp)
   85c7c:	dcc00417 	ldw	r19,16(sp)
   85c80:	dc800317 	ldw	r18,12(sp)
   85c84:	dc400217 	ldw	r17,8(sp)
   85c88:	dec00704 	addi	sp,sp,28
   85c8c:	f800283a 	ret
   85c90:	28d3c83a 	sub	r9,r5,r3
   85c94:	003ff206 	br	85c60 <__ratio+0x78>

00085c98 <_mprec_log10>:
   85c98:	defffe04 	addi	sp,sp,-8
   85c9c:	008005c4 	movi	r2,23
   85ca0:	dc000015 	stw	r16,0(sp)
   85ca4:	dfc00115 	stw	ra,4(sp)
   85ca8:	2021883a 	mov	r16,r4
   85cac:	11000c16 	blt	r2,r4,85ce0 <_mprec_log10+0x48>
   85cb0:	200490fa 	slli	r2,r4,3
   85cb4:	00c00274 	movhi	r3,9
   85cb8:	18f1be04 	addi	r3,r3,-14600
   85cbc:	10c5883a 	add	r2,r2,r3
   85cc0:	12400117 	ldw	r9,4(r2)
   85cc4:	12000017 	ldw	r8,0(r2)
   85cc8:	4807883a 	mov	r3,r9
   85ccc:	4005883a 	mov	r2,r8
   85cd0:	dfc00117 	ldw	ra,4(sp)
   85cd4:	dc000017 	ldw	r16,0(sp)
   85cd8:	dec00204 	addi	sp,sp,8
   85cdc:	f800283a 	ret
   85ce0:	0011883a 	mov	r8,zero
   85ce4:	024ffc34 	movhi	r9,16368
   85ce8:	0005883a 	mov	r2,zero
   85cec:	00d00934 	movhi	r3,16420
   85cf0:	480b883a 	mov	r5,r9
   85cf4:	4009883a 	mov	r4,r8
   85cf8:	180f883a 	mov	r7,r3
   85cfc:	100d883a 	mov	r6,r2
   85d00:	008886c0 	call	8886c <__muldf3>
   85d04:	843fffc4 	addi	r16,r16,-1
   85d08:	1011883a 	mov	r8,r2
   85d0c:	1813883a 	mov	r9,r3
   85d10:	803ff51e 	bne	r16,zero,85ce8 <_mprec_log10+0x50>
   85d14:	4005883a 	mov	r2,r8
   85d18:	4807883a 	mov	r3,r9
   85d1c:	dfc00117 	ldw	ra,4(sp)
   85d20:	dc000017 	ldw	r16,0(sp)
   85d24:	dec00204 	addi	sp,sp,8
   85d28:	f800283a 	ret

00085d2c <__copybits>:
   85d2c:	297fffc4 	addi	r5,r5,-1
   85d30:	30800417 	ldw	r2,16(r6)
   85d34:	280bd17a 	srai	r5,r5,5
   85d38:	31800504 	addi	r6,r6,20
   85d3c:	1085883a 	add	r2,r2,r2
   85d40:	294b883a 	add	r5,r5,r5
   85d44:	294b883a 	add	r5,r5,r5
   85d48:	1085883a 	add	r2,r2,r2
   85d4c:	290b883a 	add	r5,r5,r4
   85d50:	3087883a 	add	r3,r6,r2
   85d54:	29400104 	addi	r5,r5,4
   85d58:	30c0052e 	bgeu	r6,r3,85d70 <__copybits+0x44>
   85d5c:	30800017 	ldw	r2,0(r6)
   85d60:	31800104 	addi	r6,r6,4
   85d64:	20800015 	stw	r2,0(r4)
   85d68:	21000104 	addi	r4,r4,4
   85d6c:	30fffb36 	bltu	r6,r3,85d5c <__copybits+0x30>
   85d70:	2140032e 	bgeu	r4,r5,85d80 <__copybits+0x54>
   85d74:	20000015 	stw	zero,0(r4)
   85d78:	21000104 	addi	r4,r4,4
   85d7c:	217ffd36 	bltu	r4,r5,85d74 <__copybits+0x48>
   85d80:	f800283a 	ret

00085d84 <__any_on>:
   85d84:	20800417 	ldw	r2,16(r4)
   85d88:	2807d17a 	srai	r3,r5,5
   85d8c:	21000504 	addi	r4,r4,20
   85d90:	10c00d0e 	bge	r2,r3,85dc8 <__any_on+0x44>
   85d94:	1085883a 	add	r2,r2,r2
   85d98:	1085883a 	add	r2,r2,r2
   85d9c:	208d883a 	add	r6,r4,r2
   85da0:	2180182e 	bgeu	r4,r6,85e04 <__any_on+0x80>
   85da4:	30bfff17 	ldw	r2,-4(r6)
   85da8:	30ffff04 	addi	r3,r6,-4
   85dac:	1000041e 	bne	r2,zero,85dc0 <__any_on+0x3c>
   85db0:	20c0142e 	bgeu	r4,r3,85e04 <__any_on+0x80>
   85db4:	18ffff04 	addi	r3,r3,-4
   85db8:	18800017 	ldw	r2,0(r3)
   85dbc:	103ffc26 	beq	r2,zero,85db0 <__any_on+0x2c>
   85dc0:	00800044 	movi	r2,1
   85dc4:	f800283a 	ret
   85dc8:	18800a0e 	bge	r3,r2,85df4 <__any_on+0x70>
   85dcc:	294007cc 	andi	r5,r5,31
   85dd0:	28000826 	beq	r5,zero,85df4 <__any_on+0x70>
   85dd4:	18c5883a 	add	r2,r3,r3
   85dd8:	1085883a 	add	r2,r2,r2
   85ddc:	208d883a 	add	r6,r4,r2
   85de0:	30c00017 	ldw	r3,0(r6)
   85de4:	1944d83a 	srl	r2,r3,r5
   85de8:	1144983a 	sll	r2,r2,r5
   85dec:	18bff41e 	bne	r3,r2,85dc0 <__any_on+0x3c>
   85df0:	003feb06 	br	85da0 <__any_on+0x1c>
   85df4:	18c5883a 	add	r2,r3,r3
   85df8:	1085883a 	add	r2,r2,r2
   85dfc:	208d883a 	add	r6,r4,r2
   85e00:	003fe706 	br	85da0 <__any_on+0x1c>
   85e04:	0005883a 	mov	r2,zero
   85e08:	f800283a 	ret

00085e0c <_Balloc>:
   85e0c:	20c01317 	ldw	r3,76(r4)
   85e10:	defffb04 	addi	sp,sp,-20
   85e14:	dcc00315 	stw	r19,12(sp)
   85e18:	dc800215 	stw	r18,8(sp)
   85e1c:	dfc00415 	stw	ra,16(sp)
   85e20:	2825883a 	mov	r18,r5
   85e24:	dc400115 	stw	r17,4(sp)
   85e28:	dc000015 	stw	r16,0(sp)
   85e2c:	2027883a 	mov	r19,r4
   85e30:	01800404 	movi	r6,16
   85e34:	01400104 	movi	r5,4
   85e38:	18001726 	beq	r3,zero,85e98 <_Balloc+0x8c>
   85e3c:	01400044 	movi	r5,1
   85e40:	9485883a 	add	r2,r18,r18
   85e44:	2ca2983a 	sll	r17,r5,r18
   85e48:	1085883a 	add	r2,r2,r2
   85e4c:	10c7883a 	add	r3,r2,r3
   85e50:	1c000017 	ldw	r16,0(r3)
   85e54:	8c4d883a 	add	r6,r17,r17
   85e58:	318d883a 	add	r6,r6,r6
   85e5c:	9809883a 	mov	r4,r19
   85e60:	31800504 	addi	r6,r6,20
   85e64:	80001226 	beq	r16,zero,85eb0 <_Balloc+0xa4>
   85e68:	80800017 	ldw	r2,0(r16)
   85e6c:	18800015 	stw	r2,0(r3)
   85e70:	80000415 	stw	zero,16(r16)
   85e74:	80000315 	stw	zero,12(r16)
   85e78:	8005883a 	mov	r2,r16
   85e7c:	dfc00417 	ldw	ra,16(sp)
   85e80:	dcc00317 	ldw	r19,12(sp)
   85e84:	dc800217 	ldw	r18,8(sp)
   85e88:	dc400117 	ldw	r17,4(sp)
   85e8c:	dc000017 	ldw	r16,0(sp)
   85e90:	dec00504 	addi	sp,sp,20
   85e94:	f800283a 	ret
   85e98:	008726c0 	call	8726c <_calloc_r>
   85e9c:	1007883a 	mov	r3,r2
   85ea0:	0021883a 	mov	r16,zero
   85ea4:	98801315 	stw	r2,76(r19)
   85ea8:	103fe41e 	bne	r2,zero,85e3c <_Balloc+0x30>
   85eac:	003ff206 	br	85e78 <_Balloc+0x6c>
   85eb0:	008726c0 	call	8726c <_calloc_r>
   85eb4:	103ff026 	beq	r2,zero,85e78 <_Balloc+0x6c>
   85eb8:	1021883a 	mov	r16,r2
   85ebc:	14800115 	stw	r18,4(r2)
   85ec0:	14400215 	stw	r17,8(r2)
   85ec4:	003fea06 	br	85e70 <_Balloc+0x64>

00085ec8 <__d2b>:
   85ec8:	defff504 	addi	sp,sp,-44
   85ecc:	dcc00515 	stw	r19,20(sp)
   85ed0:	04c00044 	movi	r19,1
   85ed4:	dc000215 	stw	r16,8(sp)
   85ed8:	2821883a 	mov	r16,r5
   85edc:	980b883a 	mov	r5,r19
   85ee0:	ddc00915 	stw	r23,36(sp)
   85ee4:	dd800815 	stw	r22,32(sp)
   85ee8:	dd400715 	stw	r21,28(sp)
   85eec:	dd000615 	stw	r20,24(sp)
   85ef0:	dc800415 	stw	r18,16(sp)
   85ef4:	dc400315 	stw	r17,12(sp)
   85ef8:	dfc00a15 	stw	ra,40(sp)
   85efc:	3023883a 	mov	r17,r6
   85f00:	382d883a 	mov	r22,r7
   85f04:	ddc00b17 	ldw	r23,44(sp)
   85f08:	0085e0c0 	call	85e0c <_Balloc>
   85f0c:	1025883a 	mov	r18,r2
   85f10:	00a00034 	movhi	r2,32768
   85f14:	10bfffc4 	addi	r2,r2,-1
   85f18:	8888703a 	and	r4,r17,r2
   85f1c:	202ad53a 	srli	r21,r4,20
   85f20:	00800434 	movhi	r2,16
   85f24:	10bfffc4 	addi	r2,r2,-1
   85f28:	8886703a 	and	r3,r17,r2
   85f2c:	a829003a 	cmpeq	r20,r21,zero
   85f30:	800b883a 	mov	r5,r16
   85f34:	d8c00115 	stw	r3,4(sp)
   85f38:	94000504 	addi	r16,r18,20
   85f3c:	a000021e 	bne	r20,zero,85f48 <__d2b+0x80>
   85f40:	18c00434 	orhi	r3,r3,16
   85f44:	d8c00115 	stw	r3,4(sp)
   85f48:	28002726 	beq	r5,zero,85fe8 <__d2b+0x120>
   85f4c:	d809883a 	mov	r4,sp
   85f50:	d9400015 	stw	r5,0(sp)
   85f54:	00859240 	call	85924 <__lo0bits>
   85f58:	100d883a 	mov	r6,r2
   85f5c:	10003526 	beq	r2,zero,86034 <__d2b+0x16c>
   85f60:	d8c00117 	ldw	r3,4(sp)
   85f64:	00800804 	movi	r2,32
   85f68:	1185c83a 	sub	r2,r2,r6
   85f6c:	d9000017 	ldw	r4,0(sp)
   85f70:	1886983a 	sll	r3,r3,r2
   85f74:	1906b03a 	or	r3,r3,r4
   85f78:	90c00515 	stw	r3,20(r18)
   85f7c:	d8c00117 	ldw	r3,4(sp)
   85f80:	1986d83a 	srl	r3,r3,r6
   85f84:	d8c00115 	stw	r3,4(sp)
   85f88:	180b003a 	cmpeq	r5,r3,zero
   85f8c:	00800084 	movi	r2,2
   85f90:	114bc83a 	sub	r5,r2,r5
   85f94:	80c00115 	stw	r3,4(r16)
   85f98:	91400415 	stw	r5,16(r18)
   85f9c:	a0001a1e 	bne	r20,zero,86008 <__d2b+0x140>
   85fa0:	3545883a 	add	r2,r6,r21
   85fa4:	10bef344 	addi	r2,r2,-1075
   85fa8:	00c00d44 	movi	r3,53
   85fac:	b0800015 	stw	r2,0(r22)
   85fb0:	1987c83a 	sub	r3,r3,r6
   85fb4:	b8c00015 	stw	r3,0(r23)
   85fb8:	9005883a 	mov	r2,r18
   85fbc:	dfc00a17 	ldw	ra,40(sp)
   85fc0:	ddc00917 	ldw	r23,36(sp)
   85fc4:	dd800817 	ldw	r22,32(sp)
   85fc8:	dd400717 	ldw	r21,28(sp)
   85fcc:	dd000617 	ldw	r20,24(sp)
   85fd0:	dcc00517 	ldw	r19,20(sp)
   85fd4:	dc800417 	ldw	r18,16(sp)
   85fd8:	dc400317 	ldw	r17,12(sp)
   85fdc:	dc000217 	ldw	r16,8(sp)
   85fe0:	dec00b04 	addi	sp,sp,44
   85fe4:	f800283a 	ret
   85fe8:	d9000104 	addi	r4,sp,4
   85fec:	00859240 	call	85924 <__lo0bits>
   85ff0:	11800804 	addi	r6,r2,32
   85ff4:	d8800117 	ldw	r2,4(sp)
   85ff8:	94c00415 	stw	r19,16(r18)
   85ffc:	980b883a 	mov	r5,r19
   86000:	90800515 	stw	r2,20(r18)
   86004:	a03fe626 	beq	r20,zero,85fa0 <__d2b+0xd8>
   86008:	2945883a 	add	r2,r5,r5
   8600c:	1085883a 	add	r2,r2,r2
   86010:	1405883a 	add	r2,r2,r16
   86014:	113fff17 	ldw	r4,-4(r2)
   86018:	30fef384 	addi	r3,r6,-1074
   8601c:	2820917a 	slli	r16,r5,5
   86020:	b0c00015 	stw	r3,0(r22)
   86024:	00858b40 	call	858b4 <__hi0bits>
   86028:	80a1c83a 	sub	r16,r16,r2
   8602c:	bc000015 	stw	r16,0(r23)
   86030:	003fe106 	br	85fb8 <__d2b+0xf0>
   86034:	d8800017 	ldw	r2,0(sp)
   86038:	90800515 	stw	r2,20(r18)
   8603c:	d8c00117 	ldw	r3,4(sp)
   86040:	003fd106 	br	85f88 <__d2b+0xc0>

00086044 <__mdiff>:
   86044:	defffb04 	addi	sp,sp,-20
   86048:	dc000015 	stw	r16,0(sp)
   8604c:	2821883a 	mov	r16,r5
   86050:	dc800215 	stw	r18,8(sp)
   86054:	300b883a 	mov	r5,r6
   86058:	2025883a 	mov	r18,r4
   8605c:	8009883a 	mov	r4,r16
   86060:	dc400115 	stw	r17,4(sp)
   86064:	dfc00415 	stw	ra,16(sp)
   86068:	dcc00315 	stw	r19,12(sp)
   8606c:	3023883a 	mov	r17,r6
   86070:	00859e80 	call	859e8 <__mcmp>
   86074:	10004226 	beq	r2,zero,86180 <__mdiff+0x13c>
   86078:	10005016 	blt	r2,zero,861bc <__mdiff+0x178>
   8607c:	0027883a 	mov	r19,zero
   86080:	81400117 	ldw	r5,4(r16)
   86084:	9009883a 	mov	r4,r18
   86088:	0085e0c0 	call	85e0c <_Balloc>
   8608c:	1019883a 	mov	r12,r2
   86090:	82800417 	ldw	r10,16(r16)
   86094:	88800417 	ldw	r2,16(r17)
   86098:	81800504 	addi	r6,r16,20
   8609c:	5287883a 	add	r3,r10,r10
   860a0:	1085883a 	add	r2,r2,r2
   860a4:	18c7883a 	add	r3,r3,r3
   860a8:	1085883a 	add	r2,r2,r2
   860ac:	8a000504 	addi	r8,r17,20
   860b0:	64c00315 	stw	r19,12(r12)
   860b4:	30db883a 	add	r13,r6,r3
   860b8:	4097883a 	add	r11,r8,r2
   860bc:	61c00504 	addi	r7,r12,20
   860c0:	0013883a 	mov	r9,zero
   860c4:	31000017 	ldw	r4,0(r6)
   860c8:	41400017 	ldw	r5,0(r8)
   860cc:	42000104 	addi	r8,r8,4
   860d0:	20bfffcc 	andi	r2,r4,65535
   860d4:	28ffffcc 	andi	r3,r5,65535
   860d8:	10c5c83a 	sub	r2,r2,r3
   860dc:	1245883a 	add	r2,r2,r9
   860e0:	2008d43a 	srli	r4,r4,16
   860e4:	280ad43a 	srli	r5,r5,16
   860e8:	1007d43a 	srai	r3,r2,16
   860ec:	3880000d 	sth	r2,0(r7)
   860f0:	2149c83a 	sub	r4,r4,r5
   860f4:	20c9883a 	add	r4,r4,r3
   860f8:	3900008d 	sth	r4,2(r7)
   860fc:	31800104 	addi	r6,r6,4
   86100:	39c00104 	addi	r7,r7,4
   86104:	2013d43a 	srai	r9,r4,16
   86108:	42ffee36 	bltu	r8,r11,860c4 <__mdiff+0x80>
   8610c:	33400c2e 	bgeu	r6,r13,86140 <__mdiff+0xfc>
   86110:	30800017 	ldw	r2,0(r6)
   86114:	31800104 	addi	r6,r6,4
   86118:	10ffffcc 	andi	r3,r2,65535
   8611c:	1a47883a 	add	r3,r3,r9
   86120:	1004d43a 	srli	r2,r2,16
   86124:	1809d43a 	srai	r4,r3,16
   86128:	38c0000d 	sth	r3,0(r7)
   8612c:	1105883a 	add	r2,r2,r4
   86130:	3880008d 	sth	r2,2(r7)
   86134:	1013d43a 	srai	r9,r2,16
   86138:	39c00104 	addi	r7,r7,4
   8613c:	337ff436 	bltu	r6,r13,86110 <__mdiff+0xcc>
   86140:	38bfff17 	ldw	r2,-4(r7)
   86144:	38ffff04 	addi	r3,r7,-4
   86148:	1000041e 	bne	r2,zero,8615c <__mdiff+0x118>
   8614c:	18ffff04 	addi	r3,r3,-4
   86150:	18800017 	ldw	r2,0(r3)
   86154:	52bfffc4 	addi	r10,r10,-1
   86158:	103ffc26 	beq	r2,zero,8614c <__mdiff+0x108>
   8615c:	6005883a 	mov	r2,r12
   86160:	62800415 	stw	r10,16(r12)
   86164:	dfc00417 	ldw	ra,16(sp)
   86168:	dcc00317 	ldw	r19,12(sp)
   8616c:	dc800217 	ldw	r18,8(sp)
   86170:	dc400117 	ldw	r17,4(sp)
   86174:	dc000017 	ldw	r16,0(sp)
   86178:	dec00504 	addi	sp,sp,20
   8617c:	f800283a 	ret
   86180:	9009883a 	mov	r4,r18
   86184:	000b883a 	mov	r5,zero
   86188:	0085e0c0 	call	85e0c <_Balloc>
   8618c:	1019883a 	mov	r12,r2
   86190:	00800044 	movi	r2,1
   86194:	60800415 	stw	r2,16(r12)
   86198:	6005883a 	mov	r2,r12
   8619c:	60000515 	stw	zero,20(r12)
   861a0:	dfc00417 	ldw	ra,16(sp)
   861a4:	dcc00317 	ldw	r19,12(sp)
   861a8:	dc800217 	ldw	r18,8(sp)
   861ac:	dc400117 	ldw	r17,4(sp)
   861b0:	dc000017 	ldw	r16,0(sp)
   861b4:	dec00504 	addi	sp,sp,20
   861b8:	f800283a 	ret
   861bc:	880d883a 	mov	r6,r17
   861c0:	04c00044 	movi	r19,1
   861c4:	8023883a 	mov	r17,r16
   861c8:	3021883a 	mov	r16,r6
   861cc:	003fac06 	br	86080 <__mdiff+0x3c>

000861d0 <__lshift>:
   861d0:	defff904 	addi	sp,sp,-28
   861d4:	28800417 	ldw	r2,16(r5)
   861d8:	dc000015 	stw	r16,0(sp)
   861dc:	3021d17a 	srai	r16,r6,5
   861e0:	28c00217 	ldw	r3,8(r5)
   861e4:	10800044 	addi	r2,r2,1
   861e8:	dc400115 	stw	r17,4(sp)
   861ec:	80a3883a 	add	r17,r16,r2
   861f0:	dd400515 	stw	r21,20(sp)
   861f4:	dd000415 	stw	r20,16(sp)
   861f8:	dc800215 	stw	r18,8(sp)
   861fc:	dfc00615 	stw	ra,24(sp)
   86200:	2825883a 	mov	r18,r5
   86204:	dcc00315 	stw	r19,12(sp)
   86208:	3029883a 	mov	r20,r6
   8620c:	202b883a 	mov	r21,r4
   86210:	29400117 	ldw	r5,4(r5)
   86214:	1c40030e 	bge	r3,r17,86224 <__lshift+0x54>
   86218:	18c7883a 	add	r3,r3,r3
   8621c:	29400044 	addi	r5,r5,1
   86220:	1c7ffd16 	blt	r3,r17,86218 <__lshift+0x48>
   86224:	a809883a 	mov	r4,r21
   86228:	0085e0c0 	call	85e0c <_Balloc>
   8622c:	1027883a 	mov	r19,r2
   86230:	11400504 	addi	r5,r2,20
   86234:	0400090e 	bge	zero,r16,8625c <__lshift+0x8c>
   86238:	2805883a 	mov	r2,r5
   8623c:	0007883a 	mov	r3,zero
   86240:	18c00044 	addi	r3,r3,1
   86244:	10000015 	stw	zero,0(r2)
   86248:	10800104 	addi	r2,r2,4
   8624c:	80fffc1e 	bne	r16,r3,86240 <__lshift+0x70>
   86250:	8405883a 	add	r2,r16,r16
   86254:	1085883a 	add	r2,r2,r2
   86258:	288b883a 	add	r5,r5,r2
   8625c:	90800417 	ldw	r2,16(r18)
   86260:	91000504 	addi	r4,r18,20
   86264:	a18007cc 	andi	r6,r20,31
   86268:	1085883a 	add	r2,r2,r2
   8626c:	1085883a 	add	r2,r2,r2
   86270:	208f883a 	add	r7,r4,r2
   86274:	30001e26 	beq	r6,zero,862f0 <__lshift+0x120>
   86278:	00800804 	movi	r2,32
   8627c:	1191c83a 	sub	r8,r2,r6
   86280:	0007883a 	mov	r3,zero
   86284:	20800017 	ldw	r2,0(r4)
   86288:	1184983a 	sll	r2,r2,r6
   8628c:	1884b03a 	or	r2,r3,r2
   86290:	28800015 	stw	r2,0(r5)
   86294:	20c00017 	ldw	r3,0(r4)
   86298:	21000104 	addi	r4,r4,4
   8629c:	29400104 	addi	r5,r5,4
   862a0:	1a06d83a 	srl	r3,r3,r8
   862a4:	21fff736 	bltu	r4,r7,86284 <__lshift+0xb4>
   862a8:	28c00015 	stw	r3,0(r5)
   862ac:	18000126 	beq	r3,zero,862b4 <__lshift+0xe4>
   862b0:	8c400044 	addi	r17,r17,1
   862b4:	88bfffc4 	addi	r2,r17,-1
   862b8:	98800415 	stw	r2,16(r19)
   862bc:	a809883a 	mov	r4,r21
   862c0:	900b883a 	mov	r5,r18
   862c4:	008588c0 	call	8588c <_Bfree>
   862c8:	9805883a 	mov	r2,r19
   862cc:	dfc00617 	ldw	ra,24(sp)
   862d0:	dd400517 	ldw	r21,20(sp)
   862d4:	dd000417 	ldw	r20,16(sp)
   862d8:	dcc00317 	ldw	r19,12(sp)
   862dc:	dc800217 	ldw	r18,8(sp)
   862e0:	dc400117 	ldw	r17,4(sp)
   862e4:	dc000017 	ldw	r16,0(sp)
   862e8:	dec00704 	addi	sp,sp,28
   862ec:	f800283a 	ret
   862f0:	20800017 	ldw	r2,0(r4)
   862f4:	21000104 	addi	r4,r4,4
   862f8:	28800015 	stw	r2,0(r5)
   862fc:	29400104 	addi	r5,r5,4
   86300:	21ffec2e 	bgeu	r4,r7,862b4 <__lshift+0xe4>
   86304:	20800017 	ldw	r2,0(r4)
   86308:	21000104 	addi	r4,r4,4
   8630c:	28800015 	stw	r2,0(r5)
   86310:	29400104 	addi	r5,r5,4
   86314:	21fff636 	bltu	r4,r7,862f0 <__lshift+0x120>
   86318:	003fe606 	br	862b4 <__lshift+0xe4>

0008631c <__multiply>:
   8631c:	defff004 	addi	sp,sp,-64
   86320:	dc800815 	stw	r18,32(sp)
   86324:	dc400715 	stw	r17,28(sp)
   86328:	2c800417 	ldw	r18,16(r5)
   8632c:	34400417 	ldw	r17,16(r6)
   86330:	dcc00915 	stw	r19,36(sp)
   86334:	dc000615 	stw	r16,24(sp)
   86338:	dfc00f15 	stw	ra,60(sp)
   8633c:	df000e15 	stw	fp,56(sp)
   86340:	ddc00d15 	stw	r23,52(sp)
   86344:	dd800c15 	stw	r22,48(sp)
   86348:	dd400b15 	stw	r21,44(sp)
   8634c:	dd000a15 	stw	r20,40(sp)
   86350:	2821883a 	mov	r16,r5
   86354:	3027883a 	mov	r19,r6
   86358:	9440040e 	bge	r18,r17,8636c <__multiply+0x50>
   8635c:	8825883a 	mov	r18,r17
   86360:	2c400417 	ldw	r17,16(r5)
   86364:	2827883a 	mov	r19,r5
   86368:	3021883a 	mov	r16,r6
   8636c:	80800217 	ldw	r2,8(r16)
   86370:	9447883a 	add	r3,r18,r17
   86374:	d8c00415 	stw	r3,16(sp)
   86378:	81400117 	ldw	r5,4(r16)
   8637c:	10c0010e 	bge	r2,r3,86384 <__multiply+0x68>
   86380:	29400044 	addi	r5,r5,1
   86384:	0085e0c0 	call	85e0c <_Balloc>
   86388:	d8800515 	stw	r2,20(sp)
   8638c:	d9000417 	ldw	r4,16(sp)
   86390:	d8c00517 	ldw	r3,20(sp)
   86394:	2105883a 	add	r2,r4,r4
   86398:	1085883a 	add	r2,r2,r2
   8639c:	19000504 	addi	r4,r3,20
   863a0:	2085883a 	add	r2,r4,r2
   863a4:	d8800315 	stw	r2,12(sp)
   863a8:	2080052e 	bgeu	r4,r2,863c0 <__multiply+0xa4>
   863ac:	2005883a 	mov	r2,r4
   863b0:	d8c00317 	ldw	r3,12(sp)
   863b4:	10000015 	stw	zero,0(r2)
   863b8:	10800104 	addi	r2,r2,4
   863bc:	10fffc36 	bltu	r2,r3,863b0 <__multiply+0x94>
   863c0:	8c45883a 	add	r2,r17,r17
   863c4:	9487883a 	add	r3,r18,r18
   863c8:	9dc00504 	addi	r23,r19,20
   863cc:	1085883a 	add	r2,r2,r2
   863d0:	84000504 	addi	r16,r16,20
   863d4:	18c7883a 	add	r3,r3,r3
   863d8:	b885883a 	add	r2,r23,r2
   863dc:	dc000015 	stw	r16,0(sp)
   863e0:	d8800215 	stw	r2,8(sp)
   863e4:	80f9883a 	add	fp,r16,r3
   863e8:	b880432e 	bgeu	r23,r2,864f8 <__multiply+0x1dc>
   863ec:	d9000115 	stw	r4,4(sp)
   863f0:	b9000017 	ldw	r4,0(r23)
   863f4:	253fffcc 	andi	r20,r4,65535
   863f8:	a0001a26 	beq	r20,zero,86464 <__multiply+0x148>
   863fc:	dcc00017 	ldw	r19,0(sp)
   86400:	dc800117 	ldw	r18,4(sp)
   86404:	002b883a 	mov	r21,zero
   86408:	9c400017 	ldw	r17,0(r19)
   8640c:	94000017 	ldw	r16,0(r18)
   86410:	a009883a 	mov	r4,r20
   86414:	897fffcc 	andi	r5,r17,65535
   86418:	00895e00 	call	895e0 <__mulsi3>
   8641c:	880ad43a 	srli	r5,r17,16
   86420:	80ffffcc 	andi	r3,r16,65535
   86424:	a8c7883a 	add	r3,r21,r3
   86428:	a009883a 	mov	r4,r20
   8642c:	10e3883a 	add	r17,r2,r3
   86430:	8020d43a 	srli	r16,r16,16
   86434:	00895e00 	call	895e0 <__mulsi3>
   86438:	8806d43a 	srli	r3,r17,16
   8643c:	1405883a 	add	r2,r2,r16
   86440:	9cc00104 	addi	r19,r19,4
   86444:	1887883a 	add	r3,r3,r2
   86448:	90c0008d 	sth	r3,2(r18)
   8644c:	9440000d 	sth	r17,0(r18)
   86450:	182ad43a 	srli	r21,r3,16
   86454:	94800104 	addi	r18,r18,4
   86458:	9f3feb36 	bltu	r19,fp,86408 <__multiply+0xec>
   8645c:	95400015 	stw	r21,0(r18)
   86460:	b9000017 	ldw	r4,0(r23)
   86464:	202ad43a 	srli	r21,r4,16
   86468:	a8001c26 	beq	r21,zero,864dc <__multiply+0x1c0>
   8646c:	d9000117 	ldw	r4,4(sp)
   86470:	dd000017 	ldw	r20,0(sp)
   86474:	002d883a 	mov	r22,zero
   86478:	24c00017 	ldw	r19,0(r4)
   8647c:	2025883a 	mov	r18,r4
   86480:	9823883a 	mov	r17,r19
   86484:	a4000017 	ldw	r16,0(r20)
   86488:	a809883a 	mov	r4,r21
   8648c:	a5000104 	addi	r20,r20,4
   86490:	817fffcc 	andi	r5,r16,65535
   86494:	00895e00 	call	895e0 <__mulsi3>
   86498:	8806d43a 	srli	r3,r17,16
   8649c:	800ad43a 	srli	r5,r16,16
   864a0:	94c0000d 	sth	r19,0(r18)
   864a4:	b0c7883a 	add	r3,r22,r3
   864a8:	10e1883a 	add	r16,r2,r3
   864ac:	9400008d 	sth	r16,2(r18)
   864b0:	a809883a 	mov	r4,r21
   864b4:	94800104 	addi	r18,r18,4
   864b8:	00895e00 	call	895e0 <__mulsi3>
   864bc:	94400017 	ldw	r17,0(r18)
   864c0:	8020d43a 	srli	r16,r16,16
   864c4:	88ffffcc 	andi	r3,r17,65535
   864c8:	10c5883a 	add	r2,r2,r3
   864cc:	80a7883a 	add	r19,r16,r2
   864d0:	982cd43a 	srli	r22,r19,16
   864d4:	a73feb36 	bltu	r20,fp,86484 <__multiply+0x168>
   864d8:	94c00015 	stw	r19,0(r18)
   864dc:	d8800217 	ldw	r2,8(sp)
   864e0:	bdc00104 	addi	r23,r23,4
   864e4:	b880042e 	bgeu	r23,r2,864f8 <__multiply+0x1dc>
   864e8:	d8c00117 	ldw	r3,4(sp)
   864ec:	18c00104 	addi	r3,r3,4
   864f0:	d8c00115 	stw	r3,4(sp)
   864f4:	003fbe06 	br	863f0 <__multiply+0xd4>
   864f8:	d9000417 	ldw	r4,16(sp)
   864fc:	01000c0e 	bge	zero,r4,86530 <__multiply+0x214>
   86500:	d8c00317 	ldw	r3,12(sp)
   86504:	18bfff17 	ldw	r2,-4(r3)
   86508:	18ffff04 	addi	r3,r3,-4
   8650c:	10000326 	beq	r2,zero,8651c <__multiply+0x200>
   86510:	00000706 	br	86530 <__multiply+0x214>
   86514:	18800017 	ldw	r2,0(r3)
   86518:	1000051e 	bne	r2,zero,86530 <__multiply+0x214>
   8651c:	d9000417 	ldw	r4,16(sp)
   86520:	18ffff04 	addi	r3,r3,-4
   86524:	213fffc4 	addi	r4,r4,-1
   86528:	d9000415 	stw	r4,16(sp)
   8652c:	203ff91e 	bne	r4,zero,86514 <__multiply+0x1f8>
   86530:	d8800417 	ldw	r2,16(sp)
   86534:	d8c00517 	ldw	r3,20(sp)
   86538:	18800415 	stw	r2,16(r3)
   8653c:	1805883a 	mov	r2,r3
   86540:	dfc00f17 	ldw	ra,60(sp)
   86544:	df000e17 	ldw	fp,56(sp)
   86548:	ddc00d17 	ldw	r23,52(sp)
   8654c:	dd800c17 	ldw	r22,48(sp)
   86550:	dd400b17 	ldw	r21,44(sp)
   86554:	dd000a17 	ldw	r20,40(sp)
   86558:	dcc00917 	ldw	r19,36(sp)
   8655c:	dc800817 	ldw	r18,32(sp)
   86560:	dc400717 	ldw	r17,28(sp)
   86564:	dc000617 	ldw	r16,24(sp)
   86568:	dec01004 	addi	sp,sp,64
   8656c:	f800283a 	ret

00086570 <__i2b>:
   86570:	defffd04 	addi	sp,sp,-12
   86574:	dc000015 	stw	r16,0(sp)
   86578:	04000044 	movi	r16,1
   8657c:	dc800115 	stw	r18,4(sp)
   86580:	2825883a 	mov	r18,r5
   86584:	800b883a 	mov	r5,r16
   86588:	dfc00215 	stw	ra,8(sp)
   8658c:	0085e0c0 	call	85e0c <_Balloc>
   86590:	14000415 	stw	r16,16(r2)
   86594:	14800515 	stw	r18,20(r2)
   86598:	dfc00217 	ldw	ra,8(sp)
   8659c:	dc800117 	ldw	r18,4(sp)
   865a0:	dc000017 	ldw	r16,0(sp)
   865a4:	dec00304 	addi	sp,sp,12
   865a8:	f800283a 	ret

000865ac <__multadd>:
   865ac:	defff604 	addi	sp,sp,-40
   865b0:	dd800615 	stw	r22,24(sp)
   865b4:	2d800417 	ldw	r22,16(r5)
   865b8:	df000815 	stw	fp,32(sp)
   865bc:	ddc00715 	stw	r23,28(sp)
   865c0:	dd400515 	stw	r21,20(sp)
   865c4:	dd000415 	stw	r20,16(sp)
   865c8:	dcc00315 	stw	r19,12(sp)
   865cc:	dc800215 	stw	r18,8(sp)
   865d0:	dfc00915 	stw	ra,36(sp)
   865d4:	dc400115 	stw	r17,4(sp)
   865d8:	dc000015 	stw	r16,0(sp)
   865dc:	282f883a 	mov	r23,r5
   865e0:	2039883a 	mov	fp,r4
   865e4:	302b883a 	mov	r21,r6
   865e8:	3829883a 	mov	r20,r7
   865ec:	2c800504 	addi	r18,r5,20
   865f0:	0027883a 	mov	r19,zero
   865f4:	94400017 	ldw	r17,0(r18)
   865f8:	a80b883a 	mov	r5,r21
   865fc:	9cc00044 	addi	r19,r19,1
   86600:	893fffcc 	andi	r4,r17,65535
   86604:	00895e00 	call	895e0 <__mulsi3>
   86608:	8808d43a 	srli	r4,r17,16
   8660c:	1521883a 	add	r16,r2,r20
   86610:	a80b883a 	mov	r5,r21
   86614:	00895e00 	call	895e0 <__mulsi3>
   86618:	8008d43a 	srli	r4,r16,16
   8661c:	843fffcc 	andi	r16,r16,65535
   86620:	1105883a 	add	r2,r2,r4
   86624:	1006943a 	slli	r3,r2,16
   86628:	1028d43a 	srli	r20,r2,16
   8662c:	1c07883a 	add	r3,r3,r16
   86630:	90c00015 	stw	r3,0(r18)
   86634:	94800104 	addi	r18,r18,4
   86638:	9dbfee16 	blt	r19,r22,865f4 <__multadd+0x48>
   8663c:	a0000826 	beq	r20,zero,86660 <__multadd+0xb4>
   86640:	b8800217 	ldw	r2,8(r23)
   86644:	b080130e 	bge	r22,r2,86694 <__multadd+0xe8>
   86648:	b585883a 	add	r2,r22,r22
   8664c:	1085883a 	add	r2,r2,r2
   86650:	15c5883a 	add	r2,r2,r23
   86654:	b0c00044 	addi	r3,r22,1
   86658:	15000515 	stw	r20,20(r2)
   8665c:	b8c00415 	stw	r3,16(r23)
   86660:	b805883a 	mov	r2,r23
   86664:	dfc00917 	ldw	ra,36(sp)
   86668:	df000817 	ldw	fp,32(sp)
   8666c:	ddc00717 	ldw	r23,28(sp)
   86670:	dd800617 	ldw	r22,24(sp)
   86674:	dd400517 	ldw	r21,20(sp)
   86678:	dd000417 	ldw	r20,16(sp)
   8667c:	dcc00317 	ldw	r19,12(sp)
   86680:	dc800217 	ldw	r18,8(sp)
   86684:	dc400117 	ldw	r17,4(sp)
   86688:	dc000017 	ldw	r16,0(sp)
   8668c:	dec00a04 	addi	sp,sp,40
   86690:	f800283a 	ret
   86694:	b9400117 	ldw	r5,4(r23)
   86698:	e009883a 	mov	r4,fp
   8669c:	29400044 	addi	r5,r5,1
   866a0:	0085e0c0 	call	85e0c <_Balloc>
   866a4:	b9800417 	ldw	r6,16(r23)
   866a8:	b9400304 	addi	r5,r23,12
   866ac:	11000304 	addi	r4,r2,12
   866b0:	318d883a 	add	r6,r6,r6
   866b4:	318d883a 	add	r6,r6,r6
   866b8:	31800204 	addi	r6,r6,8
   866bc:	1023883a 	mov	r17,r2
   866c0:	00856740 	call	85674 <memcpy>
   866c4:	b80b883a 	mov	r5,r23
   866c8:	e009883a 	mov	r4,fp
   866cc:	008588c0 	call	8588c <_Bfree>
   866d0:	882f883a 	mov	r23,r17
   866d4:	003fdc06 	br	86648 <__multadd+0x9c>

000866d8 <__pow5mult>:
   866d8:	defffa04 	addi	sp,sp,-24
   866dc:	308000cc 	andi	r2,r6,3
   866e0:	dd000415 	stw	r20,16(sp)
   866e4:	dcc00315 	stw	r19,12(sp)
   866e8:	dc000015 	stw	r16,0(sp)
   866ec:	dfc00515 	stw	ra,20(sp)
   866f0:	dc800215 	stw	r18,8(sp)
   866f4:	dc400115 	stw	r17,4(sp)
   866f8:	3021883a 	mov	r16,r6
   866fc:	2027883a 	mov	r19,r4
   86700:	2829883a 	mov	r20,r5
   86704:	10002b1e 	bne	r2,zero,867b4 <__pow5mult+0xdc>
   86708:	8025d0ba 	srai	r18,r16,2
   8670c:	90001b26 	beq	r18,zero,8677c <__pow5mult+0xa4>
   86710:	9c001217 	ldw	r16,72(r19)
   86714:	8000081e 	bne	r16,zero,86738 <__pow5mult+0x60>
   86718:	00003006 	br	867dc <__pow5mult+0x104>
   8671c:	800b883a 	mov	r5,r16
   86720:	800d883a 	mov	r6,r16
   86724:	9809883a 	mov	r4,r19
   86728:	90001426 	beq	r18,zero,8677c <__pow5mult+0xa4>
   8672c:	80800017 	ldw	r2,0(r16)
   86730:	10001b26 	beq	r2,zero,867a0 <__pow5mult+0xc8>
   86734:	1021883a 	mov	r16,r2
   86738:	9080004c 	andi	r2,r18,1
   8673c:	1005003a 	cmpeq	r2,r2,zero
   86740:	9025d07a 	srai	r18,r18,1
   86744:	800d883a 	mov	r6,r16
   86748:	9809883a 	mov	r4,r19
   8674c:	a00b883a 	mov	r5,r20
   86750:	103ff21e 	bne	r2,zero,8671c <__pow5mult+0x44>
   86754:	008631c0 	call	8631c <__multiply>
   86758:	a00b883a 	mov	r5,r20
   8675c:	9809883a 	mov	r4,r19
   86760:	1023883a 	mov	r17,r2
   86764:	008588c0 	call	8588c <_Bfree>
   86768:	8829883a 	mov	r20,r17
   8676c:	800b883a 	mov	r5,r16
   86770:	800d883a 	mov	r6,r16
   86774:	9809883a 	mov	r4,r19
   86778:	903fec1e 	bne	r18,zero,8672c <__pow5mult+0x54>
   8677c:	a005883a 	mov	r2,r20
   86780:	dfc00517 	ldw	ra,20(sp)
   86784:	dd000417 	ldw	r20,16(sp)
   86788:	dcc00317 	ldw	r19,12(sp)
   8678c:	dc800217 	ldw	r18,8(sp)
   86790:	dc400117 	ldw	r17,4(sp)
   86794:	dc000017 	ldw	r16,0(sp)
   86798:	dec00604 	addi	sp,sp,24
   8679c:	f800283a 	ret
   867a0:	008631c0 	call	8631c <__multiply>
   867a4:	80800015 	stw	r2,0(r16)
   867a8:	1021883a 	mov	r16,r2
   867ac:	10000015 	stw	zero,0(r2)
   867b0:	003fe106 	br	86738 <__pow5mult+0x60>
   867b4:	1085883a 	add	r2,r2,r2
   867b8:	00c00274 	movhi	r3,9
   867bc:	18f20404 	addi	r3,r3,-14320
   867c0:	1085883a 	add	r2,r2,r2
   867c4:	10c5883a 	add	r2,r2,r3
   867c8:	11bfff17 	ldw	r6,-4(r2)
   867cc:	000f883a 	mov	r7,zero
   867d0:	00865ac0 	call	865ac <__multadd>
   867d4:	1029883a 	mov	r20,r2
   867d8:	003fcb06 	br	86708 <__pow5mult+0x30>
   867dc:	9809883a 	mov	r4,r19
   867e0:	01409c44 	movi	r5,625
   867e4:	00865700 	call	86570 <__i2b>
   867e8:	98801215 	stw	r2,72(r19)
   867ec:	1021883a 	mov	r16,r2
   867f0:	10000015 	stw	zero,0(r2)
   867f4:	003fd006 	br	86738 <__pow5mult+0x60>

000867f8 <__s2b>:
   867f8:	defff904 	addi	sp,sp,-28
   867fc:	dcc00315 	stw	r19,12(sp)
   86800:	dc800215 	stw	r18,8(sp)
   86804:	2827883a 	mov	r19,r5
   86808:	2025883a 	mov	r18,r4
   8680c:	01400244 	movi	r5,9
   86810:	39000204 	addi	r4,r7,8
   86814:	dd000415 	stw	r20,16(sp)
   86818:	dc400115 	stw	r17,4(sp)
   8681c:	dfc00615 	stw	ra,24(sp)
   86820:	dd400515 	stw	r21,20(sp)
   86824:	dc000015 	stw	r16,0(sp)
   86828:	3829883a 	mov	r20,r7
   8682c:	3023883a 	mov	r17,r6
   86830:	00895100 	call	89510 <__divsi3>
   86834:	00c00044 	movi	r3,1
   86838:	1880350e 	bge	r3,r2,86910 <__s2b+0x118>
   8683c:	000b883a 	mov	r5,zero
   86840:	18c7883a 	add	r3,r3,r3
   86844:	29400044 	addi	r5,r5,1
   86848:	18bffd16 	blt	r3,r2,86840 <__s2b+0x48>
   8684c:	9009883a 	mov	r4,r18
   86850:	0085e0c0 	call	85e0c <_Balloc>
   86854:	1011883a 	mov	r8,r2
   86858:	d8800717 	ldw	r2,28(sp)
   8685c:	00c00044 	movi	r3,1
   86860:	01800244 	movi	r6,9
   86864:	40800515 	stw	r2,20(r8)
   86868:	40c00415 	stw	r3,16(r8)
   8686c:	3440260e 	bge	r6,r17,86908 <__s2b+0x110>
   86870:	3021883a 	mov	r16,r6
   86874:	99ab883a 	add	r21,r19,r6
   86878:	9c05883a 	add	r2,r19,r16
   8687c:	11c00007 	ldb	r7,0(r2)
   86880:	400b883a 	mov	r5,r8
   86884:	9009883a 	mov	r4,r18
   86888:	39fff404 	addi	r7,r7,-48
   8688c:	01800284 	movi	r6,10
   86890:	00865ac0 	call	865ac <__multadd>
   86894:	84000044 	addi	r16,r16,1
   86898:	1011883a 	mov	r8,r2
   8689c:	8c3ff61e 	bne	r17,r16,86878 <__s2b+0x80>
   868a0:	ac45883a 	add	r2,r21,r17
   868a4:	117ffe04 	addi	r5,r2,-8
   868a8:	880d883a 	mov	r6,r17
   868ac:	35000c0e 	bge	r6,r20,868e0 <__s2b+0xe8>
   868b0:	a185c83a 	sub	r2,r20,r6
   868b4:	2821883a 	mov	r16,r5
   868b8:	28a3883a 	add	r17,r5,r2
   868bc:	81c00007 	ldb	r7,0(r16)
   868c0:	400b883a 	mov	r5,r8
   868c4:	9009883a 	mov	r4,r18
   868c8:	39fff404 	addi	r7,r7,-48
   868cc:	01800284 	movi	r6,10
   868d0:	00865ac0 	call	865ac <__multadd>
   868d4:	84000044 	addi	r16,r16,1
   868d8:	1011883a 	mov	r8,r2
   868dc:	847ff71e 	bne	r16,r17,868bc <__s2b+0xc4>
   868e0:	4005883a 	mov	r2,r8
   868e4:	dfc00617 	ldw	ra,24(sp)
   868e8:	dd400517 	ldw	r21,20(sp)
   868ec:	dd000417 	ldw	r20,16(sp)
   868f0:	dcc00317 	ldw	r19,12(sp)
   868f4:	dc800217 	ldw	r18,8(sp)
   868f8:	dc400117 	ldw	r17,4(sp)
   868fc:	dc000017 	ldw	r16,0(sp)
   86900:	dec00704 	addi	sp,sp,28
   86904:	f800283a 	ret
   86908:	99400284 	addi	r5,r19,10
   8690c:	003fe706 	br	868ac <__s2b+0xb4>
   86910:	000b883a 	mov	r5,zero
   86914:	003fcd06 	br	8684c <__s2b+0x54>

00086918 <_realloc_r>:
   86918:	defff404 	addi	sp,sp,-48
   8691c:	dd800815 	stw	r22,32(sp)
   86920:	dc800415 	stw	r18,16(sp)
   86924:	dc400315 	stw	r17,12(sp)
   86928:	dfc00b15 	stw	ra,44(sp)
   8692c:	df000a15 	stw	fp,40(sp)
   86930:	ddc00915 	stw	r23,36(sp)
   86934:	dd400715 	stw	r21,28(sp)
   86938:	dd000615 	stw	r20,24(sp)
   8693c:	dcc00515 	stw	r19,20(sp)
   86940:	dc000215 	stw	r16,8(sp)
   86944:	2825883a 	mov	r18,r5
   86948:	3023883a 	mov	r17,r6
   8694c:	202d883a 	mov	r22,r4
   86950:	2800c926 	beq	r5,zero,86c78 <_realloc_r+0x360>
   86954:	008a3640 	call	8a364 <__malloc_lock>
   86958:	943ffe04 	addi	r16,r18,-8
   8695c:	88c002c4 	addi	r3,r17,11
   86960:	00800584 	movi	r2,22
   86964:	82000117 	ldw	r8,4(r16)
   86968:	10c01b2e 	bgeu	r2,r3,869d8 <_realloc_r+0xc0>
   8696c:	00bffe04 	movi	r2,-8
   86970:	188e703a 	and	r7,r3,r2
   86974:	3839883a 	mov	fp,r7
   86978:	38001a16 	blt	r7,zero,869e4 <_realloc_r+0xcc>
   8697c:	e4401936 	bltu	fp,r17,869e4 <_realloc_r+0xcc>
   86980:	013fff04 	movi	r4,-4
   86984:	4126703a 	and	r19,r8,r4
   86988:	99c02616 	blt	r19,r7,86a24 <_realloc_r+0x10c>
   8698c:	802b883a 	mov	r21,r16
   86990:	9829883a 	mov	r20,r19
   86994:	84000204 	addi	r16,r16,8
   86998:	a80f883a 	mov	r7,r21
   8699c:	a70dc83a 	sub	r6,r20,fp
   869a0:	008003c4 	movi	r2,15
   869a4:	1180c136 	bltu	r2,r6,86cac <_realloc_r+0x394>
   869a8:	38800117 	ldw	r2,4(r7)
   869ac:	a549883a 	add	r4,r20,r21
   869b0:	1080004c 	andi	r2,r2,1
   869b4:	a084b03a 	or	r2,r20,r2
   869b8:	38800115 	stw	r2,4(r7)
   869bc:	20c00117 	ldw	r3,4(r4)
   869c0:	18c00054 	ori	r3,r3,1
   869c4:	20c00115 	stw	r3,4(r4)
   869c8:	b009883a 	mov	r4,r22
   869cc:	008a3840 	call	8a384 <__malloc_unlock>
   869d0:	8023883a 	mov	r17,r16
   869d4:	00000606 	br	869f0 <_realloc_r+0xd8>
   869d8:	01c00404 	movi	r7,16
   869dc:	3839883a 	mov	fp,r7
   869e0:	e47fe72e 	bgeu	fp,r17,86980 <_realloc_r+0x68>
   869e4:	00800304 	movi	r2,12
   869e8:	0023883a 	mov	r17,zero
   869ec:	b0800015 	stw	r2,0(r22)
   869f0:	8805883a 	mov	r2,r17
   869f4:	dfc00b17 	ldw	ra,44(sp)
   869f8:	df000a17 	ldw	fp,40(sp)
   869fc:	ddc00917 	ldw	r23,36(sp)
   86a00:	dd800817 	ldw	r22,32(sp)
   86a04:	dd400717 	ldw	r21,28(sp)
   86a08:	dd000617 	ldw	r20,24(sp)
   86a0c:	dcc00517 	ldw	r19,20(sp)
   86a10:	dc800417 	ldw	r18,16(sp)
   86a14:	dc400317 	ldw	r17,12(sp)
   86a18:	dc000217 	ldw	r16,8(sp)
   86a1c:	dec00c04 	addi	sp,sp,48
   86a20:	f800283a 	ret
   86a24:	00800274 	movhi	r2,9
   86a28:	10b35c04 	addi	r2,r2,-12944
   86a2c:	12400217 	ldw	r9,8(r2)
   86a30:	84cd883a 	add	r6,r16,r19
   86a34:	802b883a 	mov	r21,r16
   86a38:	3240b926 	beq	r6,r9,86d20 <_realloc_r+0x408>
   86a3c:	31400117 	ldw	r5,4(r6)
   86a40:	00bfff84 	movi	r2,-2
   86a44:	2884703a 	and	r2,r5,r2
   86a48:	1185883a 	add	r2,r2,r6
   86a4c:	10c00117 	ldw	r3,4(r2)
   86a50:	18c0004c 	andi	r3,r3,1
   86a54:	1807003a 	cmpeq	r3,r3,zero
   86a58:	1800a326 	beq	r3,zero,86ce8 <_realloc_r+0x3d0>
   86a5c:	2908703a 	and	r4,r5,r4
   86a60:	9929883a 	add	r20,r19,r4
   86a64:	a1c0a30e 	bge	r20,r7,86cf4 <_realloc_r+0x3dc>
   86a68:	4080004c 	andi	r2,r8,1
   86a6c:	1000551e 	bne	r2,zero,86bc4 <_realloc_r+0x2ac>
   86a70:	80800017 	ldw	r2,0(r16)
   86a74:	80afc83a 	sub	r23,r16,r2
   86a78:	b8c00117 	ldw	r3,4(r23)
   86a7c:	00bfff04 	movi	r2,-4
   86a80:	1884703a 	and	r2,r3,r2
   86a84:	30002e26 	beq	r6,zero,86b40 <_realloc_r+0x228>
   86a88:	3240b926 	beq	r6,r9,86d70 <_realloc_r+0x458>
   86a8c:	98a9883a 	add	r20,r19,r2
   86a90:	2509883a 	add	r4,r4,r20
   86a94:	d9000015 	stw	r4,0(sp)
   86a98:	21c02a16 	blt	r4,r7,86b44 <_realloc_r+0x22c>
   86a9c:	30800317 	ldw	r2,12(r6)
   86aa0:	30c00217 	ldw	r3,8(r6)
   86aa4:	01400904 	movi	r5,36
   86aa8:	99bfff04 	addi	r6,r19,-4
   86aac:	18800315 	stw	r2,12(r3)
   86ab0:	10c00215 	stw	r3,8(r2)
   86ab4:	b9000317 	ldw	r4,12(r23)
   86ab8:	b8800217 	ldw	r2,8(r23)
   86abc:	b82b883a 	mov	r21,r23
   86ac0:	bc000204 	addi	r16,r23,8
   86ac4:	20800215 	stw	r2,8(r4)
   86ac8:	11000315 	stw	r4,12(r2)
   86acc:	2980e436 	bltu	r5,r6,86e60 <_realloc_r+0x548>
   86ad0:	008004c4 	movi	r2,19
   86ad4:	9009883a 	mov	r4,r18
   86ad8:	8011883a 	mov	r8,r16
   86adc:	11800f2e 	bgeu	r2,r6,86b1c <_realloc_r+0x204>
   86ae0:	90800017 	ldw	r2,0(r18)
   86ae4:	ba000404 	addi	r8,r23,16
   86ae8:	91000204 	addi	r4,r18,8
   86aec:	b8800215 	stw	r2,8(r23)
   86af0:	90c00117 	ldw	r3,4(r18)
   86af4:	008006c4 	movi	r2,27
   86af8:	b8c00315 	stw	r3,12(r23)
   86afc:	1180072e 	bgeu	r2,r6,86b1c <_realloc_r+0x204>
   86b00:	90c00217 	ldw	r3,8(r18)
   86b04:	ba000604 	addi	r8,r23,24
   86b08:	91000404 	addi	r4,r18,16
   86b0c:	b8c00415 	stw	r3,16(r23)
   86b10:	90800317 	ldw	r2,12(r18)
   86b14:	b8800515 	stw	r2,20(r23)
   86b18:	3140e726 	beq	r6,r5,86eb8 <_realloc_r+0x5a0>
   86b1c:	20800017 	ldw	r2,0(r4)
   86b20:	dd000017 	ldw	r20,0(sp)
   86b24:	b80f883a 	mov	r7,r23
   86b28:	40800015 	stw	r2,0(r8)
   86b2c:	20c00117 	ldw	r3,4(r4)
   86b30:	40c00115 	stw	r3,4(r8)
   86b34:	20800217 	ldw	r2,8(r4)
   86b38:	40800215 	stw	r2,8(r8)
   86b3c:	003f9706 	br	8699c <_realloc_r+0x84>
   86b40:	98a9883a 	add	r20,r19,r2
   86b44:	a1c01f16 	blt	r20,r7,86bc4 <_realloc_r+0x2ac>
   86b48:	b8c00317 	ldw	r3,12(r23)
   86b4c:	b8800217 	ldw	r2,8(r23)
   86b50:	99bfff04 	addi	r6,r19,-4
   86b54:	01400904 	movi	r5,36
   86b58:	b82b883a 	mov	r21,r23
   86b5c:	18800215 	stw	r2,8(r3)
   86b60:	10c00315 	stw	r3,12(r2)
   86b64:	bc000204 	addi	r16,r23,8
   86b68:	2980c336 	bltu	r5,r6,86e78 <_realloc_r+0x560>
   86b6c:	008004c4 	movi	r2,19
   86b70:	9009883a 	mov	r4,r18
   86b74:	8011883a 	mov	r8,r16
   86b78:	11800f2e 	bgeu	r2,r6,86bb8 <_realloc_r+0x2a0>
   86b7c:	90800017 	ldw	r2,0(r18)
   86b80:	ba000404 	addi	r8,r23,16
   86b84:	91000204 	addi	r4,r18,8
   86b88:	b8800215 	stw	r2,8(r23)
   86b8c:	90c00117 	ldw	r3,4(r18)
   86b90:	008006c4 	movi	r2,27
   86b94:	b8c00315 	stw	r3,12(r23)
   86b98:	1180072e 	bgeu	r2,r6,86bb8 <_realloc_r+0x2a0>
   86b9c:	90c00217 	ldw	r3,8(r18)
   86ba0:	ba000604 	addi	r8,r23,24
   86ba4:	91000404 	addi	r4,r18,16
   86ba8:	b8c00415 	stw	r3,16(r23)
   86bac:	90800317 	ldw	r2,12(r18)
   86bb0:	b8800515 	stw	r2,20(r23)
   86bb4:	3140c726 	beq	r6,r5,86ed4 <_realloc_r+0x5bc>
   86bb8:	20800017 	ldw	r2,0(r4)
   86bbc:	b80f883a 	mov	r7,r23
   86bc0:	003fd906 	br	86b28 <_realloc_r+0x210>
   86bc4:	880b883a 	mov	r5,r17
   86bc8:	b009883a 	mov	r4,r22
   86bcc:	0084e500 	call	84e50 <_malloc_r>
   86bd0:	1023883a 	mov	r17,r2
   86bd4:	10002526 	beq	r2,zero,86c6c <_realloc_r+0x354>
   86bd8:	80800117 	ldw	r2,4(r16)
   86bdc:	00ffff84 	movi	r3,-2
   86be0:	893ffe04 	addi	r4,r17,-8
   86be4:	10c4703a 	and	r2,r2,r3
   86be8:	8085883a 	add	r2,r16,r2
   86bec:	20809526 	beq	r4,r2,86e44 <_realloc_r+0x52c>
   86bf0:	99bfff04 	addi	r6,r19,-4
   86bf4:	01c00904 	movi	r7,36
   86bf8:	39804536 	bltu	r7,r6,86d10 <_realloc_r+0x3f8>
   86bfc:	008004c4 	movi	r2,19
   86c00:	9009883a 	mov	r4,r18
   86c04:	880b883a 	mov	r5,r17
   86c08:	11800f2e 	bgeu	r2,r6,86c48 <_realloc_r+0x330>
   86c0c:	90800017 	ldw	r2,0(r18)
   86c10:	89400204 	addi	r5,r17,8
   86c14:	91000204 	addi	r4,r18,8
   86c18:	88800015 	stw	r2,0(r17)
   86c1c:	90c00117 	ldw	r3,4(r18)
   86c20:	008006c4 	movi	r2,27
   86c24:	88c00115 	stw	r3,4(r17)
   86c28:	1180072e 	bgeu	r2,r6,86c48 <_realloc_r+0x330>
   86c2c:	90c00217 	ldw	r3,8(r18)
   86c30:	89400404 	addi	r5,r17,16
   86c34:	91000404 	addi	r4,r18,16
   86c38:	88c00215 	stw	r3,8(r17)
   86c3c:	90800317 	ldw	r2,12(r18)
   86c40:	88800315 	stw	r2,12(r17)
   86c44:	31c09126 	beq	r6,r7,86e8c <_realloc_r+0x574>
   86c48:	20800017 	ldw	r2,0(r4)
   86c4c:	28800015 	stw	r2,0(r5)
   86c50:	20c00117 	ldw	r3,4(r4)
   86c54:	28c00115 	stw	r3,4(r5)
   86c58:	20800217 	ldw	r2,8(r4)
   86c5c:	28800215 	stw	r2,8(r5)
   86c60:	900b883a 	mov	r5,r18
   86c64:	b009883a 	mov	r4,r22
   86c68:	00842c80 	call	842c8 <_free_r>
   86c6c:	b009883a 	mov	r4,r22
   86c70:	008a3840 	call	8a384 <__malloc_unlock>
   86c74:	003f5e06 	br	869f0 <_realloc_r+0xd8>
   86c78:	300b883a 	mov	r5,r6
   86c7c:	dfc00b17 	ldw	ra,44(sp)
   86c80:	df000a17 	ldw	fp,40(sp)
   86c84:	ddc00917 	ldw	r23,36(sp)
   86c88:	dd800817 	ldw	r22,32(sp)
   86c8c:	dd400717 	ldw	r21,28(sp)
   86c90:	dd000617 	ldw	r20,24(sp)
   86c94:	dcc00517 	ldw	r19,20(sp)
   86c98:	dc800417 	ldw	r18,16(sp)
   86c9c:	dc400317 	ldw	r17,12(sp)
   86ca0:	dc000217 	ldw	r16,8(sp)
   86ca4:	dec00c04 	addi	sp,sp,48
   86ca8:	0084e501 	jmpi	84e50 <_malloc_r>
   86cac:	38800117 	ldw	r2,4(r7)
   86cb0:	e54b883a 	add	r5,fp,r21
   86cb4:	31000054 	ori	r4,r6,1
   86cb8:	1080004c 	andi	r2,r2,1
   86cbc:	1704b03a 	or	r2,r2,fp
   86cc0:	38800115 	stw	r2,4(r7)
   86cc4:	29000115 	stw	r4,4(r5)
   86cc8:	2987883a 	add	r3,r5,r6
   86ccc:	18800117 	ldw	r2,4(r3)
   86cd0:	29400204 	addi	r5,r5,8
   86cd4:	b009883a 	mov	r4,r22
   86cd8:	10800054 	ori	r2,r2,1
   86cdc:	18800115 	stw	r2,4(r3)
   86ce0:	00842c80 	call	842c8 <_free_r>
   86ce4:	003f3806 	br	869c8 <_realloc_r+0xb0>
   86ce8:	000d883a 	mov	r6,zero
   86cec:	0009883a 	mov	r4,zero
   86cf0:	003f5d06 	br	86a68 <_realloc_r+0x150>
   86cf4:	30c00217 	ldw	r3,8(r6)
   86cf8:	30800317 	ldw	r2,12(r6)
   86cfc:	800f883a 	mov	r7,r16
   86d00:	84000204 	addi	r16,r16,8
   86d04:	10c00215 	stw	r3,8(r2)
   86d08:	18800315 	stw	r2,12(r3)
   86d0c:	003f2306 	br	8699c <_realloc_r+0x84>
   86d10:	8809883a 	mov	r4,r17
   86d14:	900b883a 	mov	r5,r18
   86d18:	00857140 	call	85714 <memmove>
   86d1c:	003fd006 	br	86c60 <_realloc_r+0x348>
   86d20:	30800117 	ldw	r2,4(r6)
   86d24:	e0c00404 	addi	r3,fp,16
   86d28:	1108703a 	and	r4,r2,r4
   86d2c:	9905883a 	add	r2,r19,r4
   86d30:	10ff4d16 	blt	r2,r3,86a68 <_realloc_r+0x150>
   86d34:	1705c83a 	sub	r2,r2,fp
   86d38:	870b883a 	add	r5,r16,fp
   86d3c:	10800054 	ori	r2,r2,1
   86d40:	28800115 	stw	r2,4(r5)
   86d44:	80c00117 	ldw	r3,4(r16)
   86d48:	00800274 	movhi	r2,9
   86d4c:	10b35c04 	addi	r2,r2,-12944
   86d50:	b009883a 	mov	r4,r22
   86d54:	18c0004c 	andi	r3,r3,1
   86d58:	e0c6b03a 	or	r3,fp,r3
   86d5c:	11400215 	stw	r5,8(r2)
   86d60:	80c00115 	stw	r3,4(r16)
   86d64:	008a3840 	call	8a384 <__malloc_unlock>
   86d68:	84400204 	addi	r17,r16,8
   86d6c:	003f2006 	br	869f0 <_realloc_r+0xd8>
   86d70:	98a9883a 	add	r20,r19,r2
   86d74:	2509883a 	add	r4,r4,r20
   86d78:	e0800404 	addi	r2,fp,16
   86d7c:	d9000115 	stw	r4,4(sp)
   86d80:	20bf7016 	blt	r4,r2,86b44 <_realloc_r+0x22c>
   86d84:	b8c00317 	ldw	r3,12(r23)
   86d88:	b8800217 	ldw	r2,8(r23)
   86d8c:	99bfff04 	addi	r6,r19,-4
   86d90:	01400904 	movi	r5,36
   86d94:	18800215 	stw	r2,8(r3)
   86d98:	10c00315 	stw	r3,12(r2)
   86d9c:	bc400204 	addi	r17,r23,8
   86da0:	29804136 	bltu	r5,r6,86ea8 <_realloc_r+0x590>
   86da4:	008004c4 	movi	r2,19
   86da8:	9009883a 	mov	r4,r18
   86dac:	880f883a 	mov	r7,r17
   86db0:	11800f2e 	bgeu	r2,r6,86df0 <_realloc_r+0x4d8>
   86db4:	90800017 	ldw	r2,0(r18)
   86db8:	b9c00404 	addi	r7,r23,16
   86dbc:	91000204 	addi	r4,r18,8
   86dc0:	b8800215 	stw	r2,8(r23)
   86dc4:	90c00117 	ldw	r3,4(r18)
   86dc8:	008006c4 	movi	r2,27
   86dcc:	b8c00315 	stw	r3,12(r23)
   86dd0:	1180072e 	bgeu	r2,r6,86df0 <_realloc_r+0x4d8>
   86dd4:	90c00217 	ldw	r3,8(r18)
   86dd8:	b9c00604 	addi	r7,r23,24
   86ddc:	91000404 	addi	r4,r18,16
   86de0:	b8c00415 	stw	r3,16(r23)
   86de4:	90800317 	ldw	r2,12(r18)
   86de8:	b8800515 	stw	r2,20(r23)
   86dec:	31404026 	beq	r6,r5,86ef0 <_realloc_r+0x5d8>
   86df0:	20800017 	ldw	r2,0(r4)
   86df4:	38800015 	stw	r2,0(r7)
   86df8:	20c00117 	ldw	r3,4(r4)
   86dfc:	38c00115 	stw	r3,4(r7)
   86e00:	20800217 	ldw	r2,8(r4)
   86e04:	38800215 	stw	r2,8(r7)
   86e08:	d8c00117 	ldw	r3,4(sp)
   86e0c:	bf0b883a 	add	r5,r23,fp
   86e10:	b009883a 	mov	r4,r22
   86e14:	1f05c83a 	sub	r2,r3,fp
   86e18:	10800054 	ori	r2,r2,1
   86e1c:	28800115 	stw	r2,4(r5)
   86e20:	b8c00117 	ldw	r3,4(r23)
   86e24:	00800274 	movhi	r2,9
   86e28:	10b35c04 	addi	r2,r2,-12944
   86e2c:	11400215 	stw	r5,8(r2)
   86e30:	18c0004c 	andi	r3,r3,1
   86e34:	e0c6b03a 	or	r3,fp,r3
   86e38:	b8c00115 	stw	r3,4(r23)
   86e3c:	008a3840 	call	8a384 <__malloc_unlock>
   86e40:	003eeb06 	br	869f0 <_realloc_r+0xd8>
   86e44:	20800117 	ldw	r2,4(r4)
   86e48:	00ffff04 	movi	r3,-4
   86e4c:	800f883a 	mov	r7,r16
   86e50:	10c4703a 	and	r2,r2,r3
   86e54:	98a9883a 	add	r20,r19,r2
   86e58:	84000204 	addi	r16,r16,8
   86e5c:	003ecf06 	br	8699c <_realloc_r+0x84>
   86e60:	900b883a 	mov	r5,r18
   86e64:	8009883a 	mov	r4,r16
   86e68:	00857140 	call	85714 <memmove>
   86e6c:	dd000017 	ldw	r20,0(sp)
   86e70:	b80f883a 	mov	r7,r23
   86e74:	003ec906 	br	8699c <_realloc_r+0x84>
   86e78:	900b883a 	mov	r5,r18
   86e7c:	8009883a 	mov	r4,r16
   86e80:	00857140 	call	85714 <memmove>
   86e84:	b80f883a 	mov	r7,r23
   86e88:	003ec406 	br	8699c <_realloc_r+0x84>
   86e8c:	90c00417 	ldw	r3,16(r18)
   86e90:	89400604 	addi	r5,r17,24
   86e94:	91000604 	addi	r4,r18,24
   86e98:	88c00415 	stw	r3,16(r17)
   86e9c:	90800517 	ldw	r2,20(r18)
   86ea0:	88800515 	stw	r2,20(r17)
   86ea4:	003f6806 	br	86c48 <_realloc_r+0x330>
   86ea8:	900b883a 	mov	r5,r18
   86eac:	8809883a 	mov	r4,r17
   86eb0:	00857140 	call	85714 <memmove>
   86eb4:	003fd406 	br	86e08 <_realloc_r+0x4f0>
   86eb8:	90c00417 	ldw	r3,16(r18)
   86ebc:	91000604 	addi	r4,r18,24
   86ec0:	ba000804 	addi	r8,r23,32
   86ec4:	b8c00615 	stw	r3,24(r23)
   86ec8:	90800517 	ldw	r2,20(r18)
   86ecc:	b8800715 	stw	r2,28(r23)
   86ed0:	003f1206 	br	86b1c <_realloc_r+0x204>
   86ed4:	90c00417 	ldw	r3,16(r18)
   86ed8:	91000604 	addi	r4,r18,24
   86edc:	ba000804 	addi	r8,r23,32
   86ee0:	b8c00615 	stw	r3,24(r23)
   86ee4:	90800517 	ldw	r2,20(r18)
   86ee8:	b8800715 	stw	r2,28(r23)
   86eec:	003f3206 	br	86bb8 <_realloc_r+0x2a0>
   86ef0:	90c00417 	ldw	r3,16(r18)
   86ef4:	91000604 	addi	r4,r18,24
   86ef8:	b9c00804 	addi	r7,r23,32
   86efc:	b8c00615 	stw	r3,24(r23)
   86f00:	90800517 	ldw	r2,20(r18)
   86f04:	b8800715 	stw	r2,28(r23)
   86f08:	003fb906 	br	86df0 <_realloc_r+0x4d8>

00086f0c <__isinfd>:
   86f0c:	200d883a 	mov	r6,r4
   86f10:	0109c83a 	sub	r4,zero,r4
   86f14:	2188b03a 	or	r4,r4,r6
   86f18:	2008d7fa 	srli	r4,r4,31
   86f1c:	00a00034 	movhi	r2,32768
   86f20:	10bfffc4 	addi	r2,r2,-1
   86f24:	1144703a 	and	r2,r2,r5
   86f28:	2088b03a 	or	r4,r4,r2
   86f2c:	009ffc34 	movhi	r2,32752
   86f30:	1105c83a 	sub	r2,r2,r4
   86f34:	0087c83a 	sub	r3,zero,r2
   86f38:	10c4b03a 	or	r2,r2,r3
   86f3c:	1004d7fa 	srli	r2,r2,31
   86f40:	00c00044 	movi	r3,1
   86f44:	1885c83a 	sub	r2,r3,r2
   86f48:	f800283a 	ret

00086f4c <__isnand>:
   86f4c:	200d883a 	mov	r6,r4
   86f50:	0109c83a 	sub	r4,zero,r4
   86f54:	2188b03a 	or	r4,r4,r6
   86f58:	2008d7fa 	srli	r4,r4,31
   86f5c:	00a00034 	movhi	r2,32768
   86f60:	10bfffc4 	addi	r2,r2,-1
   86f64:	1144703a 	and	r2,r2,r5
   86f68:	2088b03a 	or	r4,r4,r2
   86f6c:	009ffc34 	movhi	r2,32752
   86f70:	1105c83a 	sub	r2,r2,r4
   86f74:	1004d7fa 	srli	r2,r2,31
   86f78:	f800283a 	ret

00086f7c <_sbrk_r>:
   86f7c:	defffd04 	addi	sp,sp,-12
   86f80:	dc000015 	stw	r16,0(sp)
   86f84:	04000274 	movhi	r16,9
   86f88:	843f8d04 	addi	r16,r16,-460
   86f8c:	dc400115 	stw	r17,4(sp)
   86f90:	80000015 	stw	zero,0(r16)
   86f94:	2023883a 	mov	r17,r4
   86f98:	2809883a 	mov	r4,r5
   86f9c:	dfc00215 	stw	ra,8(sp)
   86fa0:	008a5a00 	call	8a5a0 <sbrk>
   86fa4:	1007883a 	mov	r3,r2
   86fa8:	00bfffc4 	movi	r2,-1
   86fac:	18800626 	beq	r3,r2,86fc8 <_sbrk_r+0x4c>
   86fb0:	1805883a 	mov	r2,r3
   86fb4:	dfc00217 	ldw	ra,8(sp)
   86fb8:	dc400117 	ldw	r17,4(sp)
   86fbc:	dc000017 	ldw	r16,0(sp)
   86fc0:	dec00304 	addi	sp,sp,12
   86fc4:	f800283a 	ret
   86fc8:	80800017 	ldw	r2,0(r16)
   86fcc:	103ff826 	beq	r2,zero,86fb0 <_sbrk_r+0x34>
   86fd0:	88800015 	stw	r2,0(r17)
   86fd4:	1805883a 	mov	r2,r3
   86fd8:	dfc00217 	ldw	ra,8(sp)
   86fdc:	dc400117 	ldw	r17,4(sp)
   86fe0:	dc000017 	ldw	r16,0(sp)
   86fe4:	dec00304 	addi	sp,sp,12
   86fe8:	f800283a 	ret

00086fec <__sclose>:
   86fec:	2940038f 	ldh	r5,14(r5)
   86ff0:	00873341 	jmpi	87334 <_close_r>

00086ff4 <__sseek>:
   86ff4:	defffe04 	addi	sp,sp,-8
   86ff8:	dc000015 	stw	r16,0(sp)
   86ffc:	2821883a 	mov	r16,r5
   87000:	2940038f 	ldh	r5,14(r5)
   87004:	dfc00115 	stw	ra,4(sp)
   87008:	00875ac0 	call	875ac <_lseek_r>
   8700c:	1007883a 	mov	r3,r2
   87010:	00bfffc4 	movi	r2,-1
   87014:	18800926 	beq	r3,r2,8703c <__sseek+0x48>
   87018:	8080030b 	ldhu	r2,12(r16)
   8701c:	80c01415 	stw	r3,80(r16)
   87020:	10840014 	ori	r2,r2,4096
   87024:	8080030d 	sth	r2,12(r16)
   87028:	1805883a 	mov	r2,r3
   8702c:	dfc00117 	ldw	ra,4(sp)
   87030:	dc000017 	ldw	r16,0(sp)
   87034:	dec00204 	addi	sp,sp,8
   87038:	f800283a 	ret
   8703c:	8080030b 	ldhu	r2,12(r16)
   87040:	10bbffcc 	andi	r2,r2,61439
   87044:	8080030d 	sth	r2,12(r16)
   87048:	1805883a 	mov	r2,r3
   8704c:	dfc00117 	ldw	ra,4(sp)
   87050:	dc000017 	ldw	r16,0(sp)
   87054:	dec00204 	addi	sp,sp,8
   87058:	f800283a 	ret

0008705c <__swrite>:
   8705c:	2880030b 	ldhu	r2,12(r5)
   87060:	defffb04 	addi	sp,sp,-20
   87064:	dcc00315 	stw	r19,12(sp)
   87068:	1080400c 	andi	r2,r2,256
   8706c:	dc800215 	stw	r18,8(sp)
   87070:	dc400115 	stw	r17,4(sp)
   87074:	dc000015 	stw	r16,0(sp)
   87078:	3027883a 	mov	r19,r6
   8707c:	3825883a 	mov	r18,r7
   87080:	dfc00415 	stw	ra,16(sp)
   87084:	2821883a 	mov	r16,r5
   87088:	000d883a 	mov	r6,zero
   8708c:	01c00084 	movi	r7,2
   87090:	2023883a 	mov	r17,r4
   87094:	10000226 	beq	r2,zero,870a0 <__swrite+0x44>
   87098:	2940038f 	ldh	r5,14(r5)
   8709c:	00875ac0 	call	875ac <_lseek_r>
   870a0:	8080030b 	ldhu	r2,12(r16)
   870a4:	8140038f 	ldh	r5,14(r16)
   870a8:	8809883a 	mov	r4,r17
   870ac:	10bbffcc 	andi	r2,r2,61439
   870b0:	980d883a 	mov	r6,r19
   870b4:	900f883a 	mov	r7,r18
   870b8:	8080030d 	sth	r2,12(r16)
   870bc:	dfc00417 	ldw	ra,16(sp)
   870c0:	dcc00317 	ldw	r19,12(sp)
   870c4:	dc800217 	ldw	r18,8(sp)
   870c8:	dc400117 	ldw	r17,4(sp)
   870cc:	dc000017 	ldw	r16,0(sp)
   870d0:	dec00504 	addi	sp,sp,20
   870d4:	00871f41 	jmpi	871f4 <_write_r>

000870d8 <__sread>:
   870d8:	defffe04 	addi	sp,sp,-8
   870dc:	dc000015 	stw	r16,0(sp)
   870e0:	2821883a 	mov	r16,r5
   870e4:	2940038f 	ldh	r5,14(r5)
   870e8:	dfc00115 	stw	ra,4(sp)
   870ec:	00876240 	call	87624 <_read_r>
   870f0:	1007883a 	mov	r3,r2
   870f4:	10000816 	blt	r2,zero,87118 <__sread+0x40>
   870f8:	80801417 	ldw	r2,80(r16)
   870fc:	10c5883a 	add	r2,r2,r3
   87100:	80801415 	stw	r2,80(r16)
   87104:	1805883a 	mov	r2,r3
   87108:	dfc00117 	ldw	ra,4(sp)
   8710c:	dc000017 	ldw	r16,0(sp)
   87110:	dec00204 	addi	sp,sp,8
   87114:	f800283a 	ret
   87118:	8080030b 	ldhu	r2,12(r16)
   8711c:	10bbffcc 	andi	r2,r2,61439
   87120:	8080030d 	sth	r2,12(r16)
   87124:	1805883a 	mov	r2,r3
   87128:	dfc00117 	ldw	ra,4(sp)
   8712c:	dc000017 	ldw	r16,0(sp)
   87130:	dec00204 	addi	sp,sp,8
   87134:	f800283a 	ret

00087138 <strcmp>:
   87138:	2144b03a 	or	r2,r4,r5
   8713c:	108000cc 	andi	r2,r2,3
   87140:	10001d1e 	bne	r2,zero,871b8 <strcmp+0x80>
   87144:	200f883a 	mov	r7,r4
   87148:	28800017 	ldw	r2,0(r5)
   8714c:	21000017 	ldw	r4,0(r4)
   87150:	280d883a 	mov	r6,r5
   87154:	2080161e 	bne	r4,r2,871b0 <strcmp+0x78>
   87158:	023fbff4 	movhi	r8,65279
   8715c:	423fbfc4 	addi	r8,r8,-257
   87160:	2207883a 	add	r3,r4,r8
   87164:	01602074 	movhi	r5,32897
   87168:	29602004 	addi	r5,r5,-32640
   8716c:	1946703a 	and	r3,r3,r5
   87170:	0104303a 	nor	r2,zero,r4
   87174:	10c4703a 	and	r2,r2,r3
   87178:	10001c1e 	bne	r2,zero,871ec <strcmp+0xb4>
   8717c:	4013883a 	mov	r9,r8
   87180:	2811883a 	mov	r8,r5
   87184:	00000106 	br	8718c <strcmp+0x54>
   87188:	1800181e 	bne	r3,zero,871ec <strcmp+0xb4>
   8718c:	39c00104 	addi	r7,r7,4
   87190:	39000017 	ldw	r4,0(r7)
   87194:	31800104 	addi	r6,r6,4
   87198:	31400017 	ldw	r5,0(r6)
   8719c:	2245883a 	add	r2,r4,r9
   871a0:	1204703a 	and	r2,r2,r8
   871a4:	0106303a 	nor	r3,zero,r4
   871a8:	1886703a 	and	r3,r3,r2
   871ac:	217ff626 	beq	r4,r5,87188 <strcmp+0x50>
   871b0:	3809883a 	mov	r4,r7
   871b4:	300b883a 	mov	r5,r6
   871b8:	20c00007 	ldb	r3,0(r4)
   871bc:	1800051e 	bne	r3,zero,871d4 <strcmp+0x9c>
   871c0:	00000606 	br	871dc <strcmp+0xa4>
   871c4:	21000044 	addi	r4,r4,1
   871c8:	20c00007 	ldb	r3,0(r4)
   871cc:	29400044 	addi	r5,r5,1
   871d0:	18000226 	beq	r3,zero,871dc <strcmp+0xa4>
   871d4:	28800007 	ldb	r2,0(r5)
   871d8:	18bffa26 	beq	r3,r2,871c4 <strcmp+0x8c>
   871dc:	20c00003 	ldbu	r3,0(r4)
   871e0:	28800003 	ldbu	r2,0(r5)
   871e4:	1885c83a 	sub	r2,r3,r2
   871e8:	f800283a 	ret
   871ec:	0005883a 	mov	r2,zero
   871f0:	f800283a 	ret

000871f4 <_write_r>:
   871f4:	defffd04 	addi	sp,sp,-12
   871f8:	dc000015 	stw	r16,0(sp)
   871fc:	04000274 	movhi	r16,9
   87200:	843f8d04 	addi	r16,r16,-460
   87204:	dc400115 	stw	r17,4(sp)
   87208:	80000015 	stw	zero,0(r16)
   8720c:	2023883a 	mov	r17,r4
   87210:	2809883a 	mov	r4,r5
   87214:	300b883a 	mov	r5,r6
   87218:	380d883a 	mov	r6,r7
   8721c:	dfc00215 	stw	ra,8(sp)
   87220:	008a65c0 	call	8a65c <write>
   87224:	1007883a 	mov	r3,r2
   87228:	00bfffc4 	movi	r2,-1
   8722c:	18800626 	beq	r3,r2,87248 <_write_r+0x54>
   87230:	1805883a 	mov	r2,r3
   87234:	dfc00217 	ldw	ra,8(sp)
   87238:	dc400117 	ldw	r17,4(sp)
   8723c:	dc000017 	ldw	r16,0(sp)
   87240:	dec00304 	addi	sp,sp,12
   87244:	f800283a 	ret
   87248:	80800017 	ldw	r2,0(r16)
   8724c:	103ff826 	beq	r2,zero,87230 <_write_r+0x3c>
   87250:	88800015 	stw	r2,0(r17)
   87254:	1805883a 	mov	r2,r3
   87258:	dfc00217 	ldw	ra,8(sp)
   8725c:	dc400117 	ldw	r17,4(sp)
   87260:	dc000017 	ldw	r16,0(sp)
   87264:	dec00304 	addi	sp,sp,12
   87268:	f800283a 	ret

0008726c <_calloc_r>:
   8726c:	defffe04 	addi	sp,sp,-8
   87270:	dc400015 	stw	r17,0(sp)
   87274:	2023883a 	mov	r17,r4
   87278:	2809883a 	mov	r4,r5
   8727c:	300b883a 	mov	r5,r6
   87280:	dfc00115 	stw	ra,4(sp)
   87284:	00895e00 	call	895e0 <__mulsi3>
   87288:	100b883a 	mov	r5,r2
   8728c:	8809883a 	mov	r4,r17
   87290:	0084e500 	call	84e50 <_malloc_r>
   87294:	1023883a 	mov	r17,r2
   87298:	01c00904 	movi	r7,36
   8729c:	10000d26 	beq	r2,zero,872d4 <_calloc_r+0x68>
   872a0:	10ffff17 	ldw	r3,-4(r2)
   872a4:	1009883a 	mov	r4,r2
   872a8:	00bfff04 	movi	r2,-4
   872ac:	1886703a 	and	r3,r3,r2
   872b0:	1887883a 	add	r3,r3,r2
   872b4:	180d883a 	mov	r6,r3
   872b8:	000b883a 	mov	r5,zero
   872bc:	38c01736 	bltu	r7,r3,8731c <_calloc_r+0xb0>
   872c0:	008004c4 	movi	r2,19
   872c4:	10c00836 	bltu	r2,r3,872e8 <_calloc_r+0x7c>
   872c8:	20000215 	stw	zero,8(r4)
   872cc:	20000015 	stw	zero,0(r4)
   872d0:	20000115 	stw	zero,4(r4)
   872d4:	8805883a 	mov	r2,r17
   872d8:	dfc00117 	ldw	ra,4(sp)
   872dc:	dc400017 	ldw	r17,0(sp)
   872e0:	dec00204 	addi	sp,sp,8
   872e4:	f800283a 	ret
   872e8:	008006c4 	movi	r2,27
   872ec:	88000015 	stw	zero,0(r17)
   872f0:	88000115 	stw	zero,4(r17)
   872f4:	89000204 	addi	r4,r17,8
   872f8:	10fff32e 	bgeu	r2,r3,872c8 <_calloc_r+0x5c>
   872fc:	88000215 	stw	zero,8(r17)
   87300:	88000315 	stw	zero,12(r17)
   87304:	89000404 	addi	r4,r17,16
   87308:	19ffef1e 	bne	r3,r7,872c8 <_calloc_r+0x5c>
   8730c:	89000604 	addi	r4,r17,24
   87310:	88000415 	stw	zero,16(r17)
   87314:	88000515 	stw	zero,20(r17)
   87318:	003feb06 	br	872c8 <_calloc_r+0x5c>
   8731c:	00857f40 	call	857f4 <memset>
   87320:	8805883a 	mov	r2,r17
   87324:	dfc00117 	ldw	ra,4(sp)
   87328:	dc400017 	ldw	r17,0(sp)
   8732c:	dec00204 	addi	sp,sp,8
   87330:	f800283a 	ret

00087334 <_close_r>:
   87334:	defffd04 	addi	sp,sp,-12
   87338:	dc000015 	stw	r16,0(sp)
   8733c:	04000274 	movhi	r16,9
   87340:	843f8d04 	addi	r16,r16,-460
   87344:	dc400115 	stw	r17,4(sp)
   87348:	80000015 	stw	zero,0(r16)
   8734c:	2023883a 	mov	r17,r4
   87350:	2809883a 	mov	r4,r5
   87354:	dfc00215 	stw	ra,8(sp)
   87358:	0089cd00 	call	89cd0 <close>
   8735c:	1007883a 	mov	r3,r2
   87360:	00bfffc4 	movi	r2,-1
   87364:	18800626 	beq	r3,r2,87380 <_close_r+0x4c>
   87368:	1805883a 	mov	r2,r3
   8736c:	dfc00217 	ldw	ra,8(sp)
   87370:	dc400117 	ldw	r17,4(sp)
   87374:	dc000017 	ldw	r16,0(sp)
   87378:	dec00304 	addi	sp,sp,12
   8737c:	f800283a 	ret
   87380:	80800017 	ldw	r2,0(r16)
   87384:	103ff826 	beq	r2,zero,87368 <_close_r+0x34>
   87388:	88800015 	stw	r2,0(r17)
   8738c:	1805883a 	mov	r2,r3
   87390:	dfc00217 	ldw	ra,8(sp)
   87394:	dc400117 	ldw	r17,4(sp)
   87398:	dc000017 	ldw	r16,0(sp)
   8739c:	dec00304 	addi	sp,sp,12
   873a0:	f800283a 	ret

000873a4 <_fclose_r>:
   873a4:	defffc04 	addi	sp,sp,-16
   873a8:	dc400115 	stw	r17,4(sp)
   873ac:	dc000015 	stw	r16,0(sp)
   873b0:	dfc00315 	stw	ra,12(sp)
   873b4:	dc800215 	stw	r18,8(sp)
   873b8:	2821883a 	mov	r16,r5
   873bc:	2023883a 	mov	r17,r4
   873c0:	28002926 	beq	r5,zero,87468 <_fclose_r+0xc4>
   873c4:	0083f000 	call	83f00 <__sfp_lock_acquire>
   873c8:	88000226 	beq	r17,zero,873d4 <_fclose_r+0x30>
   873cc:	88800e17 	ldw	r2,56(r17)
   873d0:	10002d26 	beq	r2,zero,87488 <_fclose_r+0xe4>
   873d4:	8080030f 	ldh	r2,12(r16)
   873d8:	10002226 	beq	r2,zero,87464 <_fclose_r+0xc0>
   873dc:	8809883a 	mov	r4,r17
   873e0:	800b883a 	mov	r5,r16
   873e4:	0083c780 	call	83c78 <_fflush_r>
   873e8:	1025883a 	mov	r18,r2
   873ec:	80800b17 	ldw	r2,44(r16)
   873f0:	10000426 	beq	r2,zero,87404 <_fclose_r+0x60>
   873f4:	81400717 	ldw	r5,28(r16)
   873f8:	8809883a 	mov	r4,r17
   873fc:	103ee83a 	callr	r2
   87400:	10002a16 	blt	r2,zero,874ac <_fclose_r+0x108>
   87404:	8080030b 	ldhu	r2,12(r16)
   87408:	1080200c 	andi	r2,r2,128
   8740c:	1000231e 	bne	r2,zero,8749c <_fclose_r+0xf8>
   87410:	81400c17 	ldw	r5,48(r16)
   87414:	28000526 	beq	r5,zero,8742c <_fclose_r+0x88>
   87418:	80801004 	addi	r2,r16,64
   8741c:	28800226 	beq	r5,r2,87428 <_fclose_r+0x84>
   87420:	8809883a 	mov	r4,r17
   87424:	00842c80 	call	842c8 <_free_r>
   87428:	80000c15 	stw	zero,48(r16)
   8742c:	81401117 	ldw	r5,68(r16)
   87430:	28000326 	beq	r5,zero,87440 <_fclose_r+0x9c>
   87434:	8809883a 	mov	r4,r17
   87438:	00842c80 	call	842c8 <_free_r>
   8743c:	80001115 	stw	zero,68(r16)
   87440:	8000030d 	sth	zero,12(r16)
   87444:	0083f040 	call	83f04 <__sfp_lock_release>
   87448:	9005883a 	mov	r2,r18
   8744c:	dfc00317 	ldw	ra,12(sp)
   87450:	dc800217 	ldw	r18,8(sp)
   87454:	dc400117 	ldw	r17,4(sp)
   87458:	dc000017 	ldw	r16,0(sp)
   8745c:	dec00404 	addi	sp,sp,16
   87460:	f800283a 	ret
   87464:	0083f040 	call	83f04 <__sfp_lock_release>
   87468:	0025883a 	mov	r18,zero
   8746c:	9005883a 	mov	r2,r18
   87470:	dfc00317 	ldw	ra,12(sp)
   87474:	dc800217 	ldw	r18,8(sp)
   87478:	dc400117 	ldw	r17,4(sp)
   8747c:	dc000017 	ldw	r16,0(sp)
   87480:	dec00404 	addi	sp,sp,16
   87484:	f800283a 	ret
   87488:	8809883a 	mov	r4,r17
   8748c:	0083f100 	call	83f10 <__sinit>
   87490:	8080030f 	ldh	r2,12(r16)
   87494:	103fd11e 	bne	r2,zero,873dc <_fclose_r+0x38>
   87498:	003ff206 	br	87464 <_fclose_r+0xc0>
   8749c:	81400417 	ldw	r5,16(r16)
   874a0:	8809883a 	mov	r4,r17
   874a4:	00842c80 	call	842c8 <_free_r>
   874a8:	003fd906 	br	87410 <_fclose_r+0x6c>
   874ac:	04bfffc4 	movi	r18,-1
   874b0:	003fd406 	br	87404 <_fclose_r+0x60>

000874b4 <fclose>:
   874b4:	00800274 	movhi	r2,9
   874b8:	10b8e004 	addi	r2,r2,-7296
   874bc:	200b883a 	mov	r5,r4
   874c0:	11000017 	ldw	r4,0(r2)
   874c4:	00873a41 	jmpi	873a4 <_fclose_r>

000874c8 <_fstat_r>:
   874c8:	defffd04 	addi	sp,sp,-12
   874cc:	dc000015 	stw	r16,0(sp)
   874d0:	04000274 	movhi	r16,9
   874d4:	843f8d04 	addi	r16,r16,-460
   874d8:	dc400115 	stw	r17,4(sp)
   874dc:	80000015 	stw	zero,0(r16)
   874e0:	2023883a 	mov	r17,r4
   874e4:	2809883a 	mov	r4,r5
   874e8:	300b883a 	mov	r5,r6
   874ec:	dfc00215 	stw	ra,8(sp)
   874f0:	0089e5c0 	call	89e5c <fstat>
   874f4:	1007883a 	mov	r3,r2
   874f8:	00bfffc4 	movi	r2,-1
   874fc:	18800626 	beq	r3,r2,87518 <_fstat_r+0x50>
   87500:	1805883a 	mov	r2,r3
   87504:	dfc00217 	ldw	ra,8(sp)
   87508:	dc400117 	ldw	r17,4(sp)
   8750c:	dc000017 	ldw	r16,0(sp)
   87510:	dec00304 	addi	sp,sp,12
   87514:	f800283a 	ret
   87518:	80800017 	ldw	r2,0(r16)
   8751c:	103ff826 	beq	r2,zero,87500 <_fstat_r+0x38>
   87520:	88800015 	stw	r2,0(r17)
   87524:	1805883a 	mov	r2,r3
   87528:	dfc00217 	ldw	ra,8(sp)
   8752c:	dc400117 	ldw	r17,4(sp)
   87530:	dc000017 	ldw	r16,0(sp)
   87534:	dec00304 	addi	sp,sp,12
   87538:	f800283a 	ret

0008753c <_isatty_r>:
   8753c:	defffd04 	addi	sp,sp,-12
   87540:	dc000015 	stw	r16,0(sp)
   87544:	04000274 	movhi	r16,9
   87548:	843f8d04 	addi	r16,r16,-460
   8754c:	dc400115 	stw	r17,4(sp)
   87550:	80000015 	stw	zero,0(r16)
   87554:	2023883a 	mov	r17,r4
   87558:	2809883a 	mov	r4,r5
   8755c:	dfc00215 	stw	ra,8(sp)
   87560:	0089f940 	call	89f94 <isatty>
   87564:	1007883a 	mov	r3,r2
   87568:	00bfffc4 	movi	r2,-1
   8756c:	18800626 	beq	r3,r2,87588 <_isatty_r+0x4c>
   87570:	1805883a 	mov	r2,r3
   87574:	dfc00217 	ldw	ra,8(sp)
   87578:	dc400117 	ldw	r17,4(sp)
   8757c:	dc000017 	ldw	r16,0(sp)
   87580:	dec00304 	addi	sp,sp,12
   87584:	f800283a 	ret
   87588:	80800017 	ldw	r2,0(r16)
   8758c:	103ff826 	beq	r2,zero,87570 <_isatty_r+0x34>
   87590:	88800015 	stw	r2,0(r17)
   87594:	1805883a 	mov	r2,r3
   87598:	dfc00217 	ldw	ra,8(sp)
   8759c:	dc400117 	ldw	r17,4(sp)
   875a0:	dc000017 	ldw	r16,0(sp)
   875a4:	dec00304 	addi	sp,sp,12
   875a8:	f800283a 	ret

000875ac <_lseek_r>:
   875ac:	defffd04 	addi	sp,sp,-12
   875b0:	dc000015 	stw	r16,0(sp)
   875b4:	04000274 	movhi	r16,9
   875b8:	843f8d04 	addi	r16,r16,-460
   875bc:	dc400115 	stw	r17,4(sp)
   875c0:	80000015 	stw	zero,0(r16)
   875c4:	2023883a 	mov	r17,r4
   875c8:	2809883a 	mov	r4,r5
   875cc:	300b883a 	mov	r5,r6
   875d0:	380d883a 	mov	r6,r7
   875d4:	dfc00215 	stw	ra,8(sp)
   875d8:	008a1a40 	call	8a1a4 <lseek>
   875dc:	1007883a 	mov	r3,r2
   875e0:	00bfffc4 	movi	r2,-1
   875e4:	18800626 	beq	r3,r2,87600 <_lseek_r+0x54>
   875e8:	1805883a 	mov	r2,r3
   875ec:	dfc00217 	ldw	ra,8(sp)
   875f0:	dc400117 	ldw	r17,4(sp)
   875f4:	dc000017 	ldw	r16,0(sp)
   875f8:	dec00304 	addi	sp,sp,12
   875fc:	f800283a 	ret
   87600:	80800017 	ldw	r2,0(r16)
   87604:	103ff826 	beq	r2,zero,875e8 <_lseek_r+0x3c>
   87608:	88800015 	stw	r2,0(r17)
   8760c:	1805883a 	mov	r2,r3
   87610:	dfc00217 	ldw	ra,8(sp)
   87614:	dc400117 	ldw	r17,4(sp)
   87618:	dc000017 	ldw	r16,0(sp)
   8761c:	dec00304 	addi	sp,sp,12
   87620:	f800283a 	ret

00087624 <_read_r>:
   87624:	defffd04 	addi	sp,sp,-12
   87628:	dc000015 	stw	r16,0(sp)
   8762c:	04000274 	movhi	r16,9
   87630:	843f8d04 	addi	r16,r16,-460
   87634:	dc400115 	stw	r17,4(sp)
   87638:	80000015 	stw	zero,0(r16)
   8763c:	2023883a 	mov	r17,r4
   87640:	2809883a 	mov	r4,r5
   87644:	300b883a 	mov	r5,r6
   87648:	380d883a 	mov	r6,r7
   8764c:	dfc00215 	stw	ra,8(sp)
   87650:	008a3a40 	call	8a3a4 <read>
   87654:	1007883a 	mov	r3,r2
   87658:	00bfffc4 	movi	r2,-1
   8765c:	18800626 	beq	r3,r2,87678 <_read_r+0x54>
   87660:	1805883a 	mov	r2,r3
   87664:	dfc00217 	ldw	ra,8(sp)
   87668:	dc400117 	ldw	r17,4(sp)
   8766c:	dc000017 	ldw	r16,0(sp)
   87670:	dec00304 	addi	sp,sp,12
   87674:	f800283a 	ret
   87678:	80800017 	ldw	r2,0(r16)
   8767c:	103ff826 	beq	r2,zero,87660 <_read_r+0x3c>
   87680:	88800015 	stw	r2,0(r17)
   87684:	1805883a 	mov	r2,r3
   87688:	dfc00217 	ldw	ra,8(sp)
   8768c:	dc400117 	ldw	r17,4(sp)
   87690:	dc000017 	ldw	r16,0(sp)
   87694:	dec00304 	addi	sp,sp,12
   87698:	f800283a 	ret

0008769c <__udivdi3>:
   8769c:	defff104 	addi	sp,sp,-60
   876a0:	0015883a 	mov	r10,zero
   876a4:	2005883a 	mov	r2,r4
   876a8:	3011883a 	mov	r8,r6
   876ac:	df000d15 	stw	fp,52(sp)
   876b0:	dd400a15 	stw	r21,40(sp)
   876b4:	dcc00815 	stw	r19,32(sp)
   876b8:	dfc00e15 	stw	ra,56(sp)
   876bc:	ddc00c15 	stw	r23,48(sp)
   876c0:	dd800b15 	stw	r22,44(sp)
   876c4:	dd000915 	stw	r20,36(sp)
   876c8:	dc800715 	stw	r18,28(sp)
   876cc:	dc400615 	stw	r17,24(sp)
   876d0:	dc000515 	stw	r16,20(sp)
   876d4:	da800315 	stw	r10,12(sp)
   876d8:	4027883a 	mov	r19,r8
   876dc:	1039883a 	mov	fp,r2
   876e0:	282b883a 	mov	r21,r5
   876e4:	da800415 	stw	r10,16(sp)
   876e8:	3800401e 	bne	r7,zero,877ec <__udivdi3+0x150>
   876ec:	2a006536 	bltu	r5,r8,87884 <__udivdi3+0x1e8>
   876f0:	4000b526 	beq	r8,zero,879c8 <__udivdi3+0x32c>
   876f4:	00bfffd4 	movui	r2,65535
   876f8:	14c0ad36 	bltu	r2,r19,879b0 <__udivdi3+0x314>
   876fc:	00803fc4 	movi	r2,255
   87700:	14c15e36 	bltu	r2,r19,87c7c <__udivdi3+0x5e0>
   87704:	000b883a 	mov	r5,zero
   87708:	0005883a 	mov	r2,zero
   8770c:	9884d83a 	srl	r2,r19,r2
   87710:	01000274 	movhi	r4,9
   87714:	21320c04 	addi	r4,r4,-14288
   87718:	01800804 	movi	r6,32
   8771c:	1105883a 	add	r2,r2,r4
   87720:	10c00003 	ldbu	r3,0(r2)
   87724:	28c7883a 	add	r3,r5,r3
   87728:	30e9c83a 	sub	r20,r6,r3
   8772c:	a0010a1e 	bne	r20,zero,87b58 <__udivdi3+0x4bc>
   87730:	982ed43a 	srli	r23,r19,16
   87734:	acebc83a 	sub	r21,r21,r19
   87738:	9dbfffcc 	andi	r22,r19,65535
   8773c:	05000044 	movi	r20,1
   87740:	a809883a 	mov	r4,r21
   87744:	b80b883a 	mov	r5,r23
   87748:	00895d00 	call	895d0 <__udivsi3>
   8774c:	100b883a 	mov	r5,r2
   87750:	b009883a 	mov	r4,r22
   87754:	1021883a 	mov	r16,r2
   87758:	00895e00 	call	895e0 <__mulsi3>
   8775c:	a809883a 	mov	r4,r21
   87760:	b80b883a 	mov	r5,r23
   87764:	1023883a 	mov	r17,r2
   87768:	00895d80 	call	895d8 <__umodsi3>
   8776c:	1004943a 	slli	r2,r2,16
   87770:	e006d43a 	srli	r3,fp,16
   87774:	10c4b03a 	or	r2,r2,r3
   87778:	1440042e 	bgeu	r2,r17,8778c <__udivdi3+0xf0>
   8777c:	14c5883a 	add	r2,r2,r19
   87780:	843fffc4 	addi	r16,r16,-1
   87784:	14c00136 	bltu	r2,r19,8778c <__udivdi3+0xf0>
   87788:	14415c36 	bltu	r2,r17,87cfc <__udivdi3+0x660>
   8778c:	1463c83a 	sub	r17,r2,r17
   87790:	8809883a 	mov	r4,r17
   87794:	b80b883a 	mov	r5,r23
   87798:	00895d00 	call	895d0 <__udivsi3>
   8779c:	100b883a 	mov	r5,r2
   877a0:	b009883a 	mov	r4,r22
   877a4:	102b883a 	mov	r21,r2
   877a8:	00895e00 	call	895e0 <__mulsi3>
   877ac:	8809883a 	mov	r4,r17
   877b0:	b80b883a 	mov	r5,r23
   877b4:	1025883a 	mov	r18,r2
   877b8:	00895d80 	call	895d8 <__umodsi3>
   877bc:	1004943a 	slli	r2,r2,16
   877c0:	e0ffffcc 	andi	r3,fp,65535
   877c4:	10c4b03a 	or	r2,r2,r3
   877c8:	1480042e 	bgeu	r2,r18,877dc <__udivdi3+0x140>
   877cc:	9885883a 	add	r2,r19,r2
   877d0:	ad7fffc4 	addi	r21,r21,-1
   877d4:	14c00136 	bltu	r2,r19,877dc <__udivdi3+0x140>
   877d8:	14813c36 	bltu	r2,r18,87ccc <__udivdi3+0x630>
   877dc:	8004943a 	slli	r2,r16,16
   877e0:	a009883a 	mov	r4,r20
   877e4:	a884b03a 	or	r2,r21,r2
   877e8:	00001506 	br	87840 <__udivdi3+0x1a4>
   877ec:	380d883a 	mov	r6,r7
   877f0:	29c06c36 	bltu	r5,r7,879a4 <__udivdi3+0x308>
   877f4:	00bfffd4 	movui	r2,65535
   877f8:	11c06436 	bltu	r2,r7,8798c <__udivdi3+0x2f0>
   877fc:	00803fc4 	movi	r2,255
   87800:	11c11836 	bltu	r2,r7,87c64 <__udivdi3+0x5c8>
   87804:	000b883a 	mov	r5,zero
   87808:	0005883a 	mov	r2,zero
   8780c:	3084d83a 	srl	r2,r6,r2
   87810:	01000274 	movhi	r4,9
   87814:	21320c04 	addi	r4,r4,-14288
   87818:	01c00804 	movi	r7,32
   8781c:	1105883a 	add	r2,r2,r4
   87820:	10c00003 	ldbu	r3,0(r2)
   87824:	28c7883a 	add	r3,r5,r3
   87828:	38edc83a 	sub	r22,r7,r3
   8782c:	b000731e 	bne	r22,zero,879fc <__udivdi3+0x360>
   87830:	35400136 	bltu	r6,r21,87838 <__udivdi3+0x19c>
   87834:	e4c05b36 	bltu	fp,r19,879a4 <__udivdi3+0x308>
   87838:	00800044 	movi	r2,1
   8783c:	0009883a 	mov	r4,zero
   87840:	d8800315 	stw	r2,12(sp)
   87844:	d9400317 	ldw	r5,12(sp)
   87848:	2007883a 	mov	r3,r4
   8784c:	d9000415 	stw	r4,16(sp)
   87850:	2805883a 	mov	r2,r5
   87854:	dfc00e17 	ldw	ra,56(sp)
   87858:	df000d17 	ldw	fp,52(sp)
   8785c:	ddc00c17 	ldw	r23,48(sp)
   87860:	dd800b17 	ldw	r22,44(sp)
   87864:	dd400a17 	ldw	r21,40(sp)
   87868:	dd000917 	ldw	r20,36(sp)
   8786c:	dcc00817 	ldw	r19,32(sp)
   87870:	dc800717 	ldw	r18,28(sp)
   87874:	dc400617 	ldw	r17,24(sp)
   87878:	dc000517 	ldw	r16,20(sp)
   8787c:	dec00f04 	addi	sp,sp,60
   87880:	f800283a 	ret
   87884:	00bfffd4 	movui	r2,65535
   87888:	12005636 	bltu	r2,r8,879e4 <__udivdi3+0x348>
   8788c:	00803fc4 	movi	r2,255
   87890:	12010036 	bltu	r2,r8,87c94 <__udivdi3+0x5f8>
   87894:	000b883a 	mov	r5,zero
   87898:	0005883a 	mov	r2,zero
   8789c:	9884d83a 	srl	r2,r19,r2
   878a0:	01000274 	movhi	r4,9
   878a4:	21320c04 	addi	r4,r4,-14288
   878a8:	01800804 	movi	r6,32
   878ac:	1105883a 	add	r2,r2,r4
   878b0:	10c00003 	ldbu	r3,0(r2)
   878b4:	28c7883a 	add	r3,r5,r3
   878b8:	30cbc83a 	sub	r5,r6,r3
   878bc:	28000626 	beq	r5,zero,878d8 <__udivdi3+0x23c>
   878c0:	3145c83a 	sub	r2,r6,r5
   878c4:	e084d83a 	srl	r2,fp,r2
   878c8:	a946983a 	sll	r3,r21,r5
   878cc:	e178983a 	sll	fp,fp,r5
   878d0:	9966983a 	sll	r19,r19,r5
   878d4:	18aab03a 	or	r21,r3,r2
   878d8:	982ed43a 	srli	r23,r19,16
   878dc:	a809883a 	mov	r4,r21
   878e0:	9cbfffcc 	andi	r18,r19,65535
   878e4:	b80b883a 	mov	r5,r23
   878e8:	00895d00 	call	895d0 <__udivsi3>
   878ec:	100b883a 	mov	r5,r2
   878f0:	9009883a 	mov	r4,r18
   878f4:	1021883a 	mov	r16,r2
   878f8:	00895e00 	call	895e0 <__mulsi3>
   878fc:	a809883a 	mov	r4,r21
   87900:	b80b883a 	mov	r5,r23
   87904:	1023883a 	mov	r17,r2
   87908:	00895d80 	call	895d8 <__umodsi3>
   8790c:	1004943a 	slli	r2,r2,16
   87910:	e006d43a 	srli	r3,fp,16
   87914:	10c4b03a 	or	r2,r2,r3
   87918:	1440042e 	bgeu	r2,r17,8792c <__udivdi3+0x290>
   8791c:	14c5883a 	add	r2,r2,r19
   87920:	843fffc4 	addi	r16,r16,-1
   87924:	14c00136 	bltu	r2,r19,8792c <__udivdi3+0x290>
   87928:	1440ea36 	bltu	r2,r17,87cd4 <__udivdi3+0x638>
   8792c:	1463c83a 	sub	r17,r2,r17
   87930:	8809883a 	mov	r4,r17
   87934:	b80b883a 	mov	r5,r23
   87938:	00895d00 	call	895d0 <__udivsi3>
   8793c:	100b883a 	mov	r5,r2
   87940:	9009883a 	mov	r4,r18
   87944:	102b883a 	mov	r21,r2
   87948:	00895e00 	call	895e0 <__mulsi3>
   8794c:	8809883a 	mov	r4,r17
   87950:	b80b883a 	mov	r5,r23
   87954:	1025883a 	mov	r18,r2
   87958:	00895d80 	call	895d8 <__umodsi3>
   8795c:	1004943a 	slli	r2,r2,16
   87960:	e0ffffcc 	andi	r3,fp,65535
   87964:	10c4b03a 	or	r2,r2,r3
   87968:	1480042e 	bgeu	r2,r18,8797c <__udivdi3+0x2e0>
   8796c:	9885883a 	add	r2,r19,r2
   87970:	ad7fffc4 	addi	r21,r21,-1
   87974:	14c00136 	bltu	r2,r19,8797c <__udivdi3+0x2e0>
   87978:	1480d936 	bltu	r2,r18,87ce0 <__udivdi3+0x644>
   8797c:	8004943a 	slli	r2,r16,16
   87980:	0009883a 	mov	r4,zero
   87984:	a884b03a 	or	r2,r21,r2
   87988:	003fad06 	br	87840 <__udivdi3+0x1a4>
   8798c:	00804034 	movhi	r2,256
   87990:	10bfffc4 	addi	r2,r2,-1
   87994:	11c0b636 	bltu	r2,r7,87c70 <__udivdi3+0x5d4>
   87998:	01400404 	movi	r5,16
   8799c:	2805883a 	mov	r2,r5
   879a0:	003f9a06 	br	8780c <__udivdi3+0x170>
   879a4:	0005883a 	mov	r2,zero
   879a8:	0009883a 	mov	r4,zero
   879ac:	003fa406 	br	87840 <__udivdi3+0x1a4>
   879b0:	00804034 	movhi	r2,256
   879b4:	10bfffc4 	addi	r2,r2,-1
   879b8:	14c0b336 	bltu	r2,r19,87c88 <__udivdi3+0x5ec>
   879bc:	01400404 	movi	r5,16
   879c0:	2805883a 	mov	r2,r5
   879c4:	003f5106 	br	8770c <__udivdi3+0x70>
   879c8:	01000044 	movi	r4,1
   879cc:	000b883a 	mov	r5,zero
   879d0:	00895d00 	call	895d0 <__udivsi3>
   879d4:	1027883a 	mov	r19,r2
   879d8:	00bfffd4 	movui	r2,65535
   879dc:	14fff436 	bltu	r2,r19,879b0 <__udivdi3+0x314>
   879e0:	003f4606 	br	876fc <__udivdi3+0x60>
   879e4:	00804034 	movhi	r2,256
   879e8:	10bfffc4 	addi	r2,r2,-1
   879ec:	1200ac36 	bltu	r2,r8,87ca0 <__udivdi3+0x604>
   879f0:	01400404 	movi	r5,16
   879f4:	2805883a 	mov	r2,r5
   879f8:	003fa806 	br	8789c <__udivdi3+0x200>
   879fc:	3d85c83a 	sub	r2,r7,r22
   87a00:	3588983a 	sll	r4,r6,r22
   87a04:	9886d83a 	srl	r3,r19,r2
   87a08:	a8a2d83a 	srl	r17,r21,r2
   87a0c:	e084d83a 	srl	r2,fp,r2
   87a10:	20eeb03a 	or	r23,r4,r3
   87a14:	b824d43a 	srli	r18,r23,16
   87a18:	ad86983a 	sll	r3,r21,r22
   87a1c:	8809883a 	mov	r4,r17
   87a20:	900b883a 	mov	r5,r18
   87a24:	1886b03a 	or	r3,r3,r2
   87a28:	d8c00115 	stw	r3,4(sp)
   87a2c:	bc3fffcc 	andi	r16,r23,65535
   87a30:	00895d00 	call	895d0 <__udivsi3>
   87a34:	100b883a 	mov	r5,r2
   87a38:	8009883a 	mov	r4,r16
   87a3c:	1029883a 	mov	r20,r2
   87a40:	00895e00 	call	895e0 <__mulsi3>
   87a44:	900b883a 	mov	r5,r18
   87a48:	8809883a 	mov	r4,r17
   87a4c:	102b883a 	mov	r21,r2
   87a50:	00895d80 	call	895d8 <__umodsi3>
   87a54:	d9400117 	ldw	r5,4(sp)
   87a58:	1004943a 	slli	r2,r2,16
   87a5c:	9da6983a 	sll	r19,r19,r22
   87a60:	2806d43a 	srli	r3,r5,16
   87a64:	10c4b03a 	or	r2,r2,r3
   87a68:	1540032e 	bgeu	r2,r21,87a78 <__udivdi3+0x3dc>
   87a6c:	15c5883a 	add	r2,r2,r23
   87a70:	a53fffc4 	addi	r20,r20,-1
   87a74:	15c0912e 	bgeu	r2,r23,87cbc <__udivdi3+0x620>
   87a78:	1563c83a 	sub	r17,r2,r21
   87a7c:	8809883a 	mov	r4,r17
   87a80:	900b883a 	mov	r5,r18
   87a84:	00895d00 	call	895d0 <__udivsi3>
   87a88:	100b883a 	mov	r5,r2
   87a8c:	8009883a 	mov	r4,r16
   87a90:	102b883a 	mov	r21,r2
   87a94:	00895e00 	call	895e0 <__mulsi3>
   87a98:	8809883a 	mov	r4,r17
   87a9c:	900b883a 	mov	r5,r18
   87aa0:	1021883a 	mov	r16,r2
   87aa4:	00895d80 	call	895d8 <__umodsi3>
   87aa8:	da800117 	ldw	r10,4(sp)
   87aac:	1004943a 	slli	r2,r2,16
   87ab0:	50ffffcc 	andi	r3,r10,65535
   87ab4:	10c6b03a 	or	r3,r2,r3
   87ab8:	1c00032e 	bgeu	r3,r16,87ac8 <__udivdi3+0x42c>
   87abc:	1dc7883a 	add	r3,r3,r23
   87ac0:	ad7fffc4 	addi	r21,r21,-1
   87ac4:	1dc0792e 	bgeu	r3,r23,87cac <__udivdi3+0x610>
   87ac8:	a004943a 	slli	r2,r20,16
   87acc:	982ed43a 	srli	r23,r19,16
   87ad0:	9cffffcc 	andi	r19,r19,65535
   87ad4:	a8a4b03a 	or	r18,r21,r2
   87ad8:	947fffcc 	andi	r17,r18,65535
   87adc:	902ad43a 	srli	r21,r18,16
   87ae0:	8809883a 	mov	r4,r17
   87ae4:	980b883a 	mov	r5,r19
   87ae8:	1c21c83a 	sub	r16,r3,r16
   87aec:	00895e00 	call	895e0 <__mulsi3>
   87af0:	8809883a 	mov	r4,r17
   87af4:	b80b883a 	mov	r5,r23
   87af8:	1029883a 	mov	r20,r2
   87afc:	00895e00 	call	895e0 <__mulsi3>
   87b00:	980b883a 	mov	r5,r19
   87b04:	a809883a 	mov	r4,r21
   87b08:	1023883a 	mov	r17,r2
   87b0c:	00895e00 	call	895e0 <__mulsi3>
   87b10:	a809883a 	mov	r4,r21
   87b14:	b80b883a 	mov	r5,r23
   87b18:	1027883a 	mov	r19,r2
   87b1c:	00895e00 	call	895e0 <__mulsi3>
   87b20:	1009883a 	mov	r4,r2
   87b24:	a004d43a 	srli	r2,r20,16
   87b28:	8ce3883a 	add	r17,r17,r19
   87b2c:	1447883a 	add	r3,r2,r17
   87b30:	1cc0022e 	bgeu	r3,r19,87b3c <__udivdi3+0x4a0>
   87b34:	00800074 	movhi	r2,1
   87b38:	2089883a 	add	r4,r4,r2
   87b3c:	1804d43a 	srli	r2,r3,16
   87b40:	2085883a 	add	r2,r4,r2
   87b44:	80804436 	bltu	r16,r2,87c58 <__udivdi3+0x5bc>
   87b48:	80803e26 	beq	r16,r2,87c44 <__udivdi3+0x5a8>
   87b4c:	9005883a 	mov	r2,r18
   87b50:	0009883a 	mov	r4,zero
   87b54:	003f3a06 	br	87840 <__udivdi3+0x1a4>
   87b58:	9d26983a 	sll	r19,r19,r20
   87b5c:	3505c83a 	sub	r2,r6,r20
   87b60:	a8a2d83a 	srl	r17,r21,r2
   87b64:	982ed43a 	srli	r23,r19,16
   87b68:	e084d83a 	srl	r2,fp,r2
   87b6c:	ad06983a 	sll	r3,r21,r20
   87b70:	8809883a 	mov	r4,r17
   87b74:	b80b883a 	mov	r5,r23
   87b78:	1886b03a 	or	r3,r3,r2
   87b7c:	d8c00015 	stw	r3,0(sp)
   87b80:	9dbfffcc 	andi	r22,r19,65535
   87b84:	00895d00 	call	895d0 <__udivsi3>
   87b88:	100b883a 	mov	r5,r2
   87b8c:	b009883a 	mov	r4,r22
   87b90:	d8800215 	stw	r2,8(sp)
   87b94:	00895e00 	call	895e0 <__mulsi3>
   87b98:	8809883a 	mov	r4,r17
   87b9c:	b80b883a 	mov	r5,r23
   87ba0:	102b883a 	mov	r21,r2
   87ba4:	00895d80 	call	895d8 <__umodsi3>
   87ba8:	d9000017 	ldw	r4,0(sp)
   87bac:	1004943a 	slli	r2,r2,16
   87bb0:	2006d43a 	srli	r3,r4,16
   87bb4:	10c4b03a 	or	r2,r2,r3
   87bb8:	1540052e 	bgeu	r2,r21,87bd0 <__udivdi3+0x534>
   87bbc:	d9400217 	ldw	r5,8(sp)
   87bc0:	14c5883a 	add	r2,r2,r19
   87bc4:	297fffc4 	addi	r5,r5,-1
   87bc8:	d9400215 	stw	r5,8(sp)
   87bcc:	14c0462e 	bgeu	r2,r19,87ce8 <__udivdi3+0x64c>
   87bd0:	1563c83a 	sub	r17,r2,r21
   87bd4:	8809883a 	mov	r4,r17
   87bd8:	b80b883a 	mov	r5,r23
   87bdc:	00895d00 	call	895d0 <__udivsi3>
   87be0:	100b883a 	mov	r5,r2
   87be4:	b009883a 	mov	r4,r22
   87be8:	1025883a 	mov	r18,r2
   87bec:	00895e00 	call	895e0 <__mulsi3>
   87bf0:	8809883a 	mov	r4,r17
   87bf4:	b80b883a 	mov	r5,r23
   87bf8:	1021883a 	mov	r16,r2
   87bfc:	00895d80 	call	895d8 <__umodsi3>
   87c00:	da800017 	ldw	r10,0(sp)
   87c04:	1004943a 	slli	r2,r2,16
   87c08:	50ffffcc 	andi	r3,r10,65535
   87c0c:	10c6b03a 	or	r3,r2,r3
   87c10:	1c00062e 	bgeu	r3,r16,87c2c <__udivdi3+0x590>
   87c14:	1cc7883a 	add	r3,r3,r19
   87c18:	94bfffc4 	addi	r18,r18,-1
   87c1c:	1cc00336 	bltu	r3,r19,87c2c <__udivdi3+0x590>
   87c20:	1c00022e 	bgeu	r3,r16,87c2c <__udivdi3+0x590>
   87c24:	94bfffc4 	addi	r18,r18,-1
   87c28:	1cc7883a 	add	r3,r3,r19
   87c2c:	d9000217 	ldw	r4,8(sp)
   87c30:	e538983a 	sll	fp,fp,r20
   87c34:	1c2bc83a 	sub	r21,r3,r16
   87c38:	2004943a 	slli	r2,r4,16
   87c3c:	90a8b03a 	or	r20,r18,r2
   87c40:	003ebf06 	br	87740 <__udivdi3+0xa4>
   87c44:	1804943a 	slli	r2,r3,16
   87c48:	e588983a 	sll	r4,fp,r22
   87c4c:	a0ffffcc 	andi	r3,r20,65535
   87c50:	10c5883a 	add	r2,r2,r3
   87c54:	20bfbd2e 	bgeu	r4,r2,87b4c <__udivdi3+0x4b0>
   87c58:	90bfffc4 	addi	r2,r18,-1
   87c5c:	0009883a 	mov	r4,zero
   87c60:	003ef706 	br	87840 <__udivdi3+0x1a4>
   87c64:	01400204 	movi	r5,8
   87c68:	2805883a 	mov	r2,r5
   87c6c:	003ee706 	br	8780c <__udivdi3+0x170>
   87c70:	01400604 	movi	r5,24
   87c74:	2805883a 	mov	r2,r5
   87c78:	003ee406 	br	8780c <__udivdi3+0x170>
   87c7c:	01400204 	movi	r5,8
   87c80:	2805883a 	mov	r2,r5
   87c84:	003ea106 	br	8770c <__udivdi3+0x70>
   87c88:	01400604 	movi	r5,24
   87c8c:	2805883a 	mov	r2,r5
   87c90:	003e9e06 	br	8770c <__udivdi3+0x70>
   87c94:	01400204 	movi	r5,8
   87c98:	2805883a 	mov	r2,r5
   87c9c:	003eff06 	br	8789c <__udivdi3+0x200>
   87ca0:	01400604 	movi	r5,24
   87ca4:	2805883a 	mov	r2,r5
   87ca8:	003efc06 	br	8789c <__udivdi3+0x200>
   87cac:	1c3f862e 	bgeu	r3,r16,87ac8 <__udivdi3+0x42c>
   87cb0:	1dc7883a 	add	r3,r3,r23
   87cb4:	ad7fffc4 	addi	r21,r21,-1
   87cb8:	003f8306 	br	87ac8 <__udivdi3+0x42c>
   87cbc:	157f6e2e 	bgeu	r2,r21,87a78 <__udivdi3+0x3dc>
   87cc0:	a53fffc4 	addi	r20,r20,-1
   87cc4:	15c5883a 	add	r2,r2,r23
   87cc8:	003f6b06 	br	87a78 <__udivdi3+0x3dc>
   87ccc:	ad7fffc4 	addi	r21,r21,-1
   87cd0:	003ec206 	br	877dc <__udivdi3+0x140>
   87cd4:	843fffc4 	addi	r16,r16,-1
   87cd8:	14c5883a 	add	r2,r2,r19
   87cdc:	003f1306 	br	8792c <__udivdi3+0x290>
   87ce0:	ad7fffc4 	addi	r21,r21,-1
   87ce4:	003f2506 	br	8797c <__udivdi3+0x2e0>
   87ce8:	157fb92e 	bgeu	r2,r21,87bd0 <__udivdi3+0x534>
   87cec:	297fffc4 	addi	r5,r5,-1
   87cf0:	14c5883a 	add	r2,r2,r19
   87cf4:	d9400215 	stw	r5,8(sp)
   87cf8:	003fb506 	br	87bd0 <__udivdi3+0x534>
   87cfc:	843fffc4 	addi	r16,r16,-1
   87d00:	14c5883a 	add	r2,r2,r19
   87d04:	003ea106 	br	8778c <__udivdi3+0xf0>

00087d08 <__umoddi3>:
   87d08:	defff004 	addi	sp,sp,-64
   87d0c:	3011883a 	mov	r8,r6
   87d10:	000d883a 	mov	r6,zero
   87d14:	dd400b15 	stw	r21,44(sp)
   87d18:	dcc00915 	stw	r19,36(sp)
   87d1c:	dc000615 	stw	r16,24(sp)
   87d20:	dfc00f15 	stw	ra,60(sp)
   87d24:	df000e15 	stw	fp,56(sp)
   87d28:	ddc00d15 	stw	r23,52(sp)
   87d2c:	dd800c15 	stw	r22,48(sp)
   87d30:	dd000a15 	stw	r20,40(sp)
   87d34:	dc800815 	stw	r18,32(sp)
   87d38:	dc400715 	stw	r17,28(sp)
   87d3c:	2817883a 	mov	r11,r5
   87d40:	d9800415 	stw	r6,16(sp)
   87d44:	4027883a 	mov	r19,r8
   87d48:	d9800515 	stw	r6,20(sp)
   87d4c:	2021883a 	mov	r16,r4
   87d50:	282b883a 	mov	r21,r5
   87d54:	38002c1e 	bne	r7,zero,87e08 <__umoddi3+0x100>
   87d58:	2a005636 	bltu	r5,r8,87eb4 <__umoddi3+0x1ac>
   87d5c:	40009a26 	beq	r8,zero,87fc8 <__umoddi3+0x2c0>
   87d60:	00bfffd4 	movui	r2,65535
   87d64:	14c09236 	bltu	r2,r19,87fb0 <__umoddi3+0x2a8>
   87d68:	00803fc4 	movi	r2,255
   87d6c:	14c15c36 	bltu	r2,r19,882e0 <__umoddi3+0x5d8>
   87d70:	000b883a 	mov	r5,zero
   87d74:	0005883a 	mov	r2,zero
   87d78:	9884d83a 	srl	r2,r19,r2
   87d7c:	01000274 	movhi	r4,9
   87d80:	21320c04 	addi	r4,r4,-14288
   87d84:	01800804 	movi	r6,32
   87d88:	1105883a 	add	r2,r2,r4
   87d8c:	10c00003 	ldbu	r3,0(r2)
   87d90:	28c7883a 	add	r3,r5,r3
   87d94:	30e5c83a 	sub	r18,r6,r3
   87d98:	9000a41e 	bne	r18,zero,8802c <__umoddi3+0x324>
   87d9c:	982ed43a 	srli	r23,r19,16
   87da0:	acebc83a 	sub	r21,r21,r19
   87da4:	9d3fffcc 	andi	r20,r19,65535
   87da8:	002d883a 	mov	r22,zero
   87dac:	a809883a 	mov	r4,r21
   87db0:	b80b883a 	mov	r5,r23
   87db4:	00895d00 	call	895d0 <__udivsi3>
   87db8:	100b883a 	mov	r5,r2
   87dbc:	a009883a 	mov	r4,r20
   87dc0:	00895e00 	call	895e0 <__mulsi3>
   87dc4:	a809883a 	mov	r4,r21
   87dc8:	b80b883a 	mov	r5,r23
   87dcc:	1023883a 	mov	r17,r2
   87dd0:	00895d80 	call	895d8 <__umodsi3>
   87dd4:	1004943a 	slli	r2,r2,16
   87dd8:	8006d43a 	srli	r3,r16,16
   87ddc:	10c4b03a 	or	r2,r2,r3
   87de0:	1440032e 	bgeu	r2,r17,87df0 <__umoddi3+0xe8>
   87de4:	14c5883a 	add	r2,r2,r19
   87de8:	14c00136 	bltu	r2,r19,87df0 <__umoddi3+0xe8>
   87dec:	14415836 	bltu	r2,r17,88350 <__umoddi3+0x648>
   87df0:	1463c83a 	sub	r17,r2,r17
   87df4:	8809883a 	mov	r4,r17
   87df8:	b80b883a 	mov	r5,r23
   87dfc:	00895d00 	call	895d0 <__udivsi3>
   87e00:	a009883a 	mov	r4,r20
   87e04:	00005306 	br	87f54 <__umoddi3+0x24c>
   87e08:	380d883a 	mov	r6,r7
   87e0c:	29c0132e 	bgeu	r5,r7,87e5c <__umoddi3+0x154>
   87e10:	d9000415 	stw	r4,16(sp)
   87e14:	d9400515 	stw	r5,20(sp)
   87e18:	d9400417 	ldw	r5,16(sp)
   87e1c:	5813883a 	mov	r9,r11
   87e20:	2811883a 	mov	r8,r5
   87e24:	4005883a 	mov	r2,r8
   87e28:	4807883a 	mov	r3,r9
   87e2c:	dfc00f17 	ldw	ra,60(sp)
   87e30:	df000e17 	ldw	fp,56(sp)
   87e34:	ddc00d17 	ldw	r23,52(sp)
   87e38:	dd800c17 	ldw	r22,48(sp)
   87e3c:	dd400b17 	ldw	r21,44(sp)
   87e40:	dd000a17 	ldw	r20,40(sp)
   87e44:	dcc00917 	ldw	r19,36(sp)
   87e48:	dc800817 	ldw	r18,32(sp)
   87e4c:	dc400717 	ldw	r17,28(sp)
   87e50:	dc000617 	ldw	r16,24(sp)
   87e54:	dec01004 	addi	sp,sp,64
   87e58:	f800283a 	ret
   87e5c:	00bfffd4 	movui	r2,65535
   87e60:	11c06636 	bltu	r2,r7,87ffc <__umoddi3+0x2f4>
   87e64:	00803fc4 	movi	r2,255
   87e68:	11c12036 	bltu	r2,r7,882ec <__umoddi3+0x5e4>
   87e6c:	000b883a 	mov	r5,zero
   87e70:	0005883a 	mov	r2,zero
   87e74:	3084d83a 	srl	r2,r6,r2
   87e78:	01000274 	movhi	r4,9
   87e7c:	21320c04 	addi	r4,r4,-14288
   87e80:	01c00804 	movi	r7,32
   87e84:	1105883a 	add	r2,r2,r4
   87e88:	10c00003 	ldbu	r3,0(r2)
   87e8c:	28c7883a 	add	r3,r5,r3
   87e90:	38e5c83a 	sub	r18,r7,r3
   87e94:	9000941e 	bne	r18,zero,880e8 <__umoddi3+0x3e0>
   87e98:	35405e36 	bltu	r6,r21,88014 <__umoddi3+0x30c>
   87e9c:	84c05d2e 	bgeu	r16,r19,88014 <__umoddi3+0x30c>
   87ea0:	8011883a 	mov	r8,r16
   87ea4:	a813883a 	mov	r9,r21
   87ea8:	dc000415 	stw	r16,16(sp)
   87eac:	dd400515 	stw	r21,20(sp)
   87eb0:	003fdc06 	br	87e24 <__umoddi3+0x11c>
   87eb4:	00bfffd4 	movui	r2,65535
   87eb8:	12004a36 	bltu	r2,r8,87fe4 <__umoddi3+0x2dc>
   87ebc:	00803fc4 	movi	r2,255
   87ec0:	12010d36 	bltu	r2,r8,882f8 <__umoddi3+0x5f0>
   87ec4:	000b883a 	mov	r5,zero
   87ec8:	0005883a 	mov	r2,zero
   87ecc:	9884d83a 	srl	r2,r19,r2
   87ed0:	01000274 	movhi	r4,9
   87ed4:	21320c04 	addi	r4,r4,-14288
   87ed8:	01800804 	movi	r6,32
   87edc:	1105883a 	add	r2,r2,r4
   87ee0:	10c00003 	ldbu	r3,0(r2)
   87ee4:	28c7883a 	add	r3,r5,r3
   87ee8:	30c7c83a 	sub	r3,r6,r3
   87eec:	1800dc1e 	bne	r3,zero,88260 <__umoddi3+0x558>
   87ef0:	002d883a 	mov	r22,zero
   87ef4:	982ed43a 	srli	r23,r19,16
   87ef8:	a809883a 	mov	r4,r21
   87efc:	9cbfffcc 	andi	r18,r19,65535
   87f00:	b80b883a 	mov	r5,r23
   87f04:	00895d00 	call	895d0 <__udivsi3>
   87f08:	100b883a 	mov	r5,r2
   87f0c:	9009883a 	mov	r4,r18
   87f10:	00895e00 	call	895e0 <__mulsi3>
   87f14:	a809883a 	mov	r4,r21
   87f18:	b80b883a 	mov	r5,r23
   87f1c:	1023883a 	mov	r17,r2
   87f20:	00895d80 	call	895d8 <__umodsi3>
   87f24:	1004943a 	slli	r2,r2,16
   87f28:	8006d43a 	srli	r3,r16,16
   87f2c:	10c4b03a 	or	r2,r2,r3
   87f30:	1440032e 	bgeu	r2,r17,87f40 <__umoddi3+0x238>
   87f34:	14c5883a 	add	r2,r2,r19
   87f38:	14c00136 	bltu	r2,r19,87f40 <__umoddi3+0x238>
   87f3c:	14410236 	bltu	r2,r17,88348 <__umoddi3+0x640>
   87f40:	1463c83a 	sub	r17,r2,r17
   87f44:	8809883a 	mov	r4,r17
   87f48:	b80b883a 	mov	r5,r23
   87f4c:	00895d00 	call	895d0 <__udivsi3>
   87f50:	9009883a 	mov	r4,r18
   87f54:	100b883a 	mov	r5,r2
   87f58:	00895e00 	call	895e0 <__mulsi3>
   87f5c:	8809883a 	mov	r4,r17
   87f60:	b80b883a 	mov	r5,r23
   87f64:	102b883a 	mov	r21,r2
   87f68:	00895d80 	call	895d8 <__umodsi3>
   87f6c:	1004943a 	slli	r2,r2,16
   87f70:	80ffffcc 	andi	r3,r16,65535
   87f74:	10c4b03a 	or	r2,r2,r3
   87f78:	1540042e 	bgeu	r2,r21,87f8c <__umoddi3+0x284>
   87f7c:	14c5883a 	add	r2,r2,r19
   87f80:	14c00236 	bltu	r2,r19,87f8c <__umoddi3+0x284>
   87f84:	1540012e 	bgeu	r2,r21,87f8c <__umoddi3+0x284>
   87f88:	14c5883a 	add	r2,r2,r19
   87f8c:	1545c83a 	sub	r2,r2,r21
   87f90:	1584d83a 	srl	r2,r2,r22
   87f94:	0013883a 	mov	r9,zero
   87f98:	d8800415 	stw	r2,16(sp)
   87f9c:	d8c00417 	ldw	r3,16(sp)
   87fa0:	0005883a 	mov	r2,zero
   87fa4:	d8800515 	stw	r2,20(sp)
   87fa8:	1811883a 	mov	r8,r3
   87fac:	003f9d06 	br	87e24 <__umoddi3+0x11c>
   87fb0:	00804034 	movhi	r2,256
   87fb4:	10bfffc4 	addi	r2,r2,-1
   87fb8:	14c0c636 	bltu	r2,r19,882d4 <__umoddi3+0x5cc>
   87fbc:	01400404 	movi	r5,16
   87fc0:	2805883a 	mov	r2,r5
   87fc4:	003f6c06 	br	87d78 <__umoddi3+0x70>
   87fc8:	01000044 	movi	r4,1
   87fcc:	000b883a 	mov	r5,zero
   87fd0:	00895d00 	call	895d0 <__udivsi3>
   87fd4:	1027883a 	mov	r19,r2
   87fd8:	00bfffd4 	movui	r2,65535
   87fdc:	14fff436 	bltu	r2,r19,87fb0 <__umoddi3+0x2a8>
   87fe0:	003f6106 	br	87d68 <__umoddi3+0x60>
   87fe4:	00804034 	movhi	r2,256
   87fe8:	10bfffc4 	addi	r2,r2,-1
   87fec:	1200c536 	bltu	r2,r8,88304 <__umoddi3+0x5fc>
   87ff0:	01400404 	movi	r5,16
   87ff4:	2805883a 	mov	r2,r5
   87ff8:	003fb406 	br	87ecc <__umoddi3+0x1c4>
   87ffc:	00804034 	movhi	r2,256
   88000:	10bfffc4 	addi	r2,r2,-1
   88004:	11c0c236 	bltu	r2,r7,88310 <__umoddi3+0x608>
   88008:	01400404 	movi	r5,16
   8800c:	2805883a 	mov	r2,r5
   88010:	003f9806 	br	87e74 <__umoddi3+0x16c>
   88014:	84c9c83a 	sub	r4,r16,r19
   88018:	8105803a 	cmpltu	r2,r16,r4
   8801c:	a987c83a 	sub	r3,r21,r6
   88020:	18abc83a 	sub	r21,r3,r2
   88024:	2021883a 	mov	r16,r4
   88028:	003f9d06 	br	87ea0 <__umoddi3+0x198>
   8802c:	9ca6983a 	sll	r19,r19,r18
   88030:	3485c83a 	sub	r2,r6,r18
   88034:	a8a2d83a 	srl	r17,r21,r2
   88038:	982ed43a 	srli	r23,r19,16
   8803c:	ac86983a 	sll	r3,r21,r18
   88040:	8084d83a 	srl	r2,r16,r2
   88044:	8809883a 	mov	r4,r17
   88048:	b80b883a 	mov	r5,r23
   8804c:	18b8b03a 	or	fp,r3,r2
   88050:	9d3fffcc 	andi	r20,r19,65535
   88054:	00895d00 	call	895d0 <__udivsi3>
   88058:	100b883a 	mov	r5,r2
   8805c:	a009883a 	mov	r4,r20
   88060:	00895e00 	call	895e0 <__mulsi3>
   88064:	8809883a 	mov	r4,r17
   88068:	b80b883a 	mov	r5,r23
   8806c:	102b883a 	mov	r21,r2
   88070:	00895d80 	call	895d8 <__umodsi3>
   88074:	1004943a 	slli	r2,r2,16
   88078:	e006d43a 	srli	r3,fp,16
   8807c:	902d883a 	mov	r22,r18
   88080:	10c4b03a 	or	r2,r2,r3
   88084:	1540022e 	bgeu	r2,r21,88090 <__umoddi3+0x388>
   88088:	14c5883a 	add	r2,r2,r19
   8808c:	14c0ab2e 	bgeu	r2,r19,8833c <__umoddi3+0x634>
   88090:	1563c83a 	sub	r17,r2,r21
   88094:	8809883a 	mov	r4,r17
   88098:	b80b883a 	mov	r5,r23
   8809c:	00895d00 	call	895d0 <__udivsi3>
   880a0:	100b883a 	mov	r5,r2
   880a4:	a009883a 	mov	r4,r20
   880a8:	00895e00 	call	895e0 <__mulsi3>
   880ac:	8809883a 	mov	r4,r17
   880b0:	b80b883a 	mov	r5,r23
   880b4:	102b883a 	mov	r21,r2
   880b8:	00895d80 	call	895d8 <__umodsi3>
   880bc:	1004943a 	slli	r2,r2,16
   880c0:	e0ffffcc 	andi	r3,fp,65535
   880c4:	10c4b03a 	or	r2,r2,r3
   880c8:	1540042e 	bgeu	r2,r21,880dc <__umoddi3+0x3d4>
   880cc:	14c5883a 	add	r2,r2,r19
   880d0:	14c00236 	bltu	r2,r19,880dc <__umoddi3+0x3d4>
   880d4:	1540012e 	bgeu	r2,r21,880dc <__umoddi3+0x3d4>
   880d8:	14c5883a 	add	r2,r2,r19
   880dc:	84a0983a 	sll	r16,r16,r18
   880e0:	156bc83a 	sub	r21,r2,r21
   880e4:	003f3106 	br	87dac <__umoddi3+0xa4>
   880e8:	3c8fc83a 	sub	r7,r7,r18
   880ec:	3486983a 	sll	r3,r6,r18
   880f0:	99c4d83a 	srl	r2,r19,r7
   880f4:	a9e2d83a 	srl	r17,r21,r7
   880f8:	ac8c983a 	sll	r6,r21,r18
   880fc:	18acb03a 	or	r22,r3,r2
   88100:	b02ed43a 	srli	r23,r22,16
   88104:	81c4d83a 	srl	r2,r16,r7
   88108:	8809883a 	mov	r4,r17
   8810c:	b80b883a 	mov	r5,r23
   88110:	308cb03a 	or	r6,r6,r2
   88114:	d9c00315 	stw	r7,12(sp)
   88118:	d9800215 	stw	r6,8(sp)
   8811c:	b53fffcc 	andi	r20,r22,65535
   88120:	00895d00 	call	895d0 <__udivsi3>
   88124:	100b883a 	mov	r5,r2
   88128:	a009883a 	mov	r4,r20
   8812c:	1039883a 	mov	fp,r2
   88130:	00895e00 	call	895e0 <__mulsi3>
   88134:	8809883a 	mov	r4,r17
   88138:	b80b883a 	mov	r5,r23
   8813c:	102b883a 	mov	r21,r2
   88140:	00895d80 	call	895d8 <__umodsi3>
   88144:	d9000217 	ldw	r4,8(sp)
   88148:	1004943a 	slli	r2,r2,16
   8814c:	9ca6983a 	sll	r19,r19,r18
   88150:	2006d43a 	srli	r3,r4,16
   88154:	84a0983a 	sll	r16,r16,r18
   88158:	dcc00015 	stw	r19,0(sp)
   8815c:	10c4b03a 	or	r2,r2,r3
   88160:	dc000115 	stw	r16,4(sp)
   88164:	1540032e 	bgeu	r2,r21,88174 <__umoddi3+0x46c>
   88168:	1585883a 	add	r2,r2,r22
   8816c:	e73fffc4 	addi	fp,fp,-1
   88170:	15806e2e 	bgeu	r2,r22,8832c <__umoddi3+0x624>
   88174:	1563c83a 	sub	r17,r2,r21
   88178:	8809883a 	mov	r4,r17
   8817c:	b80b883a 	mov	r5,r23
   88180:	00895d00 	call	895d0 <__udivsi3>
   88184:	100b883a 	mov	r5,r2
   88188:	a009883a 	mov	r4,r20
   8818c:	1021883a 	mov	r16,r2
   88190:	00895e00 	call	895e0 <__mulsi3>
   88194:	b80b883a 	mov	r5,r23
   88198:	8809883a 	mov	r4,r17
   8819c:	1029883a 	mov	r20,r2
   881a0:	00895d80 	call	895d8 <__umodsi3>
   881a4:	d9400217 	ldw	r5,8(sp)
   881a8:	1004943a 	slli	r2,r2,16
   881ac:	28ffffcc 	andi	r3,r5,65535
   881b0:	10c4b03a 	or	r2,r2,r3
   881b4:	1500032e 	bgeu	r2,r20,881c4 <__umoddi3+0x4bc>
   881b8:	1585883a 	add	r2,r2,r22
   881bc:	843fffc4 	addi	r16,r16,-1
   881c0:	1580562e 	bgeu	r2,r22,8831c <__umoddi3+0x614>
   881c4:	d9800017 	ldw	r6,0(sp)
   881c8:	e022943a 	slli	r17,fp,16
   881cc:	302ed43a 	srli	r23,r6,16
   881d0:	8462b03a 	or	r17,r16,r17
   881d4:	34ffffcc 	andi	r19,r6,65535
   881d8:	882ad43a 	srli	r21,r17,16
   881dc:	8c7fffcc 	andi	r17,r17,65535
   881e0:	8809883a 	mov	r4,r17
   881e4:	980b883a 	mov	r5,r19
   881e8:	1521c83a 	sub	r16,r2,r20
   881ec:	00895e00 	call	895e0 <__mulsi3>
   881f0:	8809883a 	mov	r4,r17
   881f4:	b80b883a 	mov	r5,r23
   881f8:	1029883a 	mov	r20,r2
   881fc:	00895e00 	call	895e0 <__mulsi3>
   88200:	980b883a 	mov	r5,r19
   88204:	a809883a 	mov	r4,r21
   88208:	1023883a 	mov	r17,r2
   8820c:	00895e00 	call	895e0 <__mulsi3>
   88210:	a809883a 	mov	r4,r21
   88214:	b80b883a 	mov	r5,r23
   88218:	1027883a 	mov	r19,r2
   8821c:	00895e00 	call	895e0 <__mulsi3>
   88220:	100b883a 	mov	r5,r2
   88224:	a004d43a 	srli	r2,r20,16
   88228:	8ce3883a 	add	r17,r17,r19
   8822c:	1449883a 	add	r4,r2,r17
   88230:	24c0022e 	bgeu	r4,r19,8823c <__umoddi3+0x534>
   88234:	00800074 	movhi	r2,1
   88238:	288b883a 	add	r5,r5,r2
   8823c:	2004d43a 	srli	r2,r4,16
   88240:	2008943a 	slli	r4,r4,16
   88244:	a0ffffcc 	andi	r3,r20,65535
   88248:	288d883a 	add	r6,r5,r2
   8824c:	20c9883a 	add	r4,r4,r3
   88250:	81800b36 	bltu	r16,r6,88280 <__umoddi3+0x578>
   88254:	81804026 	beq	r16,r6,88358 <__umoddi3+0x650>
   88258:	818dc83a 	sub	r6,r16,r6
   8825c:	00000f06 	br	8829c <__umoddi3+0x594>
   88260:	30c5c83a 	sub	r2,r6,r3
   88264:	182d883a 	mov	r22,r3
   88268:	8084d83a 	srl	r2,r16,r2
   8826c:	a8c6983a 	sll	r3,r21,r3
   88270:	9da6983a 	sll	r19,r19,r22
   88274:	85a0983a 	sll	r16,r16,r22
   88278:	18aab03a 	or	r21,r3,r2
   8827c:	003f1d06 	br	87ef4 <__umoddi3+0x1ec>
   88280:	d8c00017 	ldw	r3,0(sp)
   88284:	20c5c83a 	sub	r2,r4,r3
   88288:	2089803a 	cmpltu	r4,r4,r2
   8828c:	3587c83a 	sub	r3,r6,r22
   88290:	1907c83a 	sub	r3,r3,r4
   88294:	80cdc83a 	sub	r6,r16,r3
   88298:	1009883a 	mov	r4,r2
   8829c:	d9400117 	ldw	r5,4(sp)
   882a0:	2905c83a 	sub	r2,r5,r4
   882a4:	2887803a 	cmpltu	r3,r5,r2
   882a8:	30c7c83a 	sub	r3,r6,r3
   882ac:	d9800317 	ldw	r6,12(sp)
   882b0:	1484d83a 	srl	r2,r2,r18
   882b4:	1988983a 	sll	r4,r3,r6
   882b8:	1c86d83a 	srl	r3,r3,r18
   882bc:	2088b03a 	or	r4,r4,r2
   882c0:	2011883a 	mov	r8,r4
   882c4:	1813883a 	mov	r9,r3
   882c8:	d9000415 	stw	r4,16(sp)
   882cc:	d8c00515 	stw	r3,20(sp)
   882d0:	003ed406 	br	87e24 <__umoddi3+0x11c>
   882d4:	01400604 	movi	r5,24
   882d8:	2805883a 	mov	r2,r5
   882dc:	003ea606 	br	87d78 <__umoddi3+0x70>
   882e0:	01400204 	movi	r5,8
   882e4:	2805883a 	mov	r2,r5
   882e8:	003ea306 	br	87d78 <__umoddi3+0x70>
   882ec:	01400204 	movi	r5,8
   882f0:	2805883a 	mov	r2,r5
   882f4:	003edf06 	br	87e74 <__umoddi3+0x16c>
   882f8:	01400204 	movi	r5,8
   882fc:	2805883a 	mov	r2,r5
   88300:	003ef206 	br	87ecc <__umoddi3+0x1c4>
   88304:	01400604 	movi	r5,24
   88308:	2805883a 	mov	r2,r5
   8830c:	003eef06 	br	87ecc <__umoddi3+0x1c4>
   88310:	01400604 	movi	r5,24
   88314:	2805883a 	mov	r2,r5
   88318:	003ed606 	br	87e74 <__umoddi3+0x16c>
   8831c:	153fa92e 	bgeu	r2,r20,881c4 <__umoddi3+0x4bc>
   88320:	843fffc4 	addi	r16,r16,-1
   88324:	1585883a 	add	r2,r2,r22
   88328:	003fa606 	br	881c4 <__umoddi3+0x4bc>
   8832c:	157f912e 	bgeu	r2,r21,88174 <__umoddi3+0x46c>
   88330:	e73fffc4 	addi	fp,fp,-1
   88334:	1585883a 	add	r2,r2,r22
   88338:	003f8e06 	br	88174 <__umoddi3+0x46c>
   8833c:	157f542e 	bgeu	r2,r21,88090 <__umoddi3+0x388>
   88340:	14c5883a 	add	r2,r2,r19
   88344:	003f5206 	br	88090 <__umoddi3+0x388>
   88348:	14c5883a 	add	r2,r2,r19
   8834c:	003efc06 	br	87f40 <__umoddi3+0x238>
   88350:	14c5883a 	add	r2,r2,r19
   88354:	003ea606 	br	87df0 <__umoddi3+0xe8>
   88358:	d8800117 	ldw	r2,4(sp)
   8835c:	113fc836 	bltu	r2,r4,88280 <__umoddi3+0x578>
   88360:	000d883a 	mov	r6,zero
   88364:	003fcd06 	br	8829c <__umoddi3+0x594>

00088368 <_fpadd_parts>:
   88368:	defff804 	addi	sp,sp,-32
   8836c:	dcc00315 	stw	r19,12(sp)
   88370:	2027883a 	mov	r19,r4
   88374:	21000017 	ldw	r4,0(r4)
   88378:	00c00044 	movi	r3,1
   8837c:	dd400515 	stw	r21,20(sp)
   88380:	dd000415 	stw	r20,16(sp)
   88384:	ddc00715 	stw	r23,28(sp)
   88388:	dd800615 	stw	r22,24(sp)
   8838c:	dc800215 	stw	r18,8(sp)
   88390:	dc400115 	stw	r17,4(sp)
   88394:	dc000015 	stw	r16,0(sp)
   88398:	282b883a 	mov	r21,r5
   8839c:	3029883a 	mov	r20,r6
   883a0:	1900632e 	bgeu	r3,r4,88530 <_fpadd_parts+0x1c8>
   883a4:	28800017 	ldw	r2,0(r5)
   883a8:	1880812e 	bgeu	r3,r2,885b0 <_fpadd_parts+0x248>
   883ac:	00c00104 	movi	r3,4
   883b0:	20c0dc26 	beq	r4,r3,88724 <_fpadd_parts+0x3bc>
   883b4:	10c07e26 	beq	r2,r3,885b0 <_fpadd_parts+0x248>
   883b8:	00c00084 	movi	r3,2
   883bc:	10c06726 	beq	r2,r3,8855c <_fpadd_parts+0x1f4>
   883c0:	20c07b26 	beq	r4,r3,885b0 <_fpadd_parts+0x248>
   883c4:	9dc00217 	ldw	r23,8(r19)
   883c8:	28c00217 	ldw	r3,8(r5)
   883cc:	9c400317 	ldw	r17,12(r19)
   883d0:	2bc00317 	ldw	r15,12(r5)
   883d4:	b8cdc83a 	sub	r6,r23,r3
   883d8:	9c800417 	ldw	r18,16(r19)
   883dc:	2c000417 	ldw	r16,16(r5)
   883e0:	3009883a 	mov	r4,r6
   883e4:	30009716 	blt	r6,zero,88644 <_fpadd_parts+0x2dc>
   883e8:	00800fc4 	movi	r2,63
   883ec:	11806b16 	blt	r2,r6,8859c <_fpadd_parts+0x234>
   883f0:	0100a40e 	bge	zero,r4,88684 <_fpadd_parts+0x31c>
   883f4:	35bff804 	addi	r22,r6,-32
   883f8:	b000bc16 	blt	r22,zero,886ec <_fpadd_parts+0x384>
   883fc:	8596d83a 	srl	r11,r16,r22
   88400:	0019883a 	mov	r12,zero
   88404:	0013883a 	mov	r9,zero
   88408:	01000044 	movi	r4,1
   8840c:	0015883a 	mov	r10,zero
   88410:	b000be16 	blt	r22,zero,8870c <_fpadd_parts+0x3a4>
   88414:	2590983a 	sll	r8,r4,r22
   88418:	000f883a 	mov	r7,zero
   8841c:	00bfffc4 	movi	r2,-1
   88420:	3889883a 	add	r4,r7,r2
   88424:	408b883a 	add	r5,r8,r2
   88428:	21cd803a 	cmpltu	r6,r4,r7
   8842c:	314b883a 	add	r5,r6,r5
   88430:	7904703a 	and	r2,r15,r4
   88434:	8146703a 	and	r3,r16,r5
   88438:	10c4b03a 	or	r2,r2,r3
   8843c:	10000226 	beq	r2,zero,88448 <_fpadd_parts+0xe0>
   88440:	02400044 	movi	r9,1
   88444:	0015883a 	mov	r10,zero
   88448:	5a5eb03a 	or	r15,r11,r9
   8844c:	62a0b03a 	or	r16,r12,r10
   88450:	99400117 	ldw	r5,4(r19)
   88454:	a8800117 	ldw	r2,4(r21)
   88458:	28806e26 	beq	r5,r2,88614 <_fpadd_parts+0x2ac>
   8845c:	28006626 	beq	r5,zero,885f8 <_fpadd_parts+0x290>
   88460:	7c45c83a 	sub	r2,r15,r17
   88464:	7889803a 	cmpltu	r4,r15,r2
   88468:	8487c83a 	sub	r3,r16,r18
   8846c:	1909c83a 	sub	r4,r3,r4
   88470:	100d883a 	mov	r6,r2
   88474:	200f883a 	mov	r7,r4
   88478:	38007716 	blt	r7,zero,88658 <_fpadd_parts+0x2f0>
   8847c:	a5c00215 	stw	r23,8(r20)
   88480:	a1c00415 	stw	r7,16(r20)
   88484:	a0000115 	stw	zero,4(r20)
   88488:	a1800315 	stw	r6,12(r20)
   8848c:	a2000317 	ldw	r8,12(r20)
   88490:	a2400417 	ldw	r9,16(r20)
   88494:	00bfffc4 	movi	r2,-1
   88498:	408b883a 	add	r5,r8,r2
   8849c:	2a09803a 	cmpltu	r4,r5,r8
   884a0:	488d883a 	add	r6,r9,r2
   884a4:	01c40034 	movhi	r7,4096
   884a8:	39ffffc4 	addi	r7,r7,-1
   884ac:	218d883a 	add	r6,r4,r6
   884b0:	39801736 	bltu	r7,r6,88510 <_fpadd_parts+0x1a8>
   884b4:	31c06526 	beq	r6,r7,8864c <_fpadd_parts+0x2e4>
   884b8:	a3000217 	ldw	r12,8(r20)
   884bc:	4209883a 	add	r4,r8,r8
   884c0:	00bfffc4 	movi	r2,-1
   884c4:	220f803a 	cmpltu	r7,r4,r8
   884c8:	4a4b883a 	add	r5,r9,r9
   884cc:	394f883a 	add	r7,r7,r5
   884d0:	2095883a 	add	r10,r4,r2
   884d4:	3897883a 	add	r11,r7,r2
   884d8:	510d803a 	cmpltu	r6,r10,r4
   884dc:	6099883a 	add	r12,r12,r2
   884e0:	32d7883a 	add	r11,r6,r11
   884e4:	00840034 	movhi	r2,4096
   884e8:	10bfffc4 	addi	r2,r2,-1
   884ec:	2011883a 	mov	r8,r4
   884f0:	3813883a 	mov	r9,r7
   884f4:	a1000315 	stw	r4,12(r20)
   884f8:	a1c00415 	stw	r7,16(r20)
   884fc:	a3000215 	stw	r12,8(r20)
   88500:	12c00336 	bltu	r2,r11,88510 <_fpadd_parts+0x1a8>
   88504:	58bfed1e 	bne	r11,r2,884bc <_fpadd_parts+0x154>
   88508:	00bfff84 	movi	r2,-2
   8850c:	12bfeb2e 	bgeu	r2,r10,884bc <_fpadd_parts+0x154>
   88510:	a2800417 	ldw	r10,16(r20)
   88514:	008000c4 	movi	r2,3
   88518:	00c80034 	movhi	r3,8192
   8851c:	18ffffc4 	addi	r3,r3,-1
   88520:	a2400317 	ldw	r9,12(r20)
   88524:	a0800015 	stw	r2,0(r20)
   88528:	1a802336 	bltu	r3,r10,885b8 <_fpadd_parts+0x250>
   8852c:	a027883a 	mov	r19,r20
   88530:	9805883a 	mov	r2,r19
   88534:	ddc00717 	ldw	r23,28(sp)
   88538:	dd800617 	ldw	r22,24(sp)
   8853c:	dd400517 	ldw	r21,20(sp)
   88540:	dd000417 	ldw	r20,16(sp)
   88544:	dcc00317 	ldw	r19,12(sp)
   88548:	dc800217 	ldw	r18,8(sp)
   8854c:	dc400117 	ldw	r17,4(sp)
   88550:	dc000017 	ldw	r16,0(sp)
   88554:	dec00804 	addi	sp,sp,32
   88558:	f800283a 	ret
   8855c:	20fff41e 	bne	r4,r3,88530 <_fpadd_parts+0x1c8>
   88560:	31000015 	stw	r4,0(r6)
   88564:	98800117 	ldw	r2,4(r19)
   88568:	30800115 	stw	r2,4(r6)
   8856c:	98c00217 	ldw	r3,8(r19)
   88570:	30c00215 	stw	r3,8(r6)
   88574:	98800317 	ldw	r2,12(r19)
   88578:	30800315 	stw	r2,12(r6)
   8857c:	98c00417 	ldw	r3,16(r19)
   88580:	30c00415 	stw	r3,16(r6)
   88584:	98800117 	ldw	r2,4(r19)
   88588:	28c00117 	ldw	r3,4(r5)
   8858c:	3027883a 	mov	r19,r6
   88590:	10c4703a 	and	r2,r2,r3
   88594:	30800115 	stw	r2,4(r6)
   88598:	003fe506 	br	88530 <_fpadd_parts+0x1c8>
   8859c:	1dc02616 	blt	r3,r23,88638 <_fpadd_parts+0x2d0>
   885a0:	0023883a 	mov	r17,zero
   885a4:	182f883a 	mov	r23,r3
   885a8:	0025883a 	mov	r18,zero
   885ac:	003fa806 	br	88450 <_fpadd_parts+0xe8>
   885b0:	a827883a 	mov	r19,r21
   885b4:	003fde06 	br	88530 <_fpadd_parts+0x1c8>
   885b8:	01800044 	movi	r6,1
   885bc:	500497fa 	slli	r2,r10,31
   885c0:	4808d07a 	srli	r4,r9,1
   885c4:	518ad83a 	srl	r5,r10,r6
   885c8:	a2000217 	ldw	r8,8(r20)
   885cc:	1108b03a 	or	r4,r2,r4
   885d0:	0007883a 	mov	r3,zero
   885d4:	4984703a 	and	r2,r9,r6
   885d8:	208cb03a 	or	r6,r4,r2
   885dc:	28ceb03a 	or	r7,r5,r3
   885e0:	42000044 	addi	r8,r8,1
   885e4:	a027883a 	mov	r19,r20
   885e8:	a1c00415 	stw	r7,16(r20)
   885ec:	a2000215 	stw	r8,8(r20)
   885f0:	a1800315 	stw	r6,12(r20)
   885f4:	003fce06 	br	88530 <_fpadd_parts+0x1c8>
   885f8:	8bc5c83a 	sub	r2,r17,r15
   885fc:	8889803a 	cmpltu	r4,r17,r2
   88600:	9407c83a 	sub	r3,r18,r16
   88604:	1909c83a 	sub	r4,r3,r4
   88608:	100d883a 	mov	r6,r2
   8860c:	200f883a 	mov	r7,r4
   88610:	003f9906 	br	88478 <_fpadd_parts+0x110>
   88614:	7c45883a 	add	r2,r15,r17
   88618:	13c9803a 	cmpltu	r4,r2,r15
   8861c:	8487883a 	add	r3,r16,r18
   88620:	20c9883a 	add	r4,r4,r3
   88624:	a1400115 	stw	r5,4(r20)
   88628:	a5c00215 	stw	r23,8(r20)
   8862c:	a0800315 	stw	r2,12(r20)
   88630:	a1000415 	stw	r4,16(r20)
   88634:	003fb606 	br	88510 <_fpadd_parts+0x1a8>
   88638:	001f883a 	mov	r15,zero
   8863c:	0021883a 	mov	r16,zero
   88640:	003f8306 	br	88450 <_fpadd_parts+0xe8>
   88644:	018dc83a 	sub	r6,zero,r6
   88648:	003f6706 	br	883e8 <_fpadd_parts+0x80>
   8864c:	00bfff84 	movi	r2,-2
   88650:	117faf36 	bltu	r2,r5,88510 <_fpadd_parts+0x1a8>
   88654:	003f9806 	br	884b8 <_fpadd_parts+0x150>
   88658:	0005883a 	mov	r2,zero
   8865c:	1189c83a 	sub	r4,r2,r6
   88660:	1105803a 	cmpltu	r2,r2,r4
   88664:	01cbc83a 	sub	r5,zero,r7
   88668:	2885c83a 	sub	r2,r5,r2
   8866c:	01800044 	movi	r6,1
   88670:	a1800115 	stw	r6,4(r20)
   88674:	a5c00215 	stw	r23,8(r20)
   88678:	a1000315 	stw	r4,12(r20)
   8867c:	a0800415 	stw	r2,16(r20)
   88680:	003f8206 	br	8848c <_fpadd_parts+0x124>
   88684:	203f7226 	beq	r4,zero,88450 <_fpadd_parts+0xe8>
   88688:	35bff804 	addi	r22,r6,-32
   8868c:	b9af883a 	add	r23,r23,r6
   88690:	b0003116 	blt	r22,zero,88758 <_fpadd_parts+0x3f0>
   88694:	959ad83a 	srl	r13,r18,r22
   88698:	001d883a 	mov	r14,zero
   8869c:	000f883a 	mov	r7,zero
   886a0:	01000044 	movi	r4,1
   886a4:	0011883a 	mov	r8,zero
   886a8:	b0002516 	blt	r22,zero,88740 <_fpadd_parts+0x3d8>
   886ac:	2594983a 	sll	r10,r4,r22
   886b0:	0013883a 	mov	r9,zero
   886b4:	00bfffc4 	movi	r2,-1
   886b8:	4889883a 	add	r4,r9,r2
   886bc:	508b883a 	add	r5,r10,r2
   886c0:	224d803a 	cmpltu	r6,r4,r9
   886c4:	314b883a 	add	r5,r6,r5
   886c8:	8904703a 	and	r2,r17,r4
   886cc:	9146703a 	and	r3,r18,r5
   886d0:	10c4b03a 	or	r2,r2,r3
   886d4:	10000226 	beq	r2,zero,886e0 <_fpadd_parts+0x378>
   886d8:	01c00044 	movi	r7,1
   886dc:	0011883a 	mov	r8,zero
   886e0:	69e2b03a 	or	r17,r13,r7
   886e4:	7224b03a 	or	r18,r14,r8
   886e8:	003f5906 	br	88450 <_fpadd_parts+0xe8>
   886ec:	8407883a 	add	r3,r16,r16
   886f0:	008007c4 	movi	r2,31
   886f4:	1185c83a 	sub	r2,r2,r6
   886f8:	1886983a 	sll	r3,r3,r2
   886fc:	7996d83a 	srl	r11,r15,r6
   88700:	8198d83a 	srl	r12,r16,r6
   88704:	1ad6b03a 	or	r11,r3,r11
   88708:	003f3e06 	br	88404 <_fpadd_parts+0x9c>
   8870c:	2006d07a 	srli	r3,r4,1
   88710:	008007c4 	movi	r2,31
   88714:	1185c83a 	sub	r2,r2,r6
   88718:	1890d83a 	srl	r8,r3,r2
   8871c:	218e983a 	sll	r7,r4,r6
   88720:	003f3e06 	br	8841c <_fpadd_parts+0xb4>
   88724:	113f821e 	bne	r2,r4,88530 <_fpadd_parts+0x1c8>
   88728:	28c00117 	ldw	r3,4(r5)
   8872c:	98800117 	ldw	r2,4(r19)
   88730:	10ff7f26 	beq	r2,r3,88530 <_fpadd_parts+0x1c8>
   88734:	04c00274 	movhi	r19,9
   88738:	9cf20704 	addi	r19,r19,-14308
   8873c:	003f7c06 	br	88530 <_fpadd_parts+0x1c8>
   88740:	2006d07a 	srli	r3,r4,1
   88744:	008007c4 	movi	r2,31
   88748:	1185c83a 	sub	r2,r2,r6
   8874c:	1894d83a 	srl	r10,r3,r2
   88750:	2192983a 	sll	r9,r4,r6
   88754:	003fd706 	br	886b4 <_fpadd_parts+0x34c>
   88758:	9487883a 	add	r3,r18,r18
   8875c:	008007c4 	movi	r2,31
   88760:	1185c83a 	sub	r2,r2,r6
   88764:	1886983a 	sll	r3,r3,r2
   88768:	899ad83a 	srl	r13,r17,r6
   8876c:	919cd83a 	srl	r14,r18,r6
   88770:	1b5ab03a 	or	r13,r3,r13
   88774:	003fc906 	br	8869c <_fpadd_parts+0x334>

00088778 <__subdf3>:
   88778:	deffea04 	addi	sp,sp,-88
   8877c:	dcc01415 	stw	r19,80(sp)
   88780:	dcc00404 	addi	r19,sp,16
   88784:	2011883a 	mov	r8,r4
   88788:	2813883a 	mov	r9,r5
   8878c:	dc401315 	stw	r17,76(sp)
   88790:	d809883a 	mov	r4,sp
   88794:	980b883a 	mov	r5,r19
   88798:	dc400904 	addi	r17,sp,36
   8879c:	dfc01515 	stw	ra,84(sp)
   887a0:	da400115 	stw	r9,4(sp)
   887a4:	d9c00315 	stw	r7,12(sp)
   887a8:	da000015 	stw	r8,0(sp)
   887ac:	d9800215 	stw	r6,8(sp)
   887b0:	0089ad00 	call	89ad0 <__unpack_d>
   887b4:	d9000204 	addi	r4,sp,8
   887b8:	880b883a 	mov	r5,r17
   887bc:	0089ad00 	call	89ad0 <__unpack_d>
   887c0:	d8800a17 	ldw	r2,40(sp)
   887c4:	880b883a 	mov	r5,r17
   887c8:	9809883a 	mov	r4,r19
   887cc:	d9800e04 	addi	r6,sp,56
   887d0:	1080005c 	xori	r2,r2,1
   887d4:	d8800a15 	stw	r2,40(sp)
   887d8:	00883680 	call	88368 <_fpadd_parts>
   887dc:	1009883a 	mov	r4,r2
   887e0:	00897bc0 	call	897bc <__pack_d>
   887e4:	dfc01517 	ldw	ra,84(sp)
   887e8:	dcc01417 	ldw	r19,80(sp)
   887ec:	dc401317 	ldw	r17,76(sp)
   887f0:	dec01604 	addi	sp,sp,88
   887f4:	f800283a 	ret

000887f8 <__adddf3>:
   887f8:	deffea04 	addi	sp,sp,-88
   887fc:	dcc01415 	stw	r19,80(sp)
   88800:	dcc00404 	addi	r19,sp,16
   88804:	2011883a 	mov	r8,r4
   88808:	2813883a 	mov	r9,r5
   8880c:	dc401315 	stw	r17,76(sp)
   88810:	d809883a 	mov	r4,sp
   88814:	980b883a 	mov	r5,r19
   88818:	dc400904 	addi	r17,sp,36
   8881c:	dfc01515 	stw	ra,84(sp)
   88820:	da400115 	stw	r9,4(sp)
   88824:	d9c00315 	stw	r7,12(sp)
   88828:	da000015 	stw	r8,0(sp)
   8882c:	d9800215 	stw	r6,8(sp)
   88830:	0089ad00 	call	89ad0 <__unpack_d>
   88834:	d9000204 	addi	r4,sp,8
   88838:	880b883a 	mov	r5,r17
   8883c:	0089ad00 	call	89ad0 <__unpack_d>
   88840:	d9800e04 	addi	r6,sp,56
   88844:	9809883a 	mov	r4,r19
   88848:	880b883a 	mov	r5,r17
   8884c:	00883680 	call	88368 <_fpadd_parts>
   88850:	1009883a 	mov	r4,r2
   88854:	00897bc0 	call	897bc <__pack_d>
   88858:	dfc01517 	ldw	ra,84(sp)
   8885c:	dcc01417 	ldw	r19,80(sp)
   88860:	dc401317 	ldw	r17,76(sp)
   88864:	dec01604 	addi	sp,sp,88
   88868:	f800283a 	ret

0008886c <__muldf3>:
   8886c:	deffe004 	addi	sp,sp,-128
   88870:	dc401815 	stw	r17,96(sp)
   88874:	dc400404 	addi	r17,sp,16
   88878:	2011883a 	mov	r8,r4
   8887c:	2813883a 	mov	r9,r5
   88880:	dc001715 	stw	r16,92(sp)
   88884:	d809883a 	mov	r4,sp
   88888:	880b883a 	mov	r5,r17
   8888c:	dc000904 	addi	r16,sp,36
   88890:	dfc01f15 	stw	ra,124(sp)
   88894:	da400115 	stw	r9,4(sp)
   88898:	d9c00315 	stw	r7,12(sp)
   8889c:	da000015 	stw	r8,0(sp)
   888a0:	d9800215 	stw	r6,8(sp)
   888a4:	ddc01e15 	stw	r23,120(sp)
   888a8:	dd801d15 	stw	r22,116(sp)
   888ac:	dd401c15 	stw	r21,112(sp)
   888b0:	dd001b15 	stw	r20,108(sp)
   888b4:	dcc01a15 	stw	r19,104(sp)
   888b8:	dc801915 	stw	r18,100(sp)
   888bc:	0089ad00 	call	89ad0 <__unpack_d>
   888c0:	d9000204 	addi	r4,sp,8
   888c4:	800b883a 	mov	r5,r16
   888c8:	0089ad00 	call	89ad0 <__unpack_d>
   888cc:	d9000417 	ldw	r4,16(sp)
   888d0:	00800044 	movi	r2,1
   888d4:	1100102e 	bgeu	r2,r4,88918 <__muldf3+0xac>
   888d8:	d8c00917 	ldw	r3,36(sp)
   888dc:	10c0062e 	bgeu	r2,r3,888f8 <__muldf3+0x8c>
   888e0:	00800104 	movi	r2,4
   888e4:	20800a26 	beq	r4,r2,88910 <__muldf3+0xa4>
   888e8:	1880cc26 	beq	r3,r2,88c1c <__muldf3+0x3b0>
   888ec:	00800084 	movi	r2,2
   888f0:	20800926 	beq	r4,r2,88918 <__muldf3+0xac>
   888f4:	1880191e 	bne	r3,r2,8895c <__muldf3+0xf0>
   888f8:	d8c00a17 	ldw	r3,40(sp)
   888fc:	d8800517 	ldw	r2,20(sp)
   88900:	8009883a 	mov	r4,r16
   88904:	10c4c03a 	cmpne	r2,r2,r3
   88908:	d8800a15 	stw	r2,40(sp)
   8890c:	00000706 	br	8892c <__muldf3+0xc0>
   88910:	00800084 	movi	r2,2
   88914:	1880c326 	beq	r3,r2,88c24 <__muldf3+0x3b8>
   88918:	d8800517 	ldw	r2,20(sp)
   8891c:	d8c00a17 	ldw	r3,40(sp)
   88920:	8809883a 	mov	r4,r17
   88924:	10c4c03a 	cmpne	r2,r2,r3
   88928:	d8800515 	stw	r2,20(sp)
   8892c:	00897bc0 	call	897bc <__pack_d>
   88930:	dfc01f17 	ldw	ra,124(sp)
   88934:	ddc01e17 	ldw	r23,120(sp)
   88938:	dd801d17 	ldw	r22,116(sp)
   8893c:	dd401c17 	ldw	r21,112(sp)
   88940:	dd001b17 	ldw	r20,108(sp)
   88944:	dcc01a17 	ldw	r19,104(sp)
   88948:	dc801917 	ldw	r18,100(sp)
   8894c:	dc401817 	ldw	r17,96(sp)
   88950:	dc001717 	ldw	r16,92(sp)
   88954:	dec02004 	addi	sp,sp,128
   88958:	f800283a 	ret
   8895c:	dd800717 	ldw	r22,28(sp)
   88960:	dc800c17 	ldw	r18,48(sp)
   88964:	002b883a 	mov	r21,zero
   88968:	0023883a 	mov	r17,zero
   8896c:	a80b883a 	mov	r5,r21
   88970:	b00d883a 	mov	r6,r22
   88974:	880f883a 	mov	r7,r17
   88978:	ddc00817 	ldw	r23,32(sp)
   8897c:	dcc00d17 	ldw	r19,52(sp)
   88980:	9009883a 	mov	r4,r18
   88984:	00896180 	call	89618 <__muldi3>
   88988:	001b883a 	mov	r13,zero
   8898c:	680f883a 	mov	r7,r13
   88990:	b009883a 	mov	r4,r22
   88994:	000b883a 	mov	r5,zero
   88998:	980d883a 	mov	r6,r19
   8899c:	b82d883a 	mov	r22,r23
   889a0:	002f883a 	mov	r23,zero
   889a4:	db401615 	stw	r13,88(sp)
   889a8:	d8801315 	stw	r2,76(sp)
   889ac:	d8c01415 	stw	r3,80(sp)
   889b0:	dcc01515 	stw	r19,84(sp)
   889b4:	00896180 	call	89618 <__muldi3>
   889b8:	b00d883a 	mov	r6,r22
   889bc:	000b883a 	mov	r5,zero
   889c0:	9009883a 	mov	r4,r18
   889c4:	b80f883a 	mov	r7,r23
   889c8:	1021883a 	mov	r16,r2
   889cc:	1823883a 	mov	r17,r3
   889d0:	00896180 	call	89618 <__muldi3>
   889d4:	8085883a 	add	r2,r16,r2
   889d8:	140d803a 	cmpltu	r6,r2,r16
   889dc:	88c7883a 	add	r3,r17,r3
   889e0:	30cd883a 	add	r6,r6,r3
   889e4:	1029883a 	mov	r20,r2
   889e8:	302b883a 	mov	r21,r6
   889ec:	da801317 	ldw	r10,76(sp)
   889f0:	dac01417 	ldw	r11,80(sp)
   889f4:	db001517 	ldw	r12,84(sp)
   889f8:	db401617 	ldw	r13,88(sp)
   889fc:	3440612e 	bgeu	r6,r17,88b84 <__muldf3+0x318>
   88a00:	0009883a 	mov	r4,zero
   88a04:	5105883a 	add	r2,r10,r4
   88a08:	128d803a 	cmpltu	r6,r2,r10
   88a0c:	5d07883a 	add	r3,r11,r20
   88a10:	30cd883a 	add	r6,r6,r3
   88a14:	0021883a 	mov	r16,zero
   88a18:	04400044 	movi	r17,1
   88a1c:	1025883a 	mov	r18,r2
   88a20:	3027883a 	mov	r19,r6
   88a24:	32c06236 	bltu	r6,r11,88bb0 <__muldf3+0x344>
   88a28:	59807a26 	beq	r11,r6,88c14 <__muldf3+0x3a8>
   88a2c:	680b883a 	mov	r5,r13
   88a30:	b80f883a 	mov	r7,r23
   88a34:	6009883a 	mov	r4,r12
   88a38:	b00d883a 	mov	r6,r22
   88a3c:	00896180 	call	89618 <__muldi3>
   88a40:	1009883a 	mov	r4,r2
   88a44:	000f883a 	mov	r7,zero
   88a48:	1545883a 	add	r2,r2,r21
   88a4c:	1111803a 	cmpltu	r8,r2,r4
   88a50:	19c7883a 	add	r3,r3,r7
   88a54:	40c7883a 	add	r3,r8,r3
   88a58:	88cb883a 	add	r5,r17,r3
   88a5c:	d8c00617 	ldw	r3,24(sp)
   88a60:	8089883a 	add	r4,r16,r2
   88a64:	d8800b17 	ldw	r2,44(sp)
   88a68:	18c00104 	addi	r3,r3,4
   88a6c:	240d803a 	cmpltu	r6,r4,r16
   88a70:	10c7883a 	add	r3,r2,r3
   88a74:	2013883a 	mov	r9,r4
   88a78:	d8800a17 	ldw	r2,40(sp)
   88a7c:	d9000517 	ldw	r4,20(sp)
   88a80:	314d883a 	add	r6,r6,r5
   88a84:	3015883a 	mov	r10,r6
   88a88:	2088c03a 	cmpne	r4,r4,r2
   88a8c:	00880034 	movhi	r2,8192
   88a90:	10bfffc4 	addi	r2,r2,-1
   88a94:	d9000f15 	stw	r4,60(sp)
   88a98:	d8c01015 	stw	r3,64(sp)
   88a9c:	1180162e 	bgeu	r2,r6,88af8 <__muldf3+0x28c>
   88aa0:	1811883a 	mov	r8,r3
   88aa4:	101f883a 	mov	r15,r2
   88aa8:	980497fa 	slli	r2,r19,31
   88aac:	9016d07a 	srli	r11,r18,1
   88ab0:	500697fa 	slli	r3,r10,31
   88ab4:	480cd07a 	srli	r6,r9,1
   88ab8:	500ed07a 	srli	r7,r10,1
   88abc:	12d6b03a 	or	r11,r2,r11
   88ac0:	00800044 	movi	r2,1
   88ac4:	198cb03a 	or	r6,r3,r6
   88ac8:	4888703a 	and	r4,r9,r2
   88acc:	9818d07a 	srli	r12,r19,1
   88ad0:	001b883a 	mov	r13,zero
   88ad4:	03a00034 	movhi	r14,32768
   88ad8:	3013883a 	mov	r9,r6
   88adc:	3815883a 	mov	r10,r7
   88ae0:	4091883a 	add	r8,r8,r2
   88ae4:	20000226 	beq	r4,zero,88af0 <__muldf3+0x284>
   88ae8:	5b64b03a 	or	r18,r11,r13
   88aec:	63a6b03a 	or	r19,r12,r14
   88af0:	7abfed36 	bltu	r15,r10,88aa8 <__muldf3+0x23c>
   88af4:	da001015 	stw	r8,64(sp)
   88af8:	00840034 	movhi	r2,4096
   88afc:	10bfffc4 	addi	r2,r2,-1
   88b00:	12801436 	bltu	r2,r10,88b54 <__muldf3+0x2e8>
   88b04:	da001017 	ldw	r8,64(sp)
   88b08:	101f883a 	mov	r15,r2
   88b0c:	4a45883a 	add	r2,r9,r9
   88b10:	124d803a 	cmpltu	r6,r2,r9
   88b14:	5287883a 	add	r3,r10,r10
   88b18:	9497883a 	add	r11,r18,r18
   88b1c:	5c8f803a 	cmpltu	r7,r11,r18
   88b20:	9cd9883a 	add	r12,r19,r19
   88b24:	01000044 	movi	r4,1
   88b28:	30cd883a 	add	r6,r6,r3
   88b2c:	3b0f883a 	add	r7,r7,r12
   88b30:	423fffc4 	addi	r8,r8,-1
   88b34:	1013883a 	mov	r9,r2
   88b38:	3015883a 	mov	r10,r6
   88b3c:	111ab03a 	or	r13,r2,r4
   88b40:	98003016 	blt	r19,zero,88c04 <__muldf3+0x398>
   88b44:	5825883a 	mov	r18,r11
   88b48:	3827883a 	mov	r19,r7
   88b4c:	7abfef2e 	bgeu	r15,r10,88b0c <__muldf3+0x2a0>
   88b50:	da001015 	stw	r8,64(sp)
   88b54:	00803fc4 	movi	r2,255
   88b58:	488e703a 	and	r7,r9,r2
   88b5c:	00802004 	movi	r2,128
   88b60:	0007883a 	mov	r3,zero
   88b64:	0011883a 	mov	r8,zero
   88b68:	38801826 	beq	r7,r2,88bcc <__muldf3+0x360>
   88b6c:	008000c4 	movi	r2,3
   88b70:	d9000e04 	addi	r4,sp,56
   88b74:	da801215 	stw	r10,72(sp)
   88b78:	d8800e15 	stw	r2,56(sp)
   88b7c:	da401115 	stw	r9,68(sp)
   88b80:	003f6a06 	br	8892c <__muldf3+0xc0>
   88b84:	89802126 	beq	r17,r6,88c0c <__muldf3+0x3a0>
   88b88:	0009883a 	mov	r4,zero
   88b8c:	5105883a 	add	r2,r10,r4
   88b90:	128d803a 	cmpltu	r6,r2,r10
   88b94:	5d07883a 	add	r3,r11,r20
   88b98:	30cd883a 	add	r6,r6,r3
   88b9c:	0021883a 	mov	r16,zero
   88ba0:	0023883a 	mov	r17,zero
   88ba4:	1025883a 	mov	r18,r2
   88ba8:	3027883a 	mov	r19,r6
   88bac:	32ff9e2e 	bgeu	r6,r11,88a28 <__muldf3+0x1bc>
   88bb0:	00800044 	movi	r2,1
   88bb4:	8089883a 	add	r4,r16,r2
   88bb8:	240d803a 	cmpltu	r6,r4,r16
   88bbc:	344d883a 	add	r6,r6,r17
   88bc0:	2021883a 	mov	r16,r4
   88bc4:	3023883a 	mov	r17,r6
   88bc8:	003f9806 	br	88a2c <__muldf3+0x1c0>
   88bcc:	403fe71e 	bne	r8,zero,88b6c <__muldf3+0x300>
   88bd0:	01004004 	movi	r4,256
   88bd4:	4904703a 	and	r2,r9,r4
   88bd8:	10c4b03a 	or	r2,r2,r3
   88bdc:	103fe31e 	bne	r2,zero,88b6c <__muldf3+0x300>
   88be0:	94c4b03a 	or	r2,r18,r19
   88be4:	103fe126 	beq	r2,zero,88b6c <__muldf3+0x300>
   88be8:	49c5883a 	add	r2,r9,r7
   88bec:	1251803a 	cmpltu	r8,r2,r9
   88bf0:	4291883a 	add	r8,r8,r10
   88bf4:	013fc004 	movi	r4,-256
   88bf8:	1112703a 	and	r9,r2,r4
   88bfc:	4015883a 	mov	r10,r8
   88c00:	003fda06 	br	88b6c <__muldf3+0x300>
   88c04:	6813883a 	mov	r9,r13
   88c08:	003fce06 	br	88b44 <__muldf3+0x2d8>
   88c0c:	143f7c36 	bltu	r2,r16,88a00 <__muldf3+0x194>
   88c10:	003fdd06 	br	88b88 <__muldf3+0x31c>
   88c14:	12bf852e 	bgeu	r2,r10,88a2c <__muldf3+0x1c0>
   88c18:	003fe506 	br	88bb0 <__muldf3+0x344>
   88c1c:	00800084 	movi	r2,2
   88c20:	20bf351e 	bne	r4,r2,888f8 <__muldf3+0x8c>
   88c24:	01000274 	movhi	r4,9
   88c28:	21320704 	addi	r4,r4,-14308
   88c2c:	003f3f06 	br	8892c <__muldf3+0xc0>

00088c30 <__divdf3>:
   88c30:	deffed04 	addi	sp,sp,-76
   88c34:	dcc01115 	stw	r19,68(sp)
   88c38:	dcc00404 	addi	r19,sp,16
   88c3c:	2011883a 	mov	r8,r4
   88c40:	2813883a 	mov	r9,r5
   88c44:	dc000e15 	stw	r16,56(sp)
   88c48:	d809883a 	mov	r4,sp
   88c4c:	980b883a 	mov	r5,r19
   88c50:	dc000904 	addi	r16,sp,36
   88c54:	dfc01215 	stw	ra,72(sp)
   88c58:	da400115 	stw	r9,4(sp)
   88c5c:	d9c00315 	stw	r7,12(sp)
   88c60:	da000015 	stw	r8,0(sp)
   88c64:	d9800215 	stw	r6,8(sp)
   88c68:	dc801015 	stw	r18,64(sp)
   88c6c:	dc400f15 	stw	r17,60(sp)
   88c70:	0089ad00 	call	89ad0 <__unpack_d>
   88c74:	d9000204 	addi	r4,sp,8
   88c78:	800b883a 	mov	r5,r16
   88c7c:	0089ad00 	call	89ad0 <__unpack_d>
   88c80:	d9000417 	ldw	r4,16(sp)
   88c84:	00800044 	movi	r2,1
   88c88:	11000b2e 	bgeu	r2,r4,88cb8 <__divdf3+0x88>
   88c8c:	d9400917 	ldw	r5,36(sp)
   88c90:	1140762e 	bgeu	r2,r5,88e6c <__divdf3+0x23c>
   88c94:	d8800517 	ldw	r2,20(sp)
   88c98:	d8c00a17 	ldw	r3,40(sp)
   88c9c:	01800104 	movi	r6,4
   88ca0:	10c4f03a 	xor	r2,r2,r3
   88ca4:	d8800515 	stw	r2,20(sp)
   88ca8:	21800226 	beq	r4,r6,88cb4 <__divdf3+0x84>
   88cac:	00800084 	movi	r2,2
   88cb0:	2080141e 	bne	r4,r2,88d04 <__divdf3+0xd4>
   88cb4:	29000926 	beq	r5,r4,88cdc <__divdf3+0xac>
   88cb8:	9809883a 	mov	r4,r19
   88cbc:	00897bc0 	call	897bc <__pack_d>
   88cc0:	dfc01217 	ldw	ra,72(sp)
   88cc4:	dcc01117 	ldw	r19,68(sp)
   88cc8:	dc801017 	ldw	r18,64(sp)
   88ccc:	dc400f17 	ldw	r17,60(sp)
   88cd0:	dc000e17 	ldw	r16,56(sp)
   88cd4:	dec01304 	addi	sp,sp,76
   88cd8:	f800283a 	ret
   88cdc:	01000274 	movhi	r4,9
   88ce0:	21320704 	addi	r4,r4,-14308
   88ce4:	00897bc0 	call	897bc <__pack_d>
   88ce8:	dfc01217 	ldw	ra,72(sp)
   88cec:	dcc01117 	ldw	r19,68(sp)
   88cf0:	dc801017 	ldw	r18,64(sp)
   88cf4:	dc400f17 	ldw	r17,60(sp)
   88cf8:	dc000e17 	ldw	r16,56(sp)
   88cfc:	dec01304 	addi	sp,sp,76
   88d00:	f800283a 	ret
   88d04:	29805b26 	beq	r5,r6,88e74 <__divdf3+0x244>
   88d08:	28802d26 	beq	r5,r2,88dc0 <__divdf3+0x190>
   88d0c:	d8c00617 	ldw	r3,24(sp)
   88d10:	d8800b17 	ldw	r2,44(sp)
   88d14:	d9c00817 	ldw	r7,32(sp)
   88d18:	dc400d17 	ldw	r17,52(sp)
   88d1c:	188bc83a 	sub	r5,r3,r2
   88d20:	d9800717 	ldw	r6,28(sp)
   88d24:	dc000c17 	ldw	r16,48(sp)
   88d28:	d9400615 	stw	r5,24(sp)
   88d2c:	3c403836 	bltu	r7,r17,88e10 <__divdf3+0x1e0>
   88d30:	89c03626 	beq	r17,r7,88e0c <__divdf3+0x1dc>
   88d34:	0015883a 	mov	r10,zero
   88d38:	001d883a 	mov	r14,zero
   88d3c:	02c40034 	movhi	r11,4096
   88d40:	001f883a 	mov	r15,zero
   88d44:	003f883a 	mov	ra,zero
   88d48:	04800f44 	movi	r18,61
   88d4c:	00000f06 	br	88d8c <__divdf3+0x15c>
   88d50:	601d883a 	mov	r14,r12
   88d54:	681f883a 	mov	r15,r13
   88d58:	400d883a 	mov	r6,r8
   88d5c:	100f883a 	mov	r7,r2
   88d60:	3191883a 	add	r8,r6,r6
   88d64:	5808d07a 	srli	r4,r11,1
   88d68:	4185803a 	cmpltu	r2,r8,r6
   88d6c:	39d3883a 	add	r9,r7,r7
   88d70:	28c6b03a 	or	r3,r5,r3
   88d74:	1245883a 	add	r2,r2,r9
   88d78:	1815883a 	mov	r10,r3
   88d7c:	2017883a 	mov	r11,r4
   88d80:	400d883a 	mov	r6,r8
   88d84:	100f883a 	mov	r7,r2
   88d88:	fc801726 	beq	ra,r18,88de8 <__divdf3+0x1b8>
   88d8c:	580a97fa 	slli	r5,r11,31
   88d90:	5006d07a 	srli	r3,r10,1
   88d94:	ffc00044 	addi	ra,ra,1
   88d98:	3c7ff136 	bltu	r7,r17,88d60 <__divdf3+0x130>
   88d9c:	3411c83a 	sub	r8,r6,r16
   88da0:	3205803a 	cmpltu	r2,r6,r8
   88da4:	3c53c83a 	sub	r9,r7,r17
   88da8:	7298b03a 	or	r12,r14,r10
   88dac:	7adab03a 	or	r13,r15,r11
   88db0:	4885c83a 	sub	r2,r9,r2
   88db4:	89ffe61e 	bne	r17,r7,88d50 <__divdf3+0x120>
   88db8:	343fe936 	bltu	r6,r16,88d60 <__divdf3+0x130>
   88dbc:	003fe406 	br	88d50 <__divdf3+0x120>
   88dc0:	9809883a 	mov	r4,r19
   88dc4:	d9800415 	stw	r6,16(sp)
   88dc8:	00897bc0 	call	897bc <__pack_d>
   88dcc:	dfc01217 	ldw	ra,72(sp)
   88dd0:	dcc01117 	ldw	r19,68(sp)
   88dd4:	dc801017 	ldw	r18,64(sp)
   88dd8:	dc400f17 	ldw	r17,60(sp)
   88ddc:	dc000e17 	ldw	r16,56(sp)
   88de0:	dec01304 	addi	sp,sp,76
   88de4:	f800283a 	ret
   88de8:	00803fc4 	movi	r2,255
   88dec:	7090703a 	and	r8,r14,r2
   88df0:	00802004 	movi	r2,128
   88df4:	0007883a 	mov	r3,zero
   88df8:	0013883a 	mov	r9,zero
   88dfc:	40800d26 	beq	r8,r2,88e34 <__divdf3+0x204>
   88e00:	dbc00815 	stw	r15,32(sp)
   88e04:	db800715 	stw	r14,28(sp)
   88e08:	003fab06 	br	88cb8 <__divdf3+0x88>
   88e0c:	343fc92e 	bgeu	r6,r16,88d34 <__divdf3+0x104>
   88e10:	3185883a 	add	r2,r6,r6
   88e14:	1189803a 	cmpltu	r4,r2,r6
   88e18:	39c7883a 	add	r3,r7,r7
   88e1c:	20c9883a 	add	r4,r4,r3
   88e20:	297fffc4 	addi	r5,r5,-1
   88e24:	100d883a 	mov	r6,r2
   88e28:	200f883a 	mov	r7,r4
   88e2c:	d9400615 	stw	r5,24(sp)
   88e30:	003fc006 	br	88d34 <__divdf3+0x104>
   88e34:	483ff21e 	bne	r9,zero,88e00 <__divdf3+0x1d0>
   88e38:	01004004 	movi	r4,256
   88e3c:	7104703a 	and	r2,r14,r4
   88e40:	10c4b03a 	or	r2,r2,r3
   88e44:	103fee1e 	bne	r2,zero,88e00 <__divdf3+0x1d0>
   88e48:	31c4b03a 	or	r2,r6,r7
   88e4c:	103fec26 	beq	r2,zero,88e00 <__divdf3+0x1d0>
   88e50:	7205883a 	add	r2,r14,r8
   88e54:	1391803a 	cmpltu	r8,r2,r14
   88e58:	43d1883a 	add	r8,r8,r15
   88e5c:	013fc004 	movi	r4,-256
   88e60:	111c703a 	and	r14,r2,r4
   88e64:	401f883a 	mov	r15,r8
   88e68:	003fe506 	br	88e00 <__divdf3+0x1d0>
   88e6c:	8009883a 	mov	r4,r16
   88e70:	003f9206 	br	88cbc <__divdf3+0x8c>
   88e74:	9809883a 	mov	r4,r19
   88e78:	d8000715 	stw	zero,28(sp)
   88e7c:	d8000815 	stw	zero,32(sp)
   88e80:	d8000615 	stw	zero,24(sp)
   88e84:	003f8d06 	br	88cbc <__divdf3+0x8c>

00088e88 <__eqdf2>:
   88e88:	deffef04 	addi	sp,sp,-68
   88e8c:	dc400f15 	stw	r17,60(sp)
   88e90:	dc400404 	addi	r17,sp,16
   88e94:	2005883a 	mov	r2,r4
   88e98:	2807883a 	mov	r3,r5
   88e9c:	dc000e15 	stw	r16,56(sp)
   88ea0:	d809883a 	mov	r4,sp
   88ea4:	880b883a 	mov	r5,r17
   88ea8:	dc000904 	addi	r16,sp,36
   88eac:	d8c00115 	stw	r3,4(sp)
   88eb0:	d8800015 	stw	r2,0(sp)
   88eb4:	d9800215 	stw	r6,8(sp)
   88eb8:	dfc01015 	stw	ra,64(sp)
   88ebc:	d9c00315 	stw	r7,12(sp)
   88ec0:	0089ad00 	call	89ad0 <__unpack_d>
   88ec4:	d9000204 	addi	r4,sp,8
   88ec8:	800b883a 	mov	r5,r16
   88ecc:	0089ad00 	call	89ad0 <__unpack_d>
   88ed0:	d8800417 	ldw	r2,16(sp)
   88ed4:	00c00044 	movi	r3,1
   88ed8:	180d883a 	mov	r6,r3
   88edc:	1880062e 	bgeu	r3,r2,88ef8 <__eqdf2+0x70>
   88ee0:	d8800917 	ldw	r2,36(sp)
   88ee4:	8809883a 	mov	r4,r17
   88ee8:	800b883a 	mov	r5,r16
   88eec:	1880022e 	bgeu	r3,r2,88ef8 <__eqdf2+0x70>
   88ef0:	0089c080 	call	89c08 <__fpcmp_parts_d>
   88ef4:	100d883a 	mov	r6,r2
   88ef8:	3005883a 	mov	r2,r6
   88efc:	dfc01017 	ldw	ra,64(sp)
   88f00:	dc400f17 	ldw	r17,60(sp)
   88f04:	dc000e17 	ldw	r16,56(sp)
   88f08:	dec01104 	addi	sp,sp,68
   88f0c:	f800283a 	ret

00088f10 <__nedf2>:
   88f10:	deffef04 	addi	sp,sp,-68
   88f14:	dc400f15 	stw	r17,60(sp)
   88f18:	dc400404 	addi	r17,sp,16
   88f1c:	2005883a 	mov	r2,r4
   88f20:	2807883a 	mov	r3,r5
   88f24:	dc000e15 	stw	r16,56(sp)
   88f28:	d809883a 	mov	r4,sp
   88f2c:	880b883a 	mov	r5,r17
   88f30:	dc000904 	addi	r16,sp,36
   88f34:	d8c00115 	stw	r3,4(sp)
   88f38:	d8800015 	stw	r2,0(sp)
   88f3c:	d9800215 	stw	r6,8(sp)
   88f40:	dfc01015 	stw	ra,64(sp)
   88f44:	d9c00315 	stw	r7,12(sp)
   88f48:	0089ad00 	call	89ad0 <__unpack_d>
   88f4c:	d9000204 	addi	r4,sp,8
   88f50:	800b883a 	mov	r5,r16
   88f54:	0089ad00 	call	89ad0 <__unpack_d>
   88f58:	d8800417 	ldw	r2,16(sp)
   88f5c:	00c00044 	movi	r3,1
   88f60:	180d883a 	mov	r6,r3
   88f64:	1880062e 	bgeu	r3,r2,88f80 <__nedf2+0x70>
   88f68:	d8800917 	ldw	r2,36(sp)
   88f6c:	8809883a 	mov	r4,r17
   88f70:	800b883a 	mov	r5,r16
   88f74:	1880022e 	bgeu	r3,r2,88f80 <__nedf2+0x70>
   88f78:	0089c080 	call	89c08 <__fpcmp_parts_d>
   88f7c:	100d883a 	mov	r6,r2
   88f80:	3005883a 	mov	r2,r6
   88f84:	dfc01017 	ldw	ra,64(sp)
   88f88:	dc400f17 	ldw	r17,60(sp)
   88f8c:	dc000e17 	ldw	r16,56(sp)
   88f90:	dec01104 	addi	sp,sp,68
   88f94:	f800283a 	ret

00088f98 <__gtdf2>:
   88f98:	deffef04 	addi	sp,sp,-68
   88f9c:	dc400f15 	stw	r17,60(sp)
   88fa0:	dc400404 	addi	r17,sp,16
   88fa4:	2005883a 	mov	r2,r4
   88fa8:	2807883a 	mov	r3,r5
   88fac:	dc000e15 	stw	r16,56(sp)
   88fb0:	d809883a 	mov	r4,sp
   88fb4:	880b883a 	mov	r5,r17
   88fb8:	dc000904 	addi	r16,sp,36
   88fbc:	d8c00115 	stw	r3,4(sp)
   88fc0:	d8800015 	stw	r2,0(sp)
   88fc4:	d9800215 	stw	r6,8(sp)
   88fc8:	dfc01015 	stw	ra,64(sp)
   88fcc:	d9c00315 	stw	r7,12(sp)
   88fd0:	0089ad00 	call	89ad0 <__unpack_d>
   88fd4:	d9000204 	addi	r4,sp,8
   88fd8:	800b883a 	mov	r5,r16
   88fdc:	0089ad00 	call	89ad0 <__unpack_d>
   88fe0:	d8800417 	ldw	r2,16(sp)
   88fe4:	00c00044 	movi	r3,1
   88fe8:	01bfffc4 	movi	r6,-1
   88fec:	1880062e 	bgeu	r3,r2,89008 <__gtdf2+0x70>
   88ff0:	d8800917 	ldw	r2,36(sp)
   88ff4:	8809883a 	mov	r4,r17
   88ff8:	800b883a 	mov	r5,r16
   88ffc:	1880022e 	bgeu	r3,r2,89008 <__gtdf2+0x70>
   89000:	0089c080 	call	89c08 <__fpcmp_parts_d>
   89004:	100d883a 	mov	r6,r2
   89008:	3005883a 	mov	r2,r6
   8900c:	dfc01017 	ldw	ra,64(sp)
   89010:	dc400f17 	ldw	r17,60(sp)
   89014:	dc000e17 	ldw	r16,56(sp)
   89018:	dec01104 	addi	sp,sp,68
   8901c:	f800283a 	ret

00089020 <__gedf2>:
   89020:	deffef04 	addi	sp,sp,-68
   89024:	dc400f15 	stw	r17,60(sp)
   89028:	dc400404 	addi	r17,sp,16
   8902c:	2005883a 	mov	r2,r4
   89030:	2807883a 	mov	r3,r5
   89034:	dc000e15 	stw	r16,56(sp)
   89038:	d809883a 	mov	r4,sp
   8903c:	880b883a 	mov	r5,r17
   89040:	dc000904 	addi	r16,sp,36
   89044:	d8c00115 	stw	r3,4(sp)
   89048:	d8800015 	stw	r2,0(sp)
   8904c:	d9800215 	stw	r6,8(sp)
   89050:	dfc01015 	stw	ra,64(sp)
   89054:	d9c00315 	stw	r7,12(sp)
   89058:	0089ad00 	call	89ad0 <__unpack_d>
   8905c:	d9000204 	addi	r4,sp,8
   89060:	800b883a 	mov	r5,r16
   89064:	0089ad00 	call	89ad0 <__unpack_d>
   89068:	d8800417 	ldw	r2,16(sp)
   8906c:	00c00044 	movi	r3,1
   89070:	01bfffc4 	movi	r6,-1
   89074:	1880062e 	bgeu	r3,r2,89090 <__gedf2+0x70>
   89078:	d8800917 	ldw	r2,36(sp)
   8907c:	8809883a 	mov	r4,r17
   89080:	800b883a 	mov	r5,r16
   89084:	1880022e 	bgeu	r3,r2,89090 <__gedf2+0x70>
   89088:	0089c080 	call	89c08 <__fpcmp_parts_d>
   8908c:	100d883a 	mov	r6,r2
   89090:	3005883a 	mov	r2,r6
   89094:	dfc01017 	ldw	ra,64(sp)
   89098:	dc400f17 	ldw	r17,60(sp)
   8909c:	dc000e17 	ldw	r16,56(sp)
   890a0:	dec01104 	addi	sp,sp,68
   890a4:	f800283a 	ret

000890a8 <__ltdf2>:
   890a8:	deffef04 	addi	sp,sp,-68
   890ac:	dc400f15 	stw	r17,60(sp)
   890b0:	dc400404 	addi	r17,sp,16
   890b4:	2005883a 	mov	r2,r4
   890b8:	2807883a 	mov	r3,r5
   890bc:	dc000e15 	stw	r16,56(sp)
   890c0:	d809883a 	mov	r4,sp
   890c4:	880b883a 	mov	r5,r17
   890c8:	dc000904 	addi	r16,sp,36
   890cc:	d8c00115 	stw	r3,4(sp)
   890d0:	d8800015 	stw	r2,0(sp)
   890d4:	d9800215 	stw	r6,8(sp)
   890d8:	dfc01015 	stw	ra,64(sp)
   890dc:	d9c00315 	stw	r7,12(sp)
   890e0:	0089ad00 	call	89ad0 <__unpack_d>
   890e4:	d9000204 	addi	r4,sp,8
   890e8:	800b883a 	mov	r5,r16
   890ec:	0089ad00 	call	89ad0 <__unpack_d>
   890f0:	d8800417 	ldw	r2,16(sp)
   890f4:	00c00044 	movi	r3,1
   890f8:	180d883a 	mov	r6,r3
   890fc:	1880062e 	bgeu	r3,r2,89118 <__ltdf2+0x70>
   89100:	d8800917 	ldw	r2,36(sp)
   89104:	8809883a 	mov	r4,r17
   89108:	800b883a 	mov	r5,r16
   8910c:	1880022e 	bgeu	r3,r2,89118 <__ltdf2+0x70>
   89110:	0089c080 	call	89c08 <__fpcmp_parts_d>
   89114:	100d883a 	mov	r6,r2
   89118:	3005883a 	mov	r2,r6
   8911c:	dfc01017 	ldw	ra,64(sp)
   89120:	dc400f17 	ldw	r17,60(sp)
   89124:	dc000e17 	ldw	r16,56(sp)
   89128:	dec01104 	addi	sp,sp,68
   8912c:	f800283a 	ret

00089130 <__floatsidf>:
   89130:	2006d7fa 	srli	r3,r4,31
   89134:	defff604 	addi	sp,sp,-40
   89138:	008000c4 	movi	r2,3
   8913c:	dfc00915 	stw	ra,36(sp)
   89140:	dcc00815 	stw	r19,32(sp)
   89144:	dc800715 	stw	r18,28(sp)
   89148:	dc400615 	stw	r17,24(sp)
   8914c:	dc000515 	stw	r16,20(sp)
   89150:	d8800015 	stw	r2,0(sp)
   89154:	d8c00115 	stw	r3,4(sp)
   89158:	20000f1e 	bne	r4,zero,89198 <__floatsidf+0x68>
   8915c:	00800084 	movi	r2,2
   89160:	d8800015 	stw	r2,0(sp)
   89164:	d809883a 	mov	r4,sp
   89168:	00897bc0 	call	897bc <__pack_d>
   8916c:	1009883a 	mov	r4,r2
   89170:	180b883a 	mov	r5,r3
   89174:	2005883a 	mov	r2,r4
   89178:	2807883a 	mov	r3,r5
   8917c:	dfc00917 	ldw	ra,36(sp)
   89180:	dcc00817 	ldw	r19,32(sp)
   89184:	dc800717 	ldw	r18,28(sp)
   89188:	dc400617 	ldw	r17,24(sp)
   8918c:	dc000517 	ldw	r16,20(sp)
   89190:	dec00a04 	addi	sp,sp,40
   89194:	f800283a 	ret
   89198:	00800f04 	movi	r2,60
   8919c:	1807003a 	cmpeq	r3,r3,zero
   891a0:	d8800215 	stw	r2,8(sp)
   891a4:	18001126 	beq	r3,zero,891ec <__floatsidf+0xbc>
   891a8:	0027883a 	mov	r19,zero
   891ac:	2025883a 	mov	r18,r4
   891b0:	d9000315 	stw	r4,12(sp)
   891b4:	dcc00415 	stw	r19,16(sp)
   891b8:	008973c0 	call	8973c <__clzsi2>
   891bc:	11000744 	addi	r4,r2,29
   891c0:	013fe80e 	bge	zero,r4,89164 <__floatsidf+0x34>
   891c4:	10bfff44 	addi	r2,r2,-3
   891c8:	10000c16 	blt	r2,zero,891fc <__floatsidf+0xcc>
   891cc:	90a2983a 	sll	r17,r18,r2
   891d0:	0021883a 	mov	r16,zero
   891d4:	d8800217 	ldw	r2,8(sp)
   891d8:	dc400415 	stw	r17,16(sp)
   891dc:	dc000315 	stw	r16,12(sp)
   891e0:	1105c83a 	sub	r2,r2,r4
   891e4:	d8800215 	stw	r2,8(sp)
   891e8:	003fde06 	br	89164 <__floatsidf+0x34>
   891ec:	00a00034 	movhi	r2,32768
   891f0:	20800a26 	beq	r4,r2,8921c <__floatsidf+0xec>
   891f4:	0109c83a 	sub	r4,zero,r4
   891f8:	003feb06 	br	891a8 <__floatsidf+0x78>
   891fc:	9006d07a 	srli	r3,r18,1
   89200:	008007c4 	movi	r2,31
   89204:	1105c83a 	sub	r2,r2,r4
   89208:	1886d83a 	srl	r3,r3,r2
   8920c:	9922983a 	sll	r17,r19,r4
   89210:	9120983a 	sll	r16,r18,r4
   89214:	1c62b03a 	or	r17,r3,r17
   89218:	003fee06 	br	891d4 <__floatsidf+0xa4>
   8921c:	0009883a 	mov	r4,zero
   89220:	01707834 	movhi	r5,49632
   89224:	003fd306 	br	89174 <__floatsidf+0x44>

00089228 <__fixdfsi>:
   89228:	defff804 	addi	sp,sp,-32
   8922c:	2005883a 	mov	r2,r4
   89230:	2807883a 	mov	r3,r5
   89234:	d809883a 	mov	r4,sp
   89238:	d9400204 	addi	r5,sp,8
   8923c:	d8c00115 	stw	r3,4(sp)
   89240:	d8800015 	stw	r2,0(sp)
   89244:	dfc00715 	stw	ra,28(sp)
   89248:	0089ad00 	call	89ad0 <__unpack_d>
   8924c:	d8c00217 	ldw	r3,8(sp)
   89250:	00800084 	movi	r2,2
   89254:	1880051e 	bne	r3,r2,8926c <__fixdfsi+0x44>
   89258:	0007883a 	mov	r3,zero
   8925c:	1805883a 	mov	r2,r3
   89260:	dfc00717 	ldw	ra,28(sp)
   89264:	dec00804 	addi	sp,sp,32
   89268:	f800283a 	ret
   8926c:	00800044 	movi	r2,1
   89270:	10fff92e 	bgeu	r2,r3,89258 <__fixdfsi+0x30>
   89274:	00800104 	movi	r2,4
   89278:	18800426 	beq	r3,r2,8928c <__fixdfsi+0x64>
   8927c:	d8c00417 	ldw	r3,16(sp)
   89280:	183ff516 	blt	r3,zero,89258 <__fixdfsi+0x30>
   89284:	00800784 	movi	r2,30
   89288:	10c0080e 	bge	r2,r3,892ac <__fixdfsi+0x84>
   8928c:	d8800317 	ldw	r2,12(sp)
   89290:	1000121e 	bne	r2,zero,892dc <__fixdfsi+0xb4>
   89294:	00e00034 	movhi	r3,32768
   89298:	18ffffc4 	addi	r3,r3,-1
   8929c:	1805883a 	mov	r2,r3
   892a0:	dfc00717 	ldw	ra,28(sp)
   892a4:	dec00804 	addi	sp,sp,32
   892a8:	f800283a 	ret
   892ac:	00800f04 	movi	r2,60
   892b0:	10d1c83a 	sub	r8,r2,r3
   892b4:	40bff804 	addi	r2,r8,-32
   892b8:	d9800517 	ldw	r6,20(sp)
   892bc:	d9c00617 	ldw	r7,24(sp)
   892c0:	10000816 	blt	r2,zero,892e4 <__fixdfsi+0xbc>
   892c4:	3888d83a 	srl	r4,r7,r2
   892c8:	d8800317 	ldw	r2,12(sp)
   892cc:	2007883a 	mov	r3,r4
   892d0:	103fe226 	beq	r2,zero,8925c <__fixdfsi+0x34>
   892d4:	0107c83a 	sub	r3,zero,r4
   892d8:	003fe006 	br	8925c <__fixdfsi+0x34>
   892dc:	00e00034 	movhi	r3,32768
   892e0:	003fde06 	br	8925c <__fixdfsi+0x34>
   892e4:	39c7883a 	add	r3,r7,r7
   892e8:	008007c4 	movi	r2,31
   892ec:	1205c83a 	sub	r2,r2,r8
   892f0:	1886983a 	sll	r3,r3,r2
   892f4:	3208d83a 	srl	r4,r6,r8
   892f8:	1908b03a 	or	r4,r3,r4
   892fc:	003ff206 	br	892c8 <__fixdfsi+0xa0>

00089300 <__floatunsidf>:
   89300:	defff204 	addi	sp,sp,-56
   89304:	dfc00d15 	stw	ra,52(sp)
   89308:	ddc00c15 	stw	r23,48(sp)
   8930c:	dd800b15 	stw	r22,44(sp)
   89310:	dd400a15 	stw	r21,40(sp)
   89314:	dd000915 	stw	r20,36(sp)
   89318:	dcc00815 	stw	r19,32(sp)
   8931c:	dc800715 	stw	r18,28(sp)
   89320:	dc400615 	stw	r17,24(sp)
   89324:	dc000515 	stw	r16,20(sp)
   89328:	d8000115 	stw	zero,4(sp)
   8932c:	20000f1e 	bne	r4,zero,8936c <__floatunsidf+0x6c>
   89330:	00800084 	movi	r2,2
   89334:	d8800015 	stw	r2,0(sp)
   89338:	d809883a 	mov	r4,sp
   8933c:	00897bc0 	call	897bc <__pack_d>
   89340:	dfc00d17 	ldw	ra,52(sp)
   89344:	ddc00c17 	ldw	r23,48(sp)
   89348:	dd800b17 	ldw	r22,44(sp)
   8934c:	dd400a17 	ldw	r21,40(sp)
   89350:	dd000917 	ldw	r20,36(sp)
   89354:	dcc00817 	ldw	r19,32(sp)
   89358:	dc800717 	ldw	r18,28(sp)
   8935c:	dc400617 	ldw	r17,24(sp)
   89360:	dc000517 	ldw	r16,20(sp)
   89364:	dec00e04 	addi	sp,sp,56
   89368:	f800283a 	ret
   8936c:	008000c4 	movi	r2,3
   89370:	00c00f04 	movi	r3,60
   89374:	002f883a 	mov	r23,zero
   89378:	202d883a 	mov	r22,r4
   8937c:	d8800015 	stw	r2,0(sp)
   89380:	d8c00215 	stw	r3,8(sp)
   89384:	d9000315 	stw	r4,12(sp)
   89388:	ddc00415 	stw	r23,16(sp)
   8938c:	008973c0 	call	8973c <__clzsi2>
   89390:	12400744 	addi	r9,r2,29
   89394:	48000b16 	blt	r9,zero,893c4 <__floatunsidf+0xc4>
   89398:	483fe726 	beq	r9,zero,89338 <__floatunsidf+0x38>
   8939c:	10bfff44 	addi	r2,r2,-3
   893a0:	10002e16 	blt	r2,zero,8945c <__floatunsidf+0x15c>
   893a4:	b0a2983a 	sll	r17,r22,r2
   893a8:	0021883a 	mov	r16,zero
   893ac:	d8800217 	ldw	r2,8(sp)
   893b0:	dc400415 	stw	r17,16(sp)
   893b4:	dc000315 	stw	r16,12(sp)
   893b8:	1245c83a 	sub	r2,r2,r9
   893bc:	d8800215 	stw	r2,8(sp)
   893c0:	003fdd06 	br	89338 <__floatunsidf+0x38>
   893c4:	0255c83a 	sub	r10,zero,r9
   893c8:	51bff804 	addi	r6,r10,-32
   893cc:	30001b16 	blt	r6,zero,8943c <__floatunsidf+0x13c>
   893d0:	b9a8d83a 	srl	r20,r23,r6
   893d4:	002b883a 	mov	r21,zero
   893d8:	000f883a 	mov	r7,zero
   893dc:	01000044 	movi	r4,1
   893e0:	0011883a 	mov	r8,zero
   893e4:	30002516 	blt	r6,zero,8947c <__floatunsidf+0x17c>
   893e8:	21a6983a 	sll	r19,r4,r6
   893ec:	0025883a 	mov	r18,zero
   893f0:	00bfffc4 	movi	r2,-1
   893f4:	9089883a 	add	r4,r18,r2
   893f8:	988b883a 	add	r5,r19,r2
   893fc:	248d803a 	cmpltu	r6,r4,r18
   89400:	314b883a 	add	r5,r6,r5
   89404:	b104703a 	and	r2,r22,r4
   89408:	b946703a 	and	r3,r23,r5
   8940c:	10c4b03a 	or	r2,r2,r3
   89410:	10000226 	beq	r2,zero,8941c <__floatunsidf+0x11c>
   89414:	01c00044 	movi	r7,1
   89418:	0011883a 	mov	r8,zero
   8941c:	d9000217 	ldw	r4,8(sp)
   89420:	a1c4b03a 	or	r2,r20,r7
   89424:	aa06b03a 	or	r3,r21,r8
   89428:	2249c83a 	sub	r4,r4,r9
   8942c:	d8c00415 	stw	r3,16(sp)
   89430:	d9000215 	stw	r4,8(sp)
   89434:	d8800315 	stw	r2,12(sp)
   89438:	003fbf06 	br	89338 <__floatunsidf+0x38>
   8943c:	bdc7883a 	add	r3,r23,r23
   89440:	008007c4 	movi	r2,31
   89444:	1285c83a 	sub	r2,r2,r10
   89448:	1886983a 	sll	r3,r3,r2
   8944c:	b2a8d83a 	srl	r20,r22,r10
   89450:	baaad83a 	srl	r21,r23,r10
   89454:	1d28b03a 	or	r20,r3,r20
   89458:	003fdf06 	br	893d8 <__floatunsidf+0xd8>
   8945c:	b006d07a 	srli	r3,r22,1
   89460:	008007c4 	movi	r2,31
   89464:	1245c83a 	sub	r2,r2,r9
   89468:	1886d83a 	srl	r3,r3,r2
   8946c:	ba62983a 	sll	r17,r23,r9
   89470:	b260983a 	sll	r16,r22,r9
   89474:	1c62b03a 	or	r17,r3,r17
   89478:	003fcc06 	br	893ac <__floatunsidf+0xac>
   8947c:	2006d07a 	srli	r3,r4,1
   89480:	008007c4 	movi	r2,31
   89484:	1285c83a 	sub	r2,r2,r10
   89488:	18a6d83a 	srl	r19,r3,r2
   8948c:	22a4983a 	sll	r18,r4,r10
   89490:	003fd706 	br	893f0 <__floatunsidf+0xf0>

00089494 <udivmodsi4>:
   89494:	29001b2e 	bgeu	r5,r4,89504 <udivmodsi4+0x70>
   89498:	28001a16 	blt	r5,zero,89504 <udivmodsi4+0x70>
   8949c:	00800044 	movi	r2,1
   894a0:	0007883a 	mov	r3,zero
   894a4:	01c007c4 	movi	r7,31
   894a8:	00000306 	br	894b8 <udivmodsi4+0x24>
   894ac:	19c01326 	beq	r3,r7,894fc <udivmodsi4+0x68>
   894b0:	18c00044 	addi	r3,r3,1
   894b4:	28000416 	blt	r5,zero,894c8 <udivmodsi4+0x34>
   894b8:	294b883a 	add	r5,r5,r5
   894bc:	1085883a 	add	r2,r2,r2
   894c0:	293ffa36 	bltu	r5,r4,894ac <udivmodsi4+0x18>
   894c4:	10000d26 	beq	r2,zero,894fc <udivmodsi4+0x68>
   894c8:	0007883a 	mov	r3,zero
   894cc:	21400236 	bltu	r4,r5,894d8 <udivmodsi4+0x44>
   894d0:	2149c83a 	sub	r4,r4,r5
   894d4:	1886b03a 	or	r3,r3,r2
   894d8:	1004d07a 	srli	r2,r2,1
   894dc:	280ad07a 	srli	r5,r5,1
   894e0:	103ffa1e 	bne	r2,zero,894cc <udivmodsi4+0x38>
   894e4:	30000226 	beq	r6,zero,894f0 <udivmodsi4+0x5c>
   894e8:	2005883a 	mov	r2,r4
   894ec:	f800283a 	ret
   894f0:	1809883a 	mov	r4,r3
   894f4:	2005883a 	mov	r2,r4
   894f8:	f800283a 	ret
   894fc:	0007883a 	mov	r3,zero
   89500:	003ff806 	br	894e4 <udivmodsi4+0x50>
   89504:	00800044 	movi	r2,1
   89508:	0007883a 	mov	r3,zero
   8950c:	003fef06 	br	894cc <udivmodsi4+0x38>

00089510 <__divsi3>:
   89510:	defffe04 	addi	sp,sp,-8
   89514:	dc000015 	stw	r16,0(sp)
   89518:	dfc00115 	stw	ra,4(sp)
   8951c:	0021883a 	mov	r16,zero
   89520:	20000c16 	blt	r4,zero,89554 <__divsi3+0x44>
   89524:	000d883a 	mov	r6,zero
   89528:	28000e16 	blt	r5,zero,89564 <__divsi3+0x54>
   8952c:	00894940 	call	89494 <udivmodsi4>
   89530:	1007883a 	mov	r3,r2
   89534:	8005003a 	cmpeq	r2,r16,zero
   89538:	1000011e 	bne	r2,zero,89540 <__divsi3+0x30>
   8953c:	00c7c83a 	sub	r3,zero,r3
   89540:	1805883a 	mov	r2,r3
   89544:	dfc00117 	ldw	ra,4(sp)
   89548:	dc000017 	ldw	r16,0(sp)
   8954c:	dec00204 	addi	sp,sp,8
   89550:	f800283a 	ret
   89554:	0109c83a 	sub	r4,zero,r4
   89558:	04000044 	movi	r16,1
   8955c:	000d883a 	mov	r6,zero
   89560:	283ff20e 	bge	r5,zero,8952c <__divsi3+0x1c>
   89564:	014bc83a 	sub	r5,zero,r5
   89568:	8021003a 	cmpeq	r16,r16,zero
   8956c:	003fef06 	br	8952c <__divsi3+0x1c>

00089570 <__modsi3>:
   89570:	deffff04 	addi	sp,sp,-4
   89574:	dfc00015 	stw	ra,0(sp)
   89578:	01800044 	movi	r6,1
   8957c:	2807883a 	mov	r3,r5
   89580:	20000416 	blt	r4,zero,89594 <__modsi3+0x24>
   89584:	28000c16 	blt	r5,zero,895b8 <__modsi3+0x48>
   89588:	dfc00017 	ldw	ra,0(sp)
   8958c:	dec00104 	addi	sp,sp,4
   89590:	00894941 	jmpi	89494 <udivmodsi4>
   89594:	0109c83a 	sub	r4,zero,r4
   89598:	28000b16 	blt	r5,zero,895c8 <__modsi3+0x58>
   8959c:	180b883a 	mov	r5,r3
   895a0:	01800044 	movi	r6,1
   895a4:	00894940 	call	89494 <udivmodsi4>
   895a8:	0085c83a 	sub	r2,zero,r2
   895ac:	dfc00017 	ldw	ra,0(sp)
   895b0:	dec00104 	addi	sp,sp,4
   895b4:	f800283a 	ret
   895b8:	014bc83a 	sub	r5,zero,r5
   895bc:	dfc00017 	ldw	ra,0(sp)
   895c0:	dec00104 	addi	sp,sp,4
   895c4:	00894941 	jmpi	89494 <udivmodsi4>
   895c8:	0147c83a 	sub	r3,zero,r5
   895cc:	003ff306 	br	8959c <__modsi3+0x2c>

000895d0 <__udivsi3>:
   895d0:	000d883a 	mov	r6,zero
   895d4:	00894941 	jmpi	89494 <udivmodsi4>

000895d8 <__umodsi3>:
   895d8:	01800044 	movi	r6,1
   895dc:	00894941 	jmpi	89494 <udivmodsi4>

000895e0 <__mulsi3>:
   895e0:	20000a26 	beq	r4,zero,8960c <__mulsi3+0x2c>
   895e4:	0007883a 	mov	r3,zero
   895e8:	2080004c 	andi	r2,r4,1
   895ec:	1005003a 	cmpeq	r2,r2,zero
   895f0:	2008d07a 	srli	r4,r4,1
   895f4:	1000011e 	bne	r2,zero,895fc <__mulsi3+0x1c>
   895f8:	1947883a 	add	r3,r3,r5
   895fc:	294b883a 	add	r5,r5,r5
   89600:	203ff91e 	bne	r4,zero,895e8 <__mulsi3+0x8>
   89604:	1805883a 	mov	r2,r3
   89608:	f800283a 	ret
   8960c:	0007883a 	mov	r3,zero
   89610:	1805883a 	mov	r2,r3
   89614:	f800283a 	ret

00089618 <__muldi3>:
   89618:	defff204 	addi	sp,sp,-56
   8961c:	df000c15 	stw	fp,48(sp)
   89620:	3038d43a 	srli	fp,r6,16
   89624:	dd000815 	stw	r20,32(sp)
   89628:	dc400515 	stw	r17,20(sp)
   8962c:	2028d43a 	srli	r20,r4,16
   89630:	247fffcc 	andi	r17,r4,65535
   89634:	dc000415 	stw	r16,16(sp)
   89638:	343fffcc 	andi	r16,r6,65535
   8963c:	dcc00715 	stw	r19,28(sp)
   89640:	d9000015 	stw	r4,0(sp)
   89644:	2827883a 	mov	r19,r5
   89648:	8809883a 	mov	r4,r17
   8964c:	d9400115 	stw	r5,4(sp)
   89650:	800b883a 	mov	r5,r16
   89654:	d9800215 	stw	r6,8(sp)
   89658:	dfc00d15 	stw	ra,52(sp)
   8965c:	d9c00315 	stw	r7,12(sp)
   89660:	dd800a15 	stw	r22,40(sp)
   89664:	dd400915 	stw	r21,36(sp)
   89668:	302d883a 	mov	r22,r6
   8966c:	ddc00b15 	stw	r23,44(sp)
   89670:	dc800615 	stw	r18,24(sp)
   89674:	00895e00 	call	895e0 <__mulsi3>
   89678:	8809883a 	mov	r4,r17
   8967c:	e00b883a 	mov	r5,fp
   89680:	102b883a 	mov	r21,r2
   89684:	00895e00 	call	895e0 <__mulsi3>
   89688:	800b883a 	mov	r5,r16
   8968c:	a009883a 	mov	r4,r20
   89690:	1023883a 	mov	r17,r2
   89694:	00895e00 	call	895e0 <__mulsi3>
   89698:	a009883a 	mov	r4,r20
   8969c:	e00b883a 	mov	r5,fp
   896a0:	1021883a 	mov	r16,r2
   896a4:	00895e00 	call	895e0 <__mulsi3>
   896a8:	a8ffffcc 	andi	r3,r21,65535
   896ac:	a82ad43a 	srli	r21,r21,16
   896b0:	8c23883a 	add	r17,r17,r16
   896b4:	1011883a 	mov	r8,r2
   896b8:	ac6b883a 	add	r21,r21,r17
   896bc:	a804943a 	slli	r2,r21,16
   896c0:	b009883a 	mov	r4,r22
   896c4:	980b883a 	mov	r5,r19
   896c8:	10c7883a 	add	r3,r2,r3
   896cc:	a812d43a 	srli	r9,r21,16
   896d0:	180d883a 	mov	r6,r3
   896d4:	ac00022e 	bgeu	r21,r16,896e0 <__muldi3+0xc8>
   896d8:	00800074 	movhi	r2,1
   896dc:	4091883a 	add	r8,r8,r2
   896e0:	4267883a 	add	r19,r8,r9
   896e4:	302d883a 	mov	r22,r6
   896e8:	00895e00 	call	895e0 <__mulsi3>
   896ec:	d9400317 	ldw	r5,12(sp)
   896f0:	d9000017 	ldw	r4,0(sp)
   896f4:	1023883a 	mov	r17,r2
   896f8:	00895e00 	call	895e0 <__mulsi3>
   896fc:	14cb883a 	add	r5,r2,r19
   89700:	894b883a 	add	r5,r17,r5
   89704:	b005883a 	mov	r2,r22
   89708:	2807883a 	mov	r3,r5
   8970c:	dfc00d17 	ldw	ra,52(sp)
   89710:	df000c17 	ldw	fp,48(sp)
   89714:	ddc00b17 	ldw	r23,44(sp)
   89718:	dd800a17 	ldw	r22,40(sp)
   8971c:	dd400917 	ldw	r21,36(sp)
   89720:	dd000817 	ldw	r20,32(sp)
   89724:	dcc00717 	ldw	r19,28(sp)
   89728:	dc800617 	ldw	r18,24(sp)
   8972c:	dc400517 	ldw	r17,20(sp)
   89730:	dc000417 	ldw	r16,16(sp)
   89734:	dec00e04 	addi	sp,sp,56
   89738:	f800283a 	ret

0008973c <__clzsi2>:
   8973c:	00bfffd4 	movui	r2,65535
   89740:	11000e36 	bltu	r2,r4,8977c <__clzsi2+0x40>
   89744:	00803fc4 	movi	r2,255
   89748:	01400204 	movi	r5,8
   8974c:	0007883a 	mov	r3,zero
   89750:	11001036 	bltu	r2,r4,89794 <__clzsi2+0x58>
   89754:	000b883a 	mov	r5,zero
   89758:	20c6d83a 	srl	r3,r4,r3
   8975c:	00800274 	movhi	r2,9
   89760:	10b20c04 	addi	r2,r2,-14288
   89764:	1887883a 	add	r3,r3,r2
   89768:	18800003 	ldbu	r2,0(r3)
   8976c:	00c00804 	movi	r3,32
   89770:	2885883a 	add	r2,r5,r2
   89774:	1885c83a 	sub	r2,r3,r2
   89778:	f800283a 	ret
   8977c:	01400404 	movi	r5,16
   89780:	00804034 	movhi	r2,256
   89784:	10bfffc4 	addi	r2,r2,-1
   89788:	2807883a 	mov	r3,r5
   8978c:	113ff22e 	bgeu	r2,r4,89758 <__clzsi2+0x1c>
   89790:	01400604 	movi	r5,24
   89794:	2807883a 	mov	r3,r5
   89798:	20c6d83a 	srl	r3,r4,r3
   8979c:	00800274 	movhi	r2,9
   897a0:	10b20c04 	addi	r2,r2,-14288
   897a4:	1887883a 	add	r3,r3,r2
   897a8:	18800003 	ldbu	r2,0(r3)
   897ac:	00c00804 	movi	r3,32
   897b0:	2885883a 	add	r2,r5,r2
   897b4:	1885c83a 	sub	r2,r3,r2
   897b8:	f800283a 	ret

000897bc <__pack_d>:
   897bc:	20c00017 	ldw	r3,0(r4)
   897c0:	defffd04 	addi	sp,sp,-12
   897c4:	dc000015 	stw	r16,0(sp)
   897c8:	dc800215 	stw	r18,8(sp)
   897cc:	dc400115 	stw	r17,4(sp)
   897d0:	00800044 	movi	r2,1
   897d4:	22000317 	ldw	r8,12(r4)
   897d8:	001f883a 	mov	r15,zero
   897dc:	22400417 	ldw	r9,16(r4)
   897e0:	24000117 	ldw	r16,4(r4)
   897e4:	10c0552e 	bgeu	r2,r3,8993c <__pack_d+0x180>
   897e8:	00800104 	movi	r2,4
   897ec:	18804f26 	beq	r3,r2,8992c <__pack_d+0x170>
   897f0:	00800084 	movi	r2,2
   897f4:	18800226 	beq	r3,r2,89800 <__pack_d+0x44>
   897f8:	4244b03a 	or	r2,r8,r9
   897fc:	10001a1e 	bne	r2,zero,89868 <__pack_d+0xac>
   89800:	000d883a 	mov	r6,zero
   89804:	000f883a 	mov	r7,zero
   89808:	0011883a 	mov	r8,zero
   8980c:	00800434 	movhi	r2,16
   89810:	10bfffc4 	addi	r2,r2,-1
   89814:	301d883a 	mov	r14,r6
   89818:	3884703a 	and	r2,r7,r2
   8981c:	400a953a 	slli	r5,r8,20
   89820:	79bffc2c 	andhi	r6,r15,65520
   89824:	308cb03a 	or	r6,r6,r2
   89828:	00e00434 	movhi	r3,32784
   8982c:	18ffffc4 	addi	r3,r3,-1
   89830:	800497fa 	slli	r2,r16,31
   89834:	30c6703a 	and	r3,r6,r3
   89838:	1946b03a 	or	r3,r3,r5
   8983c:	01600034 	movhi	r5,32768
   89840:	297fffc4 	addi	r5,r5,-1
   89844:	194a703a 	and	r5,r3,r5
   89848:	288ab03a 	or	r5,r5,r2
   8984c:	2807883a 	mov	r3,r5
   89850:	7005883a 	mov	r2,r14
   89854:	dc800217 	ldw	r18,8(sp)
   89858:	dc400117 	ldw	r17,4(sp)
   8985c:	dc000017 	ldw	r16,0(sp)
   89860:	dec00304 	addi	sp,sp,12
   89864:	f800283a 	ret
   89868:	21000217 	ldw	r4,8(r4)
   8986c:	00bf0084 	movi	r2,-1022
   89870:	20803f16 	blt	r4,r2,89970 <__pack_d+0x1b4>
   89874:	0080ffc4 	movi	r2,1023
   89878:	11002c16 	blt	r2,r4,8992c <__pack_d+0x170>
   8987c:	00803fc4 	movi	r2,255
   89880:	408c703a 	and	r6,r8,r2
   89884:	00802004 	movi	r2,128
   89888:	0007883a 	mov	r3,zero
   8988c:	000f883a 	mov	r7,zero
   89890:	2280ffc4 	addi	r10,r4,1023
   89894:	30801e26 	beq	r6,r2,89910 <__pack_d+0x154>
   89898:	00801fc4 	movi	r2,127
   8989c:	4089883a 	add	r4,r8,r2
   898a0:	220d803a 	cmpltu	r6,r4,r8
   898a4:	324d883a 	add	r6,r6,r9
   898a8:	2011883a 	mov	r8,r4
   898ac:	3013883a 	mov	r9,r6
   898b0:	00880034 	movhi	r2,8192
   898b4:	10bfffc4 	addi	r2,r2,-1
   898b8:	12400d36 	bltu	r2,r9,898f0 <__pack_d+0x134>
   898bc:	4804963a 	slli	r2,r9,24
   898c0:	400cd23a 	srli	r6,r8,8
   898c4:	480ed23a 	srli	r7,r9,8
   898c8:	013fffc4 	movi	r4,-1
   898cc:	118cb03a 	or	r6,r2,r6
   898d0:	01400434 	movhi	r5,16
   898d4:	297fffc4 	addi	r5,r5,-1
   898d8:	3104703a 	and	r2,r6,r4
   898dc:	3946703a 	and	r3,r7,r5
   898e0:	5201ffcc 	andi	r8,r10,2047
   898e4:	100d883a 	mov	r6,r2
   898e8:	180f883a 	mov	r7,r3
   898ec:	003fc706 	br	8980c <__pack_d+0x50>
   898f0:	480897fa 	slli	r4,r9,31
   898f4:	4004d07a 	srli	r2,r8,1
   898f8:	4806d07a 	srli	r3,r9,1
   898fc:	52800044 	addi	r10,r10,1
   89900:	2084b03a 	or	r2,r4,r2
   89904:	1011883a 	mov	r8,r2
   89908:	1813883a 	mov	r9,r3
   8990c:	003feb06 	br	898bc <__pack_d+0x100>
   89910:	383fe11e 	bne	r7,zero,89898 <__pack_d+0xdc>
   89914:	01004004 	movi	r4,256
   89918:	4104703a 	and	r2,r8,r4
   8991c:	10c4b03a 	or	r2,r2,r3
   89920:	103fe326 	beq	r2,zero,898b0 <__pack_d+0xf4>
   89924:	3005883a 	mov	r2,r6
   89928:	003fdc06 	br	8989c <__pack_d+0xe0>
   8992c:	000d883a 	mov	r6,zero
   89930:	000f883a 	mov	r7,zero
   89934:	0201ffc4 	movi	r8,2047
   89938:	003fb406 	br	8980c <__pack_d+0x50>
   8993c:	0005883a 	mov	r2,zero
   89940:	00c00234 	movhi	r3,8
   89944:	408cb03a 	or	r6,r8,r2
   89948:	48ceb03a 	or	r7,r9,r3
   8994c:	013fffc4 	movi	r4,-1
   89950:	01400434 	movhi	r5,16
   89954:	297fffc4 	addi	r5,r5,-1
   89958:	3104703a 	and	r2,r6,r4
   8995c:	3946703a 	and	r3,r7,r5
   89960:	100d883a 	mov	r6,r2
   89964:	180f883a 	mov	r7,r3
   89968:	0201ffc4 	movi	r8,2047
   8996c:	003fa706 	br	8980c <__pack_d+0x50>
   89970:	1109c83a 	sub	r4,r2,r4
   89974:	00800e04 	movi	r2,56
   89978:	11004316 	blt	r2,r4,89a88 <__pack_d+0x2cc>
   8997c:	21fff804 	addi	r7,r4,-32
   89980:	38004516 	blt	r7,zero,89a98 <__pack_d+0x2dc>
   89984:	49d8d83a 	srl	r12,r9,r7
   89988:	001b883a 	mov	r13,zero
   8998c:	0023883a 	mov	r17,zero
   89990:	01400044 	movi	r5,1
   89994:	0025883a 	mov	r18,zero
   89998:	38004716 	blt	r7,zero,89ab8 <__pack_d+0x2fc>
   8999c:	29d6983a 	sll	r11,r5,r7
   899a0:	0015883a 	mov	r10,zero
   899a4:	00bfffc4 	movi	r2,-1
   899a8:	5089883a 	add	r4,r10,r2
   899ac:	588b883a 	add	r5,r11,r2
   899b0:	228d803a 	cmpltu	r6,r4,r10
   899b4:	314b883a 	add	r5,r6,r5
   899b8:	4104703a 	and	r2,r8,r4
   899bc:	4946703a 	and	r3,r9,r5
   899c0:	10c4b03a 	or	r2,r2,r3
   899c4:	10000226 	beq	r2,zero,899d0 <__pack_d+0x214>
   899c8:	04400044 	movi	r17,1
   899cc:	0025883a 	mov	r18,zero
   899d0:	00803fc4 	movi	r2,255
   899d4:	644eb03a 	or	r7,r12,r17
   899d8:	3892703a 	and	r9,r7,r2
   899dc:	00802004 	movi	r2,128
   899e0:	6c90b03a 	or	r8,r13,r18
   899e4:	0015883a 	mov	r10,zero
   899e8:	48801626 	beq	r9,r2,89a44 <__pack_d+0x288>
   899ec:	01001fc4 	movi	r4,127
   899f0:	3905883a 	add	r2,r7,r4
   899f4:	11cd803a 	cmpltu	r6,r2,r7
   899f8:	320d883a 	add	r6,r6,r8
   899fc:	100f883a 	mov	r7,r2
   89a00:	00840034 	movhi	r2,4096
   89a04:	10bfffc4 	addi	r2,r2,-1
   89a08:	3011883a 	mov	r8,r6
   89a0c:	0007883a 	mov	r3,zero
   89a10:	11801b36 	bltu	r2,r6,89a80 <__pack_d+0x2c4>
   89a14:	4004963a 	slli	r2,r8,24
   89a18:	3808d23a 	srli	r4,r7,8
   89a1c:	400ad23a 	srli	r5,r8,8
   89a20:	1813883a 	mov	r9,r3
   89a24:	1108b03a 	or	r4,r2,r4
   89a28:	00bfffc4 	movi	r2,-1
   89a2c:	00c00434 	movhi	r3,16
   89a30:	18ffffc4 	addi	r3,r3,-1
   89a34:	208c703a 	and	r6,r4,r2
   89a38:	28ce703a 	and	r7,r5,r3
   89a3c:	4a01ffcc 	andi	r8,r9,2047
   89a40:	003f7206 	br	8980c <__pack_d+0x50>
   89a44:	503fe91e 	bne	r10,zero,899ec <__pack_d+0x230>
   89a48:	01004004 	movi	r4,256
   89a4c:	3904703a 	and	r2,r7,r4
   89a50:	0007883a 	mov	r3,zero
   89a54:	10c4b03a 	or	r2,r2,r3
   89a58:	10000626 	beq	r2,zero,89a74 <__pack_d+0x2b8>
   89a5c:	3a45883a 	add	r2,r7,r9
   89a60:	11cd803a 	cmpltu	r6,r2,r7
   89a64:	320d883a 	add	r6,r6,r8
   89a68:	100f883a 	mov	r7,r2
   89a6c:	3011883a 	mov	r8,r6
   89a70:	0007883a 	mov	r3,zero
   89a74:	00840034 	movhi	r2,4096
   89a78:	10bfffc4 	addi	r2,r2,-1
   89a7c:	123fe52e 	bgeu	r2,r8,89a14 <__pack_d+0x258>
   89a80:	00c00044 	movi	r3,1
   89a84:	003fe306 	br	89a14 <__pack_d+0x258>
   89a88:	0009883a 	mov	r4,zero
   89a8c:	0013883a 	mov	r9,zero
   89a90:	000b883a 	mov	r5,zero
   89a94:	003fe406 	br	89a28 <__pack_d+0x26c>
   89a98:	4a47883a 	add	r3,r9,r9
   89a9c:	008007c4 	movi	r2,31
   89aa0:	1105c83a 	sub	r2,r2,r4
   89aa4:	1886983a 	sll	r3,r3,r2
   89aa8:	4118d83a 	srl	r12,r8,r4
   89aac:	491ad83a 	srl	r13,r9,r4
   89ab0:	1b18b03a 	or	r12,r3,r12
   89ab4:	003fb506 	br	8998c <__pack_d+0x1d0>
   89ab8:	2806d07a 	srli	r3,r5,1
   89abc:	008007c4 	movi	r2,31
   89ac0:	1105c83a 	sub	r2,r2,r4
   89ac4:	1896d83a 	srl	r11,r3,r2
   89ac8:	2914983a 	sll	r10,r5,r4
   89acc:	003fb506 	br	899a4 <__pack_d+0x1e8>

00089ad0 <__unpack_d>:
   89ad0:	20c00117 	ldw	r3,4(r4)
   89ad4:	22400017 	ldw	r9,0(r4)
   89ad8:	00800434 	movhi	r2,16
   89adc:	10bfffc4 	addi	r2,r2,-1
   89ae0:	1808d53a 	srli	r4,r3,20
   89ae4:	180cd7fa 	srli	r6,r3,31
   89ae8:	1894703a 	and	r10,r3,r2
   89aec:	2201ffcc 	andi	r8,r4,2047
   89af0:	281b883a 	mov	r13,r5
   89af4:	4817883a 	mov	r11,r9
   89af8:	29800115 	stw	r6,4(r5)
   89afc:	5019883a 	mov	r12,r10
   89b00:	40001e1e 	bne	r8,zero,89b7c <__unpack_d+0xac>
   89b04:	4a84b03a 	or	r2,r9,r10
   89b08:	10001926 	beq	r2,zero,89b70 <__unpack_d+0xa0>
   89b0c:	4804d63a 	srli	r2,r9,24
   89b10:	500c923a 	slli	r6,r10,8
   89b14:	013f0084 	movi	r4,-1022
   89b18:	00c40034 	movhi	r3,4096
   89b1c:	18ffffc4 	addi	r3,r3,-1
   89b20:	118cb03a 	or	r6,r2,r6
   89b24:	008000c4 	movi	r2,3
   89b28:	480a923a 	slli	r5,r9,8
   89b2c:	68800015 	stw	r2,0(r13)
   89b30:	69000215 	stw	r4,8(r13)
   89b34:	19800b36 	bltu	r3,r6,89b64 <__unpack_d+0x94>
   89b38:	200f883a 	mov	r7,r4
   89b3c:	1811883a 	mov	r8,r3
   89b40:	2945883a 	add	r2,r5,r5
   89b44:	1149803a 	cmpltu	r4,r2,r5
   89b48:	3187883a 	add	r3,r6,r6
   89b4c:	20c9883a 	add	r4,r4,r3
   89b50:	100b883a 	mov	r5,r2
   89b54:	200d883a 	mov	r6,r4
   89b58:	39ffffc4 	addi	r7,r7,-1
   89b5c:	413ff82e 	bgeu	r8,r4,89b40 <__unpack_d+0x70>
   89b60:	69c00215 	stw	r7,8(r13)
   89b64:	69800415 	stw	r6,16(r13)
   89b68:	69400315 	stw	r5,12(r13)
   89b6c:	f800283a 	ret
   89b70:	00800084 	movi	r2,2
   89b74:	28800015 	stw	r2,0(r5)
   89b78:	f800283a 	ret
   89b7c:	0081ffc4 	movi	r2,2047
   89b80:	40800f26 	beq	r8,r2,89bc0 <__unpack_d+0xf0>
   89b84:	480cd63a 	srli	r6,r9,24
   89b88:	5006923a 	slli	r3,r10,8
   89b8c:	4804923a 	slli	r2,r9,8
   89b90:	0009883a 	mov	r4,zero
   89b94:	30c6b03a 	or	r3,r6,r3
   89b98:	01440034 	movhi	r5,4096
   89b9c:	110cb03a 	or	r6,r2,r4
   89ba0:	423f0044 	addi	r8,r8,-1023
   89ba4:	194eb03a 	or	r7,r3,r5
   89ba8:	008000c4 	movi	r2,3
   89bac:	69c00415 	stw	r7,16(r13)
   89bb0:	6a000215 	stw	r8,8(r13)
   89bb4:	68800015 	stw	r2,0(r13)
   89bb8:	69800315 	stw	r6,12(r13)
   89bbc:	f800283a 	ret
   89bc0:	4a84b03a 	or	r2,r9,r10
   89bc4:	1000031e 	bne	r2,zero,89bd4 <__unpack_d+0x104>
   89bc8:	00800104 	movi	r2,4
   89bcc:	28800015 	stw	r2,0(r5)
   89bd0:	f800283a 	ret
   89bd4:	0009883a 	mov	r4,zero
   89bd8:	01400234 	movhi	r5,8
   89bdc:	4904703a 	and	r2,r9,r4
   89be0:	5146703a 	and	r3,r10,r5
   89be4:	10c4b03a 	or	r2,r2,r3
   89be8:	10000526 	beq	r2,zero,89c00 <__unpack_d+0x130>
   89bec:	00800044 	movi	r2,1
   89bf0:	68800015 	stw	r2,0(r13)
   89bf4:	6b000415 	stw	r12,16(r13)
   89bf8:	6ac00315 	stw	r11,12(r13)
   89bfc:	f800283a 	ret
   89c00:	68000015 	stw	zero,0(r13)
   89c04:	003ffb06 	br	89bf4 <__unpack_d+0x124>

00089c08 <__fpcmp_parts_d>:
   89c08:	21800017 	ldw	r6,0(r4)
   89c0c:	00c00044 	movi	r3,1
   89c10:	19800a2e 	bgeu	r3,r6,89c3c <__fpcmp_parts_d+0x34>
   89c14:	28800017 	ldw	r2,0(r5)
   89c18:	1880082e 	bgeu	r3,r2,89c3c <__fpcmp_parts_d+0x34>
   89c1c:	00c00104 	movi	r3,4
   89c20:	30c02626 	beq	r6,r3,89cbc <__fpcmp_parts_d+0xb4>
   89c24:	10c02226 	beq	r2,r3,89cb0 <__fpcmp_parts_d+0xa8>
   89c28:	00c00084 	movi	r3,2
   89c2c:	30c00526 	beq	r6,r3,89c44 <__fpcmp_parts_d+0x3c>
   89c30:	10c0071e 	bne	r2,r3,89c50 <__fpcmp_parts_d+0x48>
   89c34:	20800117 	ldw	r2,4(r4)
   89c38:	1000091e 	bne	r2,zero,89c60 <__fpcmp_parts_d+0x58>
   89c3c:	00800044 	movi	r2,1
   89c40:	f800283a 	ret
   89c44:	10c01a1e 	bne	r2,r3,89cb0 <__fpcmp_parts_d+0xa8>
   89c48:	0005883a 	mov	r2,zero
   89c4c:	f800283a 	ret
   89c50:	22000117 	ldw	r8,4(r4)
   89c54:	28800117 	ldw	r2,4(r5)
   89c58:	40800326 	beq	r8,r2,89c68 <__fpcmp_parts_d+0x60>
   89c5c:	403ff726 	beq	r8,zero,89c3c <__fpcmp_parts_d+0x34>
   89c60:	00bfffc4 	movi	r2,-1
   89c64:	f800283a 	ret
   89c68:	20c00217 	ldw	r3,8(r4)
   89c6c:	28800217 	ldw	r2,8(r5)
   89c70:	10fffa16 	blt	r2,r3,89c5c <__fpcmp_parts_d+0x54>
   89c74:	18800916 	blt	r3,r2,89c9c <__fpcmp_parts_d+0x94>
   89c78:	21c00417 	ldw	r7,16(r4)
   89c7c:	28c00417 	ldw	r3,16(r5)
   89c80:	21800317 	ldw	r6,12(r4)
   89c84:	28800317 	ldw	r2,12(r5)
   89c88:	19fff436 	bltu	r3,r7,89c5c <__fpcmp_parts_d+0x54>
   89c8c:	38c00526 	beq	r7,r3,89ca4 <__fpcmp_parts_d+0x9c>
   89c90:	38c00236 	bltu	r7,r3,89c9c <__fpcmp_parts_d+0x94>
   89c94:	19ffec1e 	bne	r3,r7,89c48 <__fpcmp_parts_d+0x40>
   89c98:	30bfeb2e 	bgeu	r6,r2,89c48 <__fpcmp_parts_d+0x40>
   89c9c:	403fe71e 	bne	r8,zero,89c3c <__fpcmp_parts_d+0x34>
   89ca0:	003fef06 	br	89c60 <__fpcmp_parts_d+0x58>
   89ca4:	11bffa2e 	bgeu	r2,r6,89c90 <__fpcmp_parts_d+0x88>
   89ca8:	403fe426 	beq	r8,zero,89c3c <__fpcmp_parts_d+0x34>
   89cac:	003fec06 	br	89c60 <__fpcmp_parts_d+0x58>
   89cb0:	28800117 	ldw	r2,4(r5)
   89cb4:	103fe11e 	bne	r2,zero,89c3c <__fpcmp_parts_d+0x34>
   89cb8:	003fe906 	br	89c60 <__fpcmp_parts_d+0x58>
   89cbc:	11bfdd1e 	bne	r2,r6,89c34 <__fpcmp_parts_d+0x2c>
   89cc0:	28c00117 	ldw	r3,4(r5)
   89cc4:	20800117 	ldw	r2,4(r4)
   89cc8:	1885c83a 	sub	r2,r3,r2
   89ccc:	f800283a 	ret

00089cd0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   89cd0:	defff804 	addi	sp,sp,-32
   89cd4:	dfc00715 	stw	ra,28(sp)
   89cd8:	df000615 	stw	fp,24(sp)
   89cdc:	df000604 	addi	fp,sp,24
   89ce0:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   89ce4:	e0bffc17 	ldw	r2,-16(fp)
   89ce8:	1004803a 	cmplt	r2,r2,zero
   89cec:	1000091e 	bne	r2,zero,89d14 <close+0x44>
   89cf0:	e13ffc17 	ldw	r4,-16(fp)
   89cf4:	01400304 	movi	r5,12
   89cf8:	00895e00 	call	895e0 <__mulsi3>
   89cfc:	1007883a 	mov	r3,r2
   89d00:	00800274 	movhi	r2,9
   89d04:	10b46804 	addi	r2,r2,-11872
   89d08:	1887883a 	add	r3,r3,r2
   89d0c:	e0ffff15 	stw	r3,-4(fp)
   89d10:	00000106 	br	89d18 <close+0x48>
   89d14:	e03fff15 	stw	zero,-4(fp)
   89d18:	e0bfff17 	ldw	r2,-4(fp)
   89d1c:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   89d20:	e0bffb17 	ldw	r2,-20(fp)
   89d24:	1005003a 	cmpeq	r2,r2,zero
   89d28:	10001d1e 	bne	r2,zero,89da0 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   89d2c:	e0bffb17 	ldw	r2,-20(fp)
   89d30:	10800017 	ldw	r2,0(r2)
   89d34:	10800417 	ldw	r2,16(r2)
   89d38:	1005003a 	cmpeq	r2,r2,zero
   89d3c:	1000071e 	bne	r2,zero,89d5c <close+0x8c>
   89d40:	e0bffb17 	ldw	r2,-20(fp)
   89d44:	10800017 	ldw	r2,0(r2)
   89d48:	10800417 	ldw	r2,16(r2)
   89d4c:	e13ffb17 	ldw	r4,-20(fp)
   89d50:	103ee83a 	callr	r2
   89d54:	e0bffe15 	stw	r2,-8(fp)
   89d58:	00000106 	br	89d60 <close+0x90>
   89d5c:	e03ffe15 	stw	zero,-8(fp)
   89d60:	e0bffe17 	ldw	r2,-8(fp)
   89d64:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   89d68:	e13ffc17 	ldw	r4,-16(fp)
   89d6c:	008a5280 	call	8a528 <alt_release_fd>
    if (rval < 0)
   89d70:	e0bffa17 	ldw	r2,-24(fp)
   89d74:	1004403a 	cmpge	r2,r2,zero
   89d78:	1000071e 	bne	r2,zero,89d98 <close+0xc8>
    {
      ALT_ERRNO = -rval;
   89d7c:	0089dd00 	call	89dd0 <alt_get_errno>
   89d80:	e0fffa17 	ldw	r3,-24(fp)
   89d84:	00c7c83a 	sub	r3,zero,r3
   89d88:	10c00015 	stw	r3,0(r2)
      return -1;
   89d8c:	00bfffc4 	movi	r2,-1
   89d90:	e0bffd15 	stw	r2,-12(fp)
   89d94:	00000806 	br	89db8 <close+0xe8>
    }
    return 0;
   89d98:	e03ffd15 	stw	zero,-12(fp)
   89d9c:	00000606 	br	89db8 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   89da0:	0089dd00 	call	89dd0 <alt_get_errno>
   89da4:	1007883a 	mov	r3,r2
   89da8:	00801444 	movi	r2,81
   89dac:	18800015 	stw	r2,0(r3)
    return -1;
   89db0:	00bfffc4 	movi	r2,-1
   89db4:	e0bffd15 	stw	r2,-12(fp)
   89db8:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   89dbc:	e037883a 	mov	sp,fp
   89dc0:	dfc00117 	ldw	ra,4(sp)
   89dc4:	df000017 	ldw	fp,0(sp)
   89dc8:	dec00204 	addi	sp,sp,8
   89dcc:	f800283a 	ret

00089dd0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   89dd0:	defffd04 	addi	sp,sp,-12
   89dd4:	dfc00215 	stw	ra,8(sp)
   89dd8:	df000115 	stw	fp,4(sp)
   89ddc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   89de0:	00800274 	movhi	r2,9
   89de4:	10b8eb04 	addi	r2,r2,-7252
   89de8:	10800017 	ldw	r2,0(r2)
   89dec:	1005003a 	cmpeq	r2,r2,zero
   89df0:	1000061e 	bne	r2,zero,89e0c <alt_get_errno+0x3c>
   89df4:	00800274 	movhi	r2,9
   89df8:	10b8eb04 	addi	r2,r2,-7252
   89dfc:	10800017 	ldw	r2,0(r2)
   89e00:	103ee83a 	callr	r2
   89e04:	e0bfff15 	stw	r2,-4(fp)
   89e08:	00000306 	br	89e18 <alt_get_errno+0x48>
   89e0c:	00800274 	movhi	r2,9
   89e10:	10bf8d04 	addi	r2,r2,-460
   89e14:	e0bfff15 	stw	r2,-4(fp)
   89e18:	e0bfff17 	ldw	r2,-4(fp)
}
   89e1c:	e037883a 	mov	sp,fp
   89e20:	dfc00117 	ldw	ra,4(sp)
   89e24:	df000017 	ldw	fp,0(sp)
   89e28:	dec00204 	addi	sp,sp,8
   89e2c:	f800283a 	ret

00089e30 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   89e30:	defffc04 	addi	sp,sp,-16
   89e34:	df000315 	stw	fp,12(sp)
   89e38:	df000304 	addi	fp,sp,12
   89e3c:	e13ffd15 	stw	r4,-12(fp)
   89e40:	e17ffe15 	stw	r5,-8(fp)
   89e44:	e1bfff15 	stw	r6,-4(fp)
  return len;
   89e48:	e0bfff17 	ldw	r2,-4(fp)
}
   89e4c:	e037883a 	mov	sp,fp
   89e50:	df000017 	ldw	fp,0(sp)
   89e54:	dec00104 	addi	sp,sp,4
   89e58:	f800283a 	ret

00089e5c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   89e5c:	defff904 	addi	sp,sp,-28
   89e60:	dfc00615 	stw	ra,24(sp)
   89e64:	df000515 	stw	fp,20(sp)
   89e68:	df000504 	addi	fp,sp,20
   89e6c:	e13ffc15 	stw	r4,-16(fp)
   89e70:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   89e74:	e0bffc17 	ldw	r2,-16(fp)
   89e78:	1004803a 	cmplt	r2,r2,zero
   89e7c:	1000091e 	bne	r2,zero,89ea4 <fstat+0x48>
   89e80:	e13ffc17 	ldw	r4,-16(fp)
   89e84:	01400304 	movi	r5,12
   89e88:	00895e00 	call	895e0 <__mulsi3>
   89e8c:	1007883a 	mov	r3,r2
   89e90:	00800274 	movhi	r2,9
   89e94:	10b46804 	addi	r2,r2,-11872
   89e98:	1887883a 	add	r3,r3,r2
   89e9c:	e0ffff15 	stw	r3,-4(fp)
   89ea0:	00000106 	br	89ea8 <fstat+0x4c>
   89ea4:	e03fff15 	stw	zero,-4(fp)
   89ea8:	e0bfff17 	ldw	r2,-4(fp)
   89eac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   89eb0:	e0bffb17 	ldw	r2,-20(fp)
   89eb4:	1005003a 	cmpeq	r2,r2,zero
   89eb8:	1000121e 	bne	r2,zero,89f04 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   89ebc:	e0bffb17 	ldw	r2,-20(fp)
   89ec0:	10800017 	ldw	r2,0(r2)
   89ec4:	10800817 	ldw	r2,32(r2)
   89ec8:	1005003a 	cmpeq	r2,r2,zero
   89ecc:	1000081e 	bne	r2,zero,89ef0 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
   89ed0:	e0bffb17 	ldw	r2,-20(fp)
   89ed4:	10800017 	ldw	r2,0(r2)
   89ed8:	10800817 	ldw	r2,32(r2)
   89edc:	e13ffb17 	ldw	r4,-20(fp)
   89ee0:	e17ffd17 	ldw	r5,-12(fp)
   89ee4:	103ee83a 	callr	r2
   89ee8:	e0bffe15 	stw	r2,-8(fp)
   89eec:	00000b06 	br	89f1c <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   89ef0:	e0fffd17 	ldw	r3,-12(fp)
   89ef4:	00880004 	movi	r2,8192
   89ef8:	18800115 	stw	r2,4(r3)
      return 0;
   89efc:	e03ffe15 	stw	zero,-8(fp)
   89f00:	00000606 	br	89f1c <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   89f04:	0089f340 	call	89f34 <alt_get_errno>
   89f08:	1007883a 	mov	r3,r2
   89f0c:	00801444 	movi	r2,81
   89f10:	18800015 	stw	r2,0(r3)
    return -1;
   89f14:	00bfffc4 	movi	r2,-1
   89f18:	e0bffe15 	stw	r2,-8(fp)
   89f1c:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   89f20:	e037883a 	mov	sp,fp
   89f24:	dfc00117 	ldw	ra,4(sp)
   89f28:	df000017 	ldw	fp,0(sp)
   89f2c:	dec00204 	addi	sp,sp,8
   89f30:	f800283a 	ret

00089f34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   89f34:	defffd04 	addi	sp,sp,-12
   89f38:	dfc00215 	stw	ra,8(sp)
   89f3c:	df000115 	stw	fp,4(sp)
   89f40:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   89f44:	00800274 	movhi	r2,9
   89f48:	10b8eb04 	addi	r2,r2,-7252
   89f4c:	10800017 	ldw	r2,0(r2)
   89f50:	1005003a 	cmpeq	r2,r2,zero
   89f54:	1000061e 	bne	r2,zero,89f70 <alt_get_errno+0x3c>
   89f58:	00800274 	movhi	r2,9
   89f5c:	10b8eb04 	addi	r2,r2,-7252
   89f60:	10800017 	ldw	r2,0(r2)
   89f64:	103ee83a 	callr	r2
   89f68:	e0bfff15 	stw	r2,-4(fp)
   89f6c:	00000306 	br	89f7c <alt_get_errno+0x48>
   89f70:	00800274 	movhi	r2,9
   89f74:	10bf8d04 	addi	r2,r2,-460
   89f78:	e0bfff15 	stw	r2,-4(fp)
   89f7c:	e0bfff17 	ldw	r2,-4(fp)
}
   89f80:	e037883a 	mov	sp,fp
   89f84:	dfc00117 	ldw	ra,4(sp)
   89f88:	df000017 	ldw	fp,0(sp)
   89f8c:	dec00204 	addi	sp,sp,8
   89f90:	f800283a 	ret

00089f94 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   89f94:	deffeb04 	addi	sp,sp,-84
   89f98:	dfc01415 	stw	ra,80(sp)
   89f9c:	df001315 	stw	fp,76(sp)
   89fa0:	df001304 	addi	fp,sp,76
   89fa4:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   89fa8:	e0bffd17 	ldw	r2,-12(fp)
   89fac:	1004803a 	cmplt	r2,r2,zero
   89fb0:	1000091e 	bne	r2,zero,89fd8 <isatty+0x44>
   89fb4:	e13ffd17 	ldw	r4,-12(fp)
   89fb8:	01400304 	movi	r5,12
   89fbc:	00895e00 	call	895e0 <__mulsi3>
   89fc0:	1007883a 	mov	r3,r2
   89fc4:	00800274 	movhi	r2,9
   89fc8:	10b46804 	addi	r2,r2,-11872
   89fcc:	1887883a 	add	r3,r3,r2
   89fd0:	e0ffff15 	stw	r3,-4(fp)
   89fd4:	00000106 	br	89fdc <isatty+0x48>
   89fd8:	e03fff15 	stw	zero,-4(fp)
   89fdc:	e0bfff17 	ldw	r2,-4(fp)
   89fe0:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   89fe4:	e0bfed17 	ldw	r2,-76(fp)
   89fe8:	1005003a 	cmpeq	r2,r2,zero
   89fec:	10000f1e 	bne	r2,zero,8a02c <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   89ff0:	e0bfed17 	ldw	r2,-76(fp)
   89ff4:	10800017 	ldw	r2,0(r2)
   89ff8:	10800817 	ldw	r2,32(r2)
   89ffc:	1004c03a 	cmpne	r2,r2,zero
   8a000:	1000031e 	bne	r2,zero,8a010 <isatty+0x7c>
    {
      return 1;
   8a004:	00800044 	movi	r2,1
   8a008:	e0bffe15 	stw	r2,-8(fp)
   8a00c:	00000c06 	br	8a040 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8a010:	e17fee04 	addi	r5,fp,-72
   8a014:	e13ffd17 	ldw	r4,-12(fp)
   8a018:	0089e5c0 	call	89e5c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8a01c:	e0bfef17 	ldw	r2,-68(fp)
   8a020:	10880020 	cmpeqi	r2,r2,8192
   8a024:	e0bffe15 	stw	r2,-8(fp)
   8a028:	00000506 	br	8a040 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8a02c:	008a0580 	call	8a058 <alt_get_errno>
   8a030:	1007883a 	mov	r3,r2
   8a034:	00801444 	movi	r2,81
   8a038:	18800015 	stw	r2,0(r3)
    return 0;
   8a03c:	e03ffe15 	stw	zero,-8(fp)
   8a040:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8a044:	e037883a 	mov	sp,fp
   8a048:	dfc00117 	ldw	ra,4(sp)
   8a04c:	df000017 	ldw	fp,0(sp)
   8a050:	dec00204 	addi	sp,sp,8
   8a054:	f800283a 	ret

0008a058 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8a058:	defffd04 	addi	sp,sp,-12
   8a05c:	dfc00215 	stw	ra,8(sp)
   8a060:	df000115 	stw	fp,4(sp)
   8a064:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8a068:	00800274 	movhi	r2,9
   8a06c:	10b8eb04 	addi	r2,r2,-7252
   8a070:	10800017 	ldw	r2,0(r2)
   8a074:	1005003a 	cmpeq	r2,r2,zero
   8a078:	1000061e 	bne	r2,zero,8a094 <alt_get_errno+0x3c>
   8a07c:	00800274 	movhi	r2,9
   8a080:	10b8eb04 	addi	r2,r2,-7252
   8a084:	10800017 	ldw	r2,0(r2)
   8a088:	103ee83a 	callr	r2
   8a08c:	e0bfff15 	stw	r2,-4(fp)
   8a090:	00000306 	br	8a0a0 <alt_get_errno+0x48>
   8a094:	00800274 	movhi	r2,9
   8a098:	10bf8d04 	addi	r2,r2,-460
   8a09c:	e0bfff15 	stw	r2,-4(fp)
   8a0a0:	e0bfff17 	ldw	r2,-4(fp)
}
   8a0a4:	e037883a 	mov	sp,fp
   8a0a8:	dfc00117 	ldw	ra,4(sp)
   8a0ac:	df000017 	ldw	fp,0(sp)
   8a0b0:	dec00204 	addi	sp,sp,8
   8a0b4:	f800283a 	ret

0008a0b8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8a0b8:	defffe04 	addi	sp,sp,-8
   8a0bc:	dfc00115 	stw	ra,4(sp)
   8a0c0:	df000015 	stw	fp,0(sp)
   8a0c4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8a0c8:	01000274 	movhi	r4,9
   8a0cc:	2138f004 	addi	r4,r4,-7232
   8a0d0:	01400274 	movhi	r5,9
   8a0d4:	29725904 	addi	r5,r5,-13980
   8a0d8:	01800274 	movhi	r6,9
   8a0dc:	31b8f004 	addi	r6,r6,-7232
   8a0e0:	008a1380 	call	8a138 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8a0e4:	01000234 	movhi	r4,8
   8a0e8:	21000804 	addi	r4,r4,32
   8a0ec:	01400234 	movhi	r5,8
   8a0f0:	29400804 	addi	r5,r5,32
   8a0f4:	01800234 	movhi	r6,8
   8a0f8:	31806d04 	addi	r6,r6,436
   8a0fc:	008a1380 	call	8a138 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8a100:	01000274 	movhi	r4,9
   8a104:	21317e04 	addi	r4,r4,-14856
   8a108:	01400274 	movhi	r5,9
   8a10c:	29717e04 	addi	r5,r5,-14856
   8a110:	01800274 	movhi	r6,9
   8a114:	31b25904 	addi	r6,r6,-13980
   8a118:	008a1380 	call	8a138 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8a11c:	008b4900 	call	8b490 <alt_dcache_flush_all>
  alt_icache_flush_all();
   8a120:	008b6880 	call	8b688 <alt_icache_flush_all>
}
   8a124:	e037883a 	mov	sp,fp
   8a128:	dfc00117 	ldw	ra,4(sp)
   8a12c:	df000017 	ldw	fp,0(sp)
   8a130:	dec00204 	addi	sp,sp,8
   8a134:	f800283a 	ret

0008a138 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8a138:	defffc04 	addi	sp,sp,-16
   8a13c:	df000315 	stw	fp,12(sp)
   8a140:	df000304 	addi	fp,sp,12
   8a144:	e13ffd15 	stw	r4,-12(fp)
   8a148:	e17ffe15 	stw	r5,-8(fp)
   8a14c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8a150:	e0fffe17 	ldw	r3,-8(fp)
   8a154:	e0bffd17 	ldw	r2,-12(fp)
   8a158:	18800e26 	beq	r3,r2,8a194 <alt_load_section+0x5c>
  {
    while( to != end )
   8a15c:	00000a06 	br	8a188 <alt_load_section+0x50>
    {
      *to++ = *from++;
   8a160:	e0bffd17 	ldw	r2,-12(fp)
   8a164:	10c00017 	ldw	r3,0(r2)
   8a168:	e0bffe17 	ldw	r2,-8(fp)
   8a16c:	10c00015 	stw	r3,0(r2)
   8a170:	e0bffe17 	ldw	r2,-8(fp)
   8a174:	10800104 	addi	r2,r2,4
   8a178:	e0bffe15 	stw	r2,-8(fp)
   8a17c:	e0bffd17 	ldw	r2,-12(fp)
   8a180:	10800104 	addi	r2,r2,4
   8a184:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8a188:	e0fffe17 	ldw	r3,-8(fp)
   8a18c:	e0bfff17 	ldw	r2,-4(fp)
   8a190:	18bff31e 	bne	r3,r2,8a160 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   8a194:	e037883a 	mov	sp,fp
   8a198:	df000017 	ldw	fp,0(sp)
   8a19c:	dec00104 	addi	sp,sp,4
   8a1a0:	f800283a 	ret

0008a1a4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8a1a4:	defff804 	addi	sp,sp,-32
   8a1a8:	dfc00715 	stw	ra,28(sp)
   8a1ac:	df000615 	stw	fp,24(sp)
   8a1b0:	df000604 	addi	fp,sp,24
   8a1b4:	e13ffc15 	stw	r4,-16(fp)
   8a1b8:	e17ffd15 	stw	r5,-12(fp)
   8a1bc:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8a1c0:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8a1c4:	e0bffc17 	ldw	r2,-16(fp)
   8a1c8:	1004803a 	cmplt	r2,r2,zero
   8a1cc:	1000091e 	bne	r2,zero,8a1f4 <lseek+0x50>
   8a1d0:	e13ffc17 	ldw	r4,-16(fp)
   8a1d4:	01400304 	movi	r5,12
   8a1d8:	00895e00 	call	895e0 <__mulsi3>
   8a1dc:	1007883a 	mov	r3,r2
   8a1e0:	00800274 	movhi	r2,9
   8a1e4:	10b46804 	addi	r2,r2,-11872
   8a1e8:	1887883a 	add	r3,r3,r2
   8a1ec:	e0ffff15 	stw	r3,-4(fp)
   8a1f0:	00000106 	br	8a1f8 <lseek+0x54>
   8a1f4:	e03fff15 	stw	zero,-4(fp)
   8a1f8:	e0bfff17 	ldw	r2,-4(fp)
   8a1fc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   8a200:	e0bffb17 	ldw	r2,-20(fp)
   8a204:	1005003a 	cmpeq	r2,r2,zero
   8a208:	1000111e 	bne	r2,zero,8a250 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8a20c:	e0bffb17 	ldw	r2,-20(fp)
   8a210:	10800017 	ldw	r2,0(r2)
   8a214:	10800717 	ldw	r2,28(r2)
   8a218:	1005003a 	cmpeq	r2,r2,zero
   8a21c:	1000091e 	bne	r2,zero,8a244 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8a220:	e0bffb17 	ldw	r2,-20(fp)
   8a224:	10800017 	ldw	r2,0(r2)
   8a228:	10800717 	ldw	r2,28(r2)
   8a22c:	e13ffb17 	ldw	r4,-20(fp)
   8a230:	e17ffd17 	ldw	r5,-12(fp)
   8a234:	e1bffe17 	ldw	r6,-8(fp)
   8a238:	103ee83a 	callr	r2
   8a23c:	e0bffa15 	stw	r2,-24(fp)
   8a240:	00000506 	br	8a258 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8a244:	00bfde84 	movi	r2,-134
   8a248:	e0bffa15 	stw	r2,-24(fp)
   8a24c:	00000206 	br	8a258 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
   8a250:	00bfebc4 	movi	r2,-81
   8a254:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   8a258:	e0bffa17 	ldw	r2,-24(fp)
   8a25c:	1004403a 	cmpge	r2,r2,zero
   8a260:	1000071e 	bne	r2,zero,8a280 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
   8a264:	008a2980 	call	8a298 <alt_get_errno>
   8a268:	1007883a 	mov	r3,r2
   8a26c:	e0bffa17 	ldw	r2,-24(fp)
   8a270:	0085c83a 	sub	r2,zero,r2
   8a274:	18800015 	stw	r2,0(r3)
    rc = -1;
   8a278:	00bfffc4 	movi	r2,-1
   8a27c:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   8a280:	e0bffa17 	ldw	r2,-24(fp)
}
   8a284:	e037883a 	mov	sp,fp
   8a288:	dfc00117 	ldw	ra,4(sp)
   8a28c:	df000017 	ldw	fp,0(sp)
   8a290:	dec00204 	addi	sp,sp,8
   8a294:	f800283a 	ret

0008a298 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8a298:	defffd04 	addi	sp,sp,-12
   8a29c:	dfc00215 	stw	ra,8(sp)
   8a2a0:	df000115 	stw	fp,4(sp)
   8a2a4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8a2a8:	00800274 	movhi	r2,9
   8a2ac:	10b8eb04 	addi	r2,r2,-7252
   8a2b0:	10800017 	ldw	r2,0(r2)
   8a2b4:	1005003a 	cmpeq	r2,r2,zero
   8a2b8:	1000061e 	bne	r2,zero,8a2d4 <alt_get_errno+0x3c>
   8a2bc:	00800274 	movhi	r2,9
   8a2c0:	10b8eb04 	addi	r2,r2,-7252
   8a2c4:	10800017 	ldw	r2,0(r2)
   8a2c8:	103ee83a 	callr	r2
   8a2cc:	e0bfff15 	stw	r2,-4(fp)
   8a2d0:	00000306 	br	8a2e0 <alt_get_errno+0x48>
   8a2d4:	00800274 	movhi	r2,9
   8a2d8:	10bf8d04 	addi	r2,r2,-460
   8a2dc:	e0bfff15 	stw	r2,-4(fp)
   8a2e0:	e0bfff17 	ldw	r2,-4(fp)
}
   8a2e4:	e037883a 	mov	sp,fp
   8a2e8:	dfc00117 	ldw	ra,4(sp)
   8a2ec:	df000017 	ldw	fp,0(sp)
   8a2f0:	dec00204 	addi	sp,sp,8
   8a2f4:	f800283a 	ret

0008a2f8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8a2f8:	defffd04 	addi	sp,sp,-12
   8a2fc:	dfc00215 	stw	ra,8(sp)
   8a300:	df000115 	stw	fp,4(sp)
   8a304:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8a308:	0009883a 	mov	r4,zero
   8a30c:	008a7e00 	call	8a7e0 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8a310:	008a8140 	call	8a814 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8a314:	01000274 	movhi	r4,9
   8a318:	21324f04 	addi	r4,r4,-14020
   8a31c:	01400274 	movhi	r5,9
   8a320:	29724f04 	addi	r5,r5,-14020
   8a324:	01800274 	movhi	r6,9
   8a328:	31b24f04 	addi	r6,r6,-14020
   8a32c:	008ba480 	call	8ba48 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8a330:	008b5c00 	call	8b5c0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8a334:	01000274 	movhi	r4,9
   8a338:	212d8904 	addi	r4,r4,-18908
   8a33c:	008c1ec0 	call	8c1ec <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8a340:	d126ae17 	ldw	r4,-25928(gp)
   8a344:	d166af17 	ldw	r5,-25924(gp)
   8a348:	d1a6b017 	ldw	r6,-25920(gp)
   8a34c:	00802400 	call	80240 <main>
   8a350:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   8a354:	01000044 	movi	r4,1
   8a358:	0089cd00 	call	89cd0 <close>
  exit (result);
   8a35c:	e13fff17 	ldw	r4,-4(fp)
   8a360:	008c2000 	call	8c200 <exit>

0008a364 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   8a364:	defffe04 	addi	sp,sp,-8
   8a368:	df000115 	stw	fp,4(sp)
   8a36c:	df000104 	addi	fp,sp,4
   8a370:	e13fff15 	stw	r4,-4(fp)
}
   8a374:	e037883a 	mov	sp,fp
   8a378:	df000017 	ldw	fp,0(sp)
   8a37c:	dec00104 	addi	sp,sp,4
   8a380:	f800283a 	ret

0008a384 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   8a384:	defffe04 	addi	sp,sp,-8
   8a388:	df000115 	stw	fp,4(sp)
   8a38c:	df000104 	addi	fp,sp,4
   8a390:	e13fff15 	stw	r4,-4(fp)
}
   8a394:	e037883a 	mov	sp,fp
   8a398:	df000017 	ldw	fp,0(sp)
   8a39c:	dec00104 	addi	sp,sp,4
   8a3a0:	f800283a 	ret

0008a3a4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   8a3a4:	defff704 	addi	sp,sp,-36
   8a3a8:	dfc00815 	stw	ra,32(sp)
   8a3ac:	df000715 	stw	fp,28(sp)
   8a3b0:	df000704 	addi	fp,sp,28
   8a3b4:	e13ffb15 	stw	r4,-20(fp)
   8a3b8:	e17ffc15 	stw	r5,-16(fp)
   8a3bc:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8a3c0:	e0bffb17 	ldw	r2,-20(fp)
   8a3c4:	1004803a 	cmplt	r2,r2,zero
   8a3c8:	1000091e 	bne	r2,zero,8a3f0 <read+0x4c>
   8a3cc:	e13ffb17 	ldw	r4,-20(fp)
   8a3d0:	01400304 	movi	r5,12
   8a3d4:	00895e00 	call	895e0 <__mulsi3>
   8a3d8:	1007883a 	mov	r3,r2
   8a3dc:	00800274 	movhi	r2,9
   8a3e0:	10b46804 	addi	r2,r2,-11872
   8a3e4:	1887883a 	add	r3,r3,r2
   8a3e8:	e0ffff15 	stw	r3,-4(fp)
   8a3ec:	00000106 	br	8a3f4 <read+0x50>
   8a3f0:	e03fff15 	stw	zero,-4(fp)
   8a3f4:	e0bfff17 	ldw	r2,-4(fp)
   8a3f8:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   8a3fc:	e0bffa17 	ldw	r2,-24(fp)
   8a400:	1005003a 	cmpeq	r2,r2,zero
   8a404:	1000241e 	bne	r2,zero,8a498 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8a408:	e0bffa17 	ldw	r2,-24(fp)
   8a40c:	10800217 	ldw	r2,8(r2)
   8a410:	108000cc 	andi	r2,r2,3
   8a414:	10800060 	cmpeqi	r2,r2,1
   8a418:	10001a1e 	bne	r2,zero,8a484 <read+0xe0>
   8a41c:	e0bffa17 	ldw	r2,-24(fp)
   8a420:	10800017 	ldw	r2,0(r2)
   8a424:	10800517 	ldw	r2,20(r2)
   8a428:	1005003a 	cmpeq	r2,r2,zero
   8a42c:	1000151e 	bne	r2,zero,8a484 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   8a430:	e0bffa17 	ldw	r2,-24(fp)
   8a434:	10800017 	ldw	r2,0(r2)
   8a438:	10800517 	ldw	r2,20(r2)
   8a43c:	e17ffc17 	ldw	r5,-16(fp)
   8a440:	e1bffd17 	ldw	r6,-12(fp)
   8a444:	e13ffa17 	ldw	r4,-24(fp)
   8a448:	103ee83a 	callr	r2
   8a44c:	e0bff915 	stw	r2,-28(fp)
   8a450:	e0bff917 	ldw	r2,-28(fp)
   8a454:	1004403a 	cmpge	r2,r2,zero
   8a458:	1000071e 	bne	r2,zero,8a478 <read+0xd4>
        {
          ALT_ERRNO = -rval;
   8a45c:	008a4c80 	call	8a4c8 <alt_get_errno>
   8a460:	e0fff917 	ldw	r3,-28(fp)
   8a464:	00c7c83a 	sub	r3,zero,r3
   8a468:	10c00015 	stw	r3,0(r2)
          return -1;
   8a46c:	00bfffc4 	movi	r2,-1
   8a470:	e0bffe15 	stw	r2,-8(fp)
   8a474:	00000e06 	br	8a4b0 <read+0x10c>
        }
        return rval;
   8a478:	e0bff917 	ldw	r2,-28(fp)
   8a47c:	e0bffe15 	stw	r2,-8(fp)
   8a480:	00000b06 	br	8a4b0 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
   8a484:	008a4c80 	call	8a4c8 <alt_get_errno>
   8a488:	1007883a 	mov	r3,r2
   8a48c:	00800344 	movi	r2,13
   8a490:	18800015 	stw	r2,0(r3)
   8a494:	00000406 	br	8a4a8 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   8a498:	008a4c80 	call	8a4c8 <alt_get_errno>
   8a49c:	1007883a 	mov	r3,r2
   8a4a0:	00801444 	movi	r2,81
   8a4a4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8a4a8:	00bfffc4 	movi	r2,-1
   8a4ac:	e0bffe15 	stw	r2,-8(fp)
   8a4b0:	e0bffe17 	ldw	r2,-8(fp)
}
   8a4b4:	e037883a 	mov	sp,fp
   8a4b8:	dfc00117 	ldw	ra,4(sp)
   8a4bc:	df000017 	ldw	fp,0(sp)
   8a4c0:	dec00204 	addi	sp,sp,8
   8a4c4:	f800283a 	ret

0008a4c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8a4c8:	defffd04 	addi	sp,sp,-12
   8a4cc:	dfc00215 	stw	ra,8(sp)
   8a4d0:	df000115 	stw	fp,4(sp)
   8a4d4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8a4d8:	00800274 	movhi	r2,9
   8a4dc:	10b8eb04 	addi	r2,r2,-7252
   8a4e0:	10800017 	ldw	r2,0(r2)
   8a4e4:	1005003a 	cmpeq	r2,r2,zero
   8a4e8:	1000061e 	bne	r2,zero,8a504 <alt_get_errno+0x3c>
   8a4ec:	00800274 	movhi	r2,9
   8a4f0:	10b8eb04 	addi	r2,r2,-7252
   8a4f4:	10800017 	ldw	r2,0(r2)
   8a4f8:	103ee83a 	callr	r2
   8a4fc:	e0bfff15 	stw	r2,-4(fp)
   8a500:	00000306 	br	8a510 <alt_get_errno+0x48>
   8a504:	00800274 	movhi	r2,9
   8a508:	10bf8d04 	addi	r2,r2,-460
   8a50c:	e0bfff15 	stw	r2,-4(fp)
   8a510:	e0bfff17 	ldw	r2,-4(fp)
}
   8a514:	e037883a 	mov	sp,fp
   8a518:	dfc00117 	ldw	ra,4(sp)
   8a51c:	df000017 	ldw	fp,0(sp)
   8a520:	dec00204 	addi	sp,sp,8
   8a524:	f800283a 	ret

0008a528 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   8a528:	defffc04 	addi	sp,sp,-16
   8a52c:	dfc00315 	stw	ra,12(sp)
   8a530:	df000215 	stw	fp,8(sp)
   8a534:	dc000115 	stw	r16,4(sp)
   8a538:	df000104 	addi	fp,sp,4
   8a53c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   8a540:	e0bfff17 	ldw	r2,-4(fp)
   8a544:	108000d0 	cmplti	r2,r2,3
   8a548:	10000f1e 	bne	r2,zero,8a588 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
   8a54c:	e13fff17 	ldw	r4,-4(fp)
   8a550:	04000274 	movhi	r16,9
   8a554:	84346804 	addi	r16,r16,-11872
   8a558:	01400304 	movi	r5,12
   8a55c:	00895e00 	call	895e0 <__mulsi3>
   8a560:	1405883a 	add	r2,r2,r16
   8a564:	10800204 	addi	r2,r2,8
   8a568:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   8a56c:	e13fff17 	ldw	r4,-4(fp)
   8a570:	04000274 	movhi	r16,9
   8a574:	84346804 	addi	r16,r16,-11872
   8a578:	01400304 	movi	r5,12
   8a57c:	00895e00 	call	895e0 <__mulsi3>
   8a580:	1405883a 	add	r2,r2,r16
   8a584:	10000015 	stw	zero,0(r2)
  }
}
   8a588:	e037883a 	mov	sp,fp
   8a58c:	dfc00217 	ldw	ra,8(sp)
   8a590:	df000117 	ldw	fp,4(sp)
   8a594:	dc000017 	ldw	r16,0(sp)
   8a598:	dec00304 	addi	sp,sp,12
   8a59c:	f800283a 	ret

0008a5a0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   8a5a0:	defff804 	addi	sp,sp,-32
   8a5a4:	df000715 	stw	fp,28(sp)
   8a5a8:	df000704 	addi	fp,sp,28
   8a5ac:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8a5b0:	0005303a 	rdctl	r2,status
   8a5b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8a5b8:	e0fffb17 	ldw	r3,-20(fp)
   8a5bc:	00bfff84 	movi	r2,-2
   8a5c0:	1884703a 	and	r2,r3,r2
   8a5c4:	1001703a 	wrctl	status,r2
  
  return context;
   8a5c8:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   8a5cc:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   8a5d0:	d0a00c17 	ldw	r2,-32720(gp)
   8a5d4:	10c000c4 	addi	r3,r2,3
   8a5d8:	00bfff04 	movi	r2,-4
   8a5dc:	1884703a 	and	r2,r3,r2
   8a5e0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   8a5e4:	d0e00c17 	ldw	r3,-32720(gp)
   8a5e8:	e0bffe17 	ldw	r2,-8(fp)
   8a5ec:	1887883a 	add	r3,r3,r2
   8a5f0:	00800434 	movhi	r2,16
   8a5f4:	10800004 	addi	r2,r2,0
   8a5f8:	10c0072e 	bgeu	r2,r3,8a618 <sbrk+0x78>
   8a5fc:	e0bffd17 	ldw	r2,-12(fp)
   8a600:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8a604:	e0bffa17 	ldw	r2,-24(fp)
   8a608:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   8a60c:	00bfffc4 	movi	r2,-1
   8a610:	e0bfff15 	stw	r2,-4(fp)
   8a614:	00000c06 	br	8a648 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   8a618:	d0a00c17 	ldw	r2,-32720(gp)
   8a61c:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   8a620:	d0e00c17 	ldw	r3,-32720(gp)
   8a624:	e0bffe17 	ldw	r2,-8(fp)
   8a628:	1885883a 	add	r2,r3,r2
   8a62c:	d0a00c15 	stw	r2,-32720(gp)
   8a630:	e0bffd17 	ldw	r2,-12(fp)
   8a634:	e0bff915 	stw	r2,-28(fp)
   8a638:	e0bff917 	ldw	r2,-28(fp)
   8a63c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   8a640:	e0bffc17 	ldw	r2,-16(fp)
   8a644:	e0bfff15 	stw	r2,-4(fp)
   8a648:	e0bfff17 	ldw	r2,-4(fp)
} 
   8a64c:	e037883a 	mov	sp,fp
   8a650:	df000017 	ldw	fp,0(sp)
   8a654:	dec00104 	addi	sp,sp,4
   8a658:	f800283a 	ret

0008a65c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   8a65c:	defff704 	addi	sp,sp,-36
   8a660:	dfc00815 	stw	ra,32(sp)
   8a664:	df000715 	stw	fp,28(sp)
   8a668:	df000704 	addi	fp,sp,28
   8a66c:	e13ffb15 	stw	r4,-20(fp)
   8a670:	e17ffc15 	stw	r5,-16(fp)
   8a674:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8a678:	e0bffb17 	ldw	r2,-20(fp)
   8a67c:	1004803a 	cmplt	r2,r2,zero
   8a680:	1000091e 	bne	r2,zero,8a6a8 <write+0x4c>
   8a684:	e13ffb17 	ldw	r4,-20(fp)
   8a688:	01400304 	movi	r5,12
   8a68c:	00895e00 	call	895e0 <__mulsi3>
   8a690:	1007883a 	mov	r3,r2
   8a694:	00800274 	movhi	r2,9
   8a698:	10b46804 	addi	r2,r2,-11872
   8a69c:	1887883a 	add	r3,r3,r2
   8a6a0:	e0ffff15 	stw	r3,-4(fp)
   8a6a4:	00000106 	br	8a6ac <write+0x50>
   8a6a8:	e03fff15 	stw	zero,-4(fp)
   8a6ac:	e0bfff17 	ldw	r2,-4(fp)
   8a6b0:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   8a6b4:	e0bffa17 	ldw	r2,-24(fp)
   8a6b8:	1005003a 	cmpeq	r2,r2,zero
   8a6bc:	1000241e 	bne	r2,zero,8a750 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   8a6c0:	e0bffa17 	ldw	r2,-24(fp)
   8a6c4:	10800217 	ldw	r2,8(r2)
   8a6c8:	108000cc 	andi	r2,r2,3
   8a6cc:	1005003a 	cmpeq	r2,r2,zero
   8a6d0:	10001a1e 	bne	r2,zero,8a73c <write+0xe0>
   8a6d4:	e0bffa17 	ldw	r2,-24(fp)
   8a6d8:	10800017 	ldw	r2,0(r2)
   8a6dc:	10800617 	ldw	r2,24(r2)
   8a6e0:	1005003a 	cmpeq	r2,r2,zero
   8a6e4:	1000151e 	bne	r2,zero,8a73c <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   8a6e8:	e0bffa17 	ldw	r2,-24(fp)
   8a6ec:	10800017 	ldw	r2,0(r2)
   8a6f0:	10800617 	ldw	r2,24(r2)
   8a6f4:	e17ffc17 	ldw	r5,-16(fp)
   8a6f8:	e1bffd17 	ldw	r6,-12(fp)
   8a6fc:	e13ffa17 	ldw	r4,-24(fp)
   8a700:	103ee83a 	callr	r2
   8a704:	e0bff915 	stw	r2,-28(fp)
   8a708:	e0bff917 	ldw	r2,-28(fp)
   8a70c:	1004403a 	cmpge	r2,r2,zero
   8a710:	1000071e 	bne	r2,zero,8a730 <write+0xd4>
      {
        ALT_ERRNO = -rval;
   8a714:	008a7800 	call	8a780 <alt_get_errno>
   8a718:	e0fff917 	ldw	r3,-28(fp)
   8a71c:	00c7c83a 	sub	r3,zero,r3
   8a720:	10c00015 	stw	r3,0(r2)
        return -1;
   8a724:	00bfffc4 	movi	r2,-1
   8a728:	e0bffe15 	stw	r2,-8(fp)
   8a72c:	00000e06 	br	8a768 <write+0x10c>
      }
      return rval;
   8a730:	e0bff917 	ldw	r2,-28(fp)
   8a734:	e0bffe15 	stw	r2,-8(fp)
   8a738:	00000b06 	br	8a768 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
   8a73c:	008a7800 	call	8a780 <alt_get_errno>
   8a740:	1007883a 	mov	r3,r2
   8a744:	00800344 	movi	r2,13
   8a748:	18800015 	stw	r2,0(r3)
   8a74c:	00000406 	br	8a760 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   8a750:	008a7800 	call	8a780 <alt_get_errno>
   8a754:	1007883a 	mov	r3,r2
   8a758:	00801444 	movi	r2,81
   8a75c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8a760:	00bfffc4 	movi	r2,-1
   8a764:	e0bffe15 	stw	r2,-8(fp)
   8a768:	e0bffe17 	ldw	r2,-8(fp)
}
   8a76c:	e037883a 	mov	sp,fp
   8a770:	dfc00117 	ldw	ra,4(sp)
   8a774:	df000017 	ldw	fp,0(sp)
   8a778:	dec00204 	addi	sp,sp,8
   8a77c:	f800283a 	ret

0008a780 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8a780:	defffd04 	addi	sp,sp,-12
   8a784:	dfc00215 	stw	ra,8(sp)
   8a788:	df000115 	stw	fp,4(sp)
   8a78c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8a790:	00800274 	movhi	r2,9
   8a794:	10b8eb04 	addi	r2,r2,-7252
   8a798:	10800017 	ldw	r2,0(r2)
   8a79c:	1005003a 	cmpeq	r2,r2,zero
   8a7a0:	1000061e 	bne	r2,zero,8a7bc <alt_get_errno+0x3c>
   8a7a4:	00800274 	movhi	r2,9
   8a7a8:	10b8eb04 	addi	r2,r2,-7252
   8a7ac:	10800017 	ldw	r2,0(r2)
   8a7b0:	103ee83a 	callr	r2
   8a7b4:	e0bfff15 	stw	r2,-4(fp)
   8a7b8:	00000306 	br	8a7c8 <alt_get_errno+0x48>
   8a7bc:	00800274 	movhi	r2,9
   8a7c0:	10bf8d04 	addi	r2,r2,-460
   8a7c4:	e0bfff15 	stw	r2,-4(fp)
   8a7c8:	e0bfff17 	ldw	r2,-4(fp)
}
   8a7cc:	e037883a 	mov	sp,fp
   8a7d0:	dfc00117 	ldw	ra,4(sp)
   8a7d4:	df000017 	ldw	fp,0(sp)
   8a7d8:	dec00204 	addi	sp,sp,8
   8a7dc:	f800283a 	ret

0008a7e0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   8a7e0:	defffd04 	addi	sp,sp,-12
   8a7e4:	dfc00215 	stw	ra,8(sp)
   8a7e8:	df000115 	stw	fp,4(sp)
   8a7ec:	df000104 	addi	fp,sp,4
   8a7f0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_IRQ_INIT ( CPU_0, cpu_0);
   8a7f4:	008bf480 	call	8bf48 <altera_nios2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   8a7f8:	00800044 	movi	r2,1
   8a7fc:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   8a800:	e037883a 	mov	sp,fp
   8a804:	dfc00117 	ldw	ra,4(sp)
   8a808:	df000017 	ldw	fp,0(sp)
   8a80c:	dec00204 	addi	sp,sp,8
   8a810:	f800283a 	ret

0008a814 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   8a814:	defffe04 	addi	sp,sp,-8
   8a818:	dfc00115 	stw	ra,4(sp)
   8a81c:	df000015 	stw	fp,0(sp)
   8a820:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   8a824:	01000274 	movhi	r4,9
   8a828:	2134d204 	addi	r4,r4,-11448
   8a82c:	000b883a 	mov	r5,zero
   8a830:	000d883a 	mov	r6,zero
   8a834:	008a9d80 	call	8a9d8 <altera_avalon_jtag_uart_init>
   8a838:	01000274 	movhi	r4,9
   8a83c:	2134c804 	addi	r4,r4,-11488
   8a840:	008a8580 	call	8a858 <alt_dev_reg>
}
   8a844:	e037883a 	mov	sp,fp
   8a848:	dfc00117 	ldw	ra,4(sp)
   8a84c:	df000017 	ldw	fp,0(sp)
   8a850:	dec00204 	addi	sp,sp,8
   8a854:	f800283a 	ret

0008a858 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   8a858:	defffd04 	addi	sp,sp,-12
   8a85c:	dfc00215 	stw	ra,8(sp)
   8a860:	df000115 	stw	fp,4(sp)
   8a864:	df000104 	addi	fp,sp,4
   8a868:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   8a86c:	e13fff17 	ldw	r4,-4(fp)
   8a870:	01400274 	movhi	r5,9
   8a874:	2978e804 	addi	r5,r5,-7264
   8a878:	008b4ac0 	call	8b4ac <alt_dev_llist_insert>
}
   8a87c:	e037883a 	mov	sp,fp
   8a880:	dfc00117 	ldw	ra,4(sp)
   8a884:	df000017 	ldw	fp,0(sp)
   8a888:	dec00204 	addi	sp,sp,8
   8a88c:	f800283a 	ret

0008a890 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   8a890:	defffa04 	addi	sp,sp,-24
   8a894:	dfc00515 	stw	ra,20(sp)
   8a898:	df000415 	stw	fp,16(sp)
   8a89c:	df000404 	addi	fp,sp,16
   8a8a0:	e13ffd15 	stw	r4,-12(fp)
   8a8a4:	e17ffe15 	stw	r5,-8(fp)
   8a8a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8a8ac:	e0bffd17 	ldw	r2,-12(fp)
   8a8b0:	10800017 	ldw	r2,0(r2)
   8a8b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   8a8b8:	e0bffc17 	ldw	r2,-16(fp)
   8a8bc:	11000a04 	addi	r4,r2,40
   8a8c0:	e0bffd17 	ldw	r2,-12(fp)
   8a8c4:	11c00217 	ldw	r7,8(r2)
   8a8c8:	e17ffe17 	ldw	r5,-8(fp)
   8a8cc:	e1bfff17 	ldw	r6,-4(fp)
   8a8d0:	008aed80 	call	8aed8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   8a8d4:	e037883a 	mov	sp,fp
   8a8d8:	dfc00117 	ldw	ra,4(sp)
   8a8dc:	df000017 	ldw	fp,0(sp)
   8a8e0:	dec00204 	addi	sp,sp,8
   8a8e4:	f800283a 	ret

0008a8e8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   8a8e8:	defffa04 	addi	sp,sp,-24
   8a8ec:	dfc00515 	stw	ra,20(sp)
   8a8f0:	df000415 	stw	fp,16(sp)
   8a8f4:	df000404 	addi	fp,sp,16
   8a8f8:	e13ffd15 	stw	r4,-12(fp)
   8a8fc:	e17ffe15 	stw	r5,-8(fp)
   8a900:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8a904:	e0bffd17 	ldw	r2,-12(fp)
   8a908:	10800017 	ldw	r2,0(r2)
   8a90c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   8a910:	e0bffc17 	ldw	r2,-16(fp)
   8a914:	11000a04 	addi	r4,r2,40
   8a918:	e0bffd17 	ldw	r2,-12(fp)
   8a91c:	11c00217 	ldw	r7,8(r2)
   8a920:	e17ffe17 	ldw	r5,-8(fp)
   8a924:	e1bfff17 	ldw	r6,-4(fp)
   8a928:	008b0fc0 	call	8b0fc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   8a92c:	e037883a 	mov	sp,fp
   8a930:	dfc00117 	ldw	ra,4(sp)
   8a934:	df000017 	ldw	fp,0(sp)
   8a938:	dec00204 	addi	sp,sp,8
   8a93c:	f800283a 	ret

0008a940 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   8a940:	defffc04 	addi	sp,sp,-16
   8a944:	dfc00315 	stw	ra,12(sp)
   8a948:	df000215 	stw	fp,8(sp)
   8a94c:	df000204 	addi	fp,sp,8
   8a950:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8a954:	e0bfff17 	ldw	r2,-4(fp)
   8a958:	10800017 	ldw	r2,0(r2)
   8a95c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   8a960:	e0bffe17 	ldw	r2,-8(fp)
   8a964:	11000a04 	addi	r4,r2,40
   8a968:	e0bfff17 	ldw	r2,-4(fp)
   8a96c:	11400217 	ldw	r5,8(r2)
   8a970:	008ad700 	call	8ad70 <altera_avalon_jtag_uart_close>
}
   8a974:	e037883a 	mov	sp,fp
   8a978:	dfc00117 	ldw	ra,4(sp)
   8a97c:	df000017 	ldw	fp,0(sp)
   8a980:	dec00204 	addi	sp,sp,8
   8a984:	f800283a 	ret

0008a988 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   8a988:	defffa04 	addi	sp,sp,-24
   8a98c:	dfc00515 	stw	ra,20(sp)
   8a990:	df000415 	stw	fp,16(sp)
   8a994:	df000404 	addi	fp,sp,16
   8a998:	e13ffd15 	stw	r4,-12(fp)
   8a99c:	e17ffe15 	stw	r5,-8(fp)
   8a9a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   8a9a4:	e0bffd17 	ldw	r2,-12(fp)
   8a9a8:	10800017 	ldw	r2,0(r2)
   8a9ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   8a9b0:	e0bffc17 	ldw	r2,-16(fp)
   8a9b4:	11000a04 	addi	r4,r2,40
   8a9b8:	e17ffe17 	ldw	r5,-8(fp)
   8a9bc:	e1bfff17 	ldw	r6,-4(fp)
   8a9c0:	008ade40 	call	8ade4 <altera_avalon_jtag_uart_ioctl>
}
   8a9c4:	e037883a 	mov	sp,fp
   8a9c8:	dfc00117 	ldw	ra,4(sp)
   8a9cc:	df000017 	ldw	fp,0(sp)
   8a9d0:	dec00204 	addi	sp,sp,8
   8a9d4:	f800283a 	ret

0008a9d8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   8a9d8:	defffa04 	addi	sp,sp,-24
   8a9dc:	dfc00515 	stw	ra,20(sp)
   8a9e0:	df000415 	stw	fp,16(sp)
   8a9e4:	df000404 	addi	fp,sp,16
   8a9e8:	e13ffd15 	stw	r4,-12(fp)
   8a9ec:	e17ffe15 	stw	r5,-8(fp)
   8a9f0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8a9f4:	e0fffd17 	ldw	r3,-12(fp)
   8a9f8:	00800044 	movi	r2,1
   8a9fc:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   8aa00:	e0bffd17 	ldw	r2,-12(fp)
   8aa04:	10800017 	ldw	r2,0(r2)
   8aa08:	11000104 	addi	r4,r2,4
   8aa0c:	e0bffd17 	ldw	r2,-12(fp)
   8aa10:	10800817 	ldw	r2,32(r2)
   8aa14:	1007883a 	mov	r3,r2
   8aa18:	2005883a 	mov	r2,r4
   8aa1c:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   8aa20:	e13ffe17 	ldw	r4,-8(fp)
   8aa24:	e17fff17 	ldw	r5,-4(fp)
   8aa28:	d8000015 	stw	zero,0(sp)
   8aa2c:	01800274 	movhi	r6,9
   8aa30:	31aaa604 	addi	r6,r6,-21864
   8aa34:	e1fffd17 	ldw	r7,-12(fp)
   8aa38:	008b6a40 	call	8b6a4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   8aa3c:	e0bffd17 	ldw	r2,-12(fp)
   8aa40:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   8aa44:	e0bffd17 	ldw	r2,-12(fp)
   8aa48:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8aa4c:	00800274 	movhi	r2,9
   8aa50:	10bf9204 	addi	r2,r2,-440
   8aa54:	10800017 	ldw	r2,0(r2)
   8aa58:	100b883a 	mov	r5,r2
   8aa5c:	01800274 	movhi	r6,9
   8aa60:	31ab3004 	addi	r6,r6,-21312
   8aa64:	e1fffd17 	ldw	r7,-12(fp)
   8aa68:	008b33c0 	call	8b33c <alt_alarm_start>
   8aa6c:	1004403a 	cmpge	r2,r2,zero
   8aa70:	1000041e 	bne	r2,zero,8aa84 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   8aa74:	e0fffd17 	ldw	r3,-12(fp)
   8aa78:	00a00034 	movhi	r2,32768
   8aa7c:	10bfffc4 	addi	r2,r2,-1
   8aa80:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   8aa84:	e037883a 	mov	sp,fp
   8aa88:	dfc00117 	ldw	ra,4(sp)
   8aa8c:	df000017 	ldw	fp,0(sp)
   8aa90:	dec00204 	addi	sp,sp,8
   8aa94:	f800283a 	ret

0008aa98 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   8aa98:	defff804 	addi	sp,sp,-32
   8aa9c:	df000715 	stw	fp,28(sp)
   8aaa0:	df000704 	addi	fp,sp,28
   8aaa4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   8aaa8:	e0bfff17 	ldw	r2,-4(fp)
   8aaac:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   8aab0:	e0bffe17 	ldw	r2,-8(fp)
   8aab4:	10800017 	ldw	r2,0(r2)
   8aab8:	e0bffd15 	stw	r2,-12(fp)
   8aabc:	00000006 	br	8aac0 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8aac0:	e0bffd17 	ldw	r2,-12(fp)
   8aac4:	10800104 	addi	r2,r2,4
   8aac8:	10800037 	ldwio	r2,0(r2)
   8aacc:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   8aad0:	e0bffc17 	ldw	r2,-16(fp)
   8aad4:	1080c00c 	andi	r2,r2,768
   8aad8:	1005003a 	cmpeq	r2,r2,zero
   8aadc:	1000741e 	bne	r2,zero,8acb0 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   8aae0:	e0bffc17 	ldw	r2,-16(fp)
   8aae4:	1080400c 	andi	r2,r2,256
   8aae8:	1005003a 	cmpeq	r2,r2,zero
   8aaec:	1000351e 	bne	r2,zero,8abc4 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   8aaf0:	00800074 	movhi	r2,1
   8aaf4:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8aaf8:	e0bffe17 	ldw	r2,-8(fp)
   8aafc:	10800a17 	ldw	r2,40(r2)
   8ab00:	10800044 	addi	r2,r2,1
   8ab04:	1081ffcc 	andi	r2,r2,2047
   8ab08:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   8ab0c:	e0bffe17 	ldw	r2,-8(fp)
   8ab10:	10c00b17 	ldw	r3,44(r2)
   8ab14:	e0bffa17 	ldw	r2,-24(fp)
   8ab18:	18801626 	beq	r3,r2,8ab74 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   8ab1c:	e0bffd17 	ldw	r2,-12(fp)
   8ab20:	10800037 	ldwio	r2,0(r2)
   8ab24:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   8ab28:	e0bffb17 	ldw	r2,-20(fp)
   8ab2c:	10a0000c 	andi	r2,r2,32768
   8ab30:	1005003a 	cmpeq	r2,r2,zero
   8ab34:	10000f1e 	bne	r2,zero,8ab74 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   8ab38:	e0bffe17 	ldw	r2,-8(fp)
   8ab3c:	10c00a17 	ldw	r3,40(r2)
   8ab40:	e0bffb17 	ldw	r2,-20(fp)
   8ab44:	1009883a 	mov	r4,r2
   8ab48:	e0bffe17 	ldw	r2,-8(fp)
   8ab4c:	1885883a 	add	r2,r3,r2
   8ab50:	10800e04 	addi	r2,r2,56
   8ab54:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8ab58:	e0bffe17 	ldw	r2,-8(fp)
   8ab5c:	10800a17 	ldw	r2,40(r2)
   8ab60:	10800044 	addi	r2,r2,1
   8ab64:	10c1ffcc 	andi	r3,r2,2047
   8ab68:	e0bffe17 	ldw	r2,-8(fp)
   8ab6c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   8ab70:	003fe106 	br	8aaf8 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   8ab74:	e0bffb17 	ldw	r2,-20(fp)
   8ab78:	10bfffec 	andhi	r2,r2,65535
   8ab7c:	1005003a 	cmpeq	r2,r2,zero
   8ab80:	1000101e 	bne	r2,zero,8abc4 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8ab84:	e0bffe17 	ldw	r2,-8(fp)
   8ab88:	10c00817 	ldw	r3,32(r2)
   8ab8c:	00bfff84 	movi	r2,-2
   8ab90:	1886703a 	and	r3,r3,r2
   8ab94:	e0bffe17 	ldw	r2,-8(fp)
   8ab98:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   8ab9c:	e0bffd17 	ldw	r2,-12(fp)
   8aba0:	11000104 	addi	r4,r2,4
   8aba4:	e0bffe17 	ldw	r2,-8(fp)
   8aba8:	10800817 	ldw	r2,32(r2)
   8abac:	1007883a 	mov	r3,r2
   8abb0:	2005883a 	mov	r2,r4
   8abb4:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8abb8:	e0bffd17 	ldw	r2,-12(fp)
   8abbc:	10800104 	addi	r2,r2,4
   8abc0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   8abc4:	e0bffc17 	ldw	r2,-16(fp)
   8abc8:	1080800c 	andi	r2,r2,512
   8abcc:	1005003a 	cmpeq	r2,r2,zero
   8abd0:	103fbb1e 	bne	r2,zero,8aac0 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   8abd4:	e0bffc17 	ldw	r2,-16(fp)
   8abd8:	10bfffec 	andhi	r2,r2,65535
   8abdc:	1004d43a 	srli	r2,r2,16
   8abe0:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   8abe4:	00001506 	br	8ac3c <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   8abe8:	e13ffd17 	ldw	r4,-12(fp)
   8abec:	e0bffe17 	ldw	r2,-8(fp)
   8abf0:	10c00d17 	ldw	r3,52(r2)
   8abf4:	e0bffe17 	ldw	r2,-8(fp)
   8abf8:	1885883a 	add	r2,r3,r2
   8abfc:	10820e04 	addi	r2,r2,2104
   8ac00:	10800003 	ldbu	r2,0(r2)
   8ac04:	10c03fcc 	andi	r3,r2,255
   8ac08:	18c0201c 	xori	r3,r3,128
   8ac0c:	18ffe004 	addi	r3,r3,-128
   8ac10:	2005883a 	mov	r2,r4
   8ac14:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8ac18:	e0bffe17 	ldw	r2,-8(fp)
   8ac1c:	10800d17 	ldw	r2,52(r2)
   8ac20:	10800044 	addi	r2,r2,1
   8ac24:	10c1ffcc 	andi	r3,r2,2047
   8ac28:	e0bffe17 	ldw	r2,-8(fp)
   8ac2c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   8ac30:	e0bff917 	ldw	r2,-28(fp)
   8ac34:	10bfffc4 	addi	r2,r2,-1
   8ac38:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   8ac3c:	e0bff917 	ldw	r2,-28(fp)
   8ac40:	1005003a 	cmpeq	r2,r2,zero
   8ac44:	1000051e 	bne	r2,zero,8ac5c <altera_avalon_jtag_uart_irq+0x1c4>
   8ac48:	e0bffe17 	ldw	r2,-8(fp)
   8ac4c:	10c00d17 	ldw	r3,52(r2)
   8ac50:	e0bffe17 	ldw	r2,-8(fp)
   8ac54:	10800c17 	ldw	r2,48(r2)
   8ac58:	18bfe31e 	bne	r3,r2,8abe8 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   8ac5c:	e0bff917 	ldw	r2,-28(fp)
   8ac60:	1005003a 	cmpeq	r2,r2,zero
   8ac64:	103f961e 	bne	r2,zero,8aac0 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8ac68:	e0bffe17 	ldw	r2,-8(fp)
   8ac6c:	10c00817 	ldw	r3,32(r2)
   8ac70:	00bfff44 	movi	r2,-3
   8ac74:	1886703a 	and	r3,r3,r2
   8ac78:	e0bffe17 	ldw	r2,-8(fp)
   8ac7c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8ac80:	e0bffe17 	ldw	r2,-8(fp)
   8ac84:	10800017 	ldw	r2,0(r2)
   8ac88:	11000104 	addi	r4,r2,4
   8ac8c:	e0bffe17 	ldw	r2,-8(fp)
   8ac90:	10800817 	ldw	r2,32(r2)
   8ac94:	1007883a 	mov	r3,r2
   8ac98:	2005883a 	mov	r2,r4
   8ac9c:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8aca0:	e0bffd17 	ldw	r2,-12(fp)
   8aca4:	10800104 	addi	r2,r2,4
   8aca8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   8acac:	003f8406 	br	8aac0 <altera_avalon_jtag_uart_irq+0x28>
}
   8acb0:	e037883a 	mov	sp,fp
   8acb4:	df000017 	ldw	fp,0(sp)
   8acb8:	dec00104 	addi	sp,sp,4
   8acbc:	f800283a 	ret

0008acc0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   8acc0:	defffc04 	addi	sp,sp,-16
   8acc4:	df000315 	stw	fp,12(sp)
   8acc8:	df000304 	addi	fp,sp,12
   8accc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   8acd0:	e0bfff17 	ldw	r2,-4(fp)
   8acd4:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   8acd8:	e0bffe17 	ldw	r2,-8(fp)
   8acdc:	10800017 	ldw	r2,0(r2)
   8ace0:	10800104 	addi	r2,r2,4
   8ace4:	10800037 	ldwio	r2,0(r2)
   8ace8:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   8acec:	e0bffd17 	ldw	r2,-12(fp)
   8acf0:	1081000c 	andi	r2,r2,1024
   8acf4:	1005003a 	cmpeq	r2,r2,zero
   8acf8:	10000c1e 	bne	r2,zero,8ad2c <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   8acfc:	e0bffe17 	ldw	r2,-8(fp)
   8ad00:	10800017 	ldw	r2,0(r2)
   8ad04:	11000104 	addi	r4,r2,4
   8ad08:	e0bffe17 	ldw	r2,-8(fp)
   8ad0c:	10800817 	ldw	r2,32(r2)
   8ad10:	10810014 	ori	r2,r2,1024
   8ad14:	1007883a 	mov	r3,r2
   8ad18:	2005883a 	mov	r2,r4
   8ad1c:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   8ad20:	e0bffe17 	ldw	r2,-8(fp)
   8ad24:	10000915 	stw	zero,36(r2)
   8ad28:	00000a06 	br	8ad54 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   8ad2c:	e0bffe17 	ldw	r2,-8(fp)
   8ad30:	10c00917 	ldw	r3,36(r2)
   8ad34:	00a00034 	movhi	r2,32768
   8ad38:	10bfff04 	addi	r2,r2,-4
   8ad3c:	10c00536 	bltu	r2,r3,8ad54 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   8ad40:	e0bffe17 	ldw	r2,-8(fp)
   8ad44:	10800917 	ldw	r2,36(r2)
   8ad48:	10c00044 	addi	r3,r2,1
   8ad4c:	e0bffe17 	ldw	r2,-8(fp)
   8ad50:	10c00915 	stw	r3,36(r2)
   8ad54:	00800274 	movhi	r2,9
   8ad58:	10bf9204 	addi	r2,r2,-440
   8ad5c:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   8ad60:	e037883a 	mov	sp,fp
   8ad64:	df000017 	ldw	fp,0(sp)
   8ad68:	dec00104 	addi	sp,sp,4
   8ad6c:	f800283a 	ret

0008ad70 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   8ad70:	defffc04 	addi	sp,sp,-16
   8ad74:	df000315 	stw	fp,12(sp)
   8ad78:	df000304 	addi	fp,sp,12
   8ad7c:	e13ffd15 	stw	r4,-12(fp)
   8ad80:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8ad84:	00000706 	br	8ada4 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   8ad88:	e0bffe17 	ldw	r2,-8(fp)
   8ad8c:	1090000c 	andi	r2,r2,16384
   8ad90:	1005003a 	cmpeq	r2,r2,zero
   8ad94:	1000031e 	bne	r2,zero,8ada4 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   8ad98:	00bffd44 	movi	r2,-11
   8ad9c:	e0bfff15 	stw	r2,-4(fp)
   8ada0:	00000b06 	br	8add0 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8ada4:	e0bffd17 	ldw	r2,-12(fp)
   8ada8:	10c00d17 	ldw	r3,52(r2)
   8adac:	e0bffd17 	ldw	r2,-12(fp)
   8adb0:	10800c17 	ldw	r2,48(r2)
   8adb4:	18800526 	beq	r3,r2,8adcc <altera_avalon_jtag_uart_close+0x5c>
   8adb8:	e0bffd17 	ldw	r2,-12(fp)
   8adbc:	10c00917 	ldw	r3,36(r2)
   8adc0:	e0bffd17 	ldw	r2,-12(fp)
   8adc4:	10800117 	ldw	r2,4(r2)
   8adc8:	18bfef36 	bltu	r3,r2,8ad88 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   8adcc:	e03fff15 	stw	zero,-4(fp)
   8add0:	e0bfff17 	ldw	r2,-4(fp)
}
   8add4:	e037883a 	mov	sp,fp
   8add8:	df000017 	ldw	fp,0(sp)
   8addc:	dec00104 	addi	sp,sp,4
   8ade0:	f800283a 	ret

0008ade4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   8ade4:	defff804 	addi	sp,sp,-32
   8ade8:	df000715 	stw	fp,28(sp)
   8adec:	df000704 	addi	fp,sp,28
   8adf0:	e13ffb15 	stw	r4,-20(fp)
   8adf4:	e17ffc15 	stw	r5,-16(fp)
   8adf8:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   8adfc:	00bff9c4 	movi	r2,-25
   8ae00:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   8ae04:	e0bffc17 	ldw	r2,-16(fp)
   8ae08:	e0bfff15 	stw	r2,-4(fp)
   8ae0c:	e0ffff17 	ldw	r3,-4(fp)
   8ae10:	189a8060 	cmpeqi	r2,r3,27137
   8ae14:	1000041e 	bne	r2,zero,8ae28 <altera_avalon_jtag_uart_ioctl+0x44>
   8ae18:	e0ffff17 	ldw	r3,-4(fp)
   8ae1c:	189a80a0 	cmpeqi	r2,r3,27138
   8ae20:	10001b1e 	bne	r2,zero,8ae90 <altera_avalon_jtag_uart_ioctl+0xac>
   8ae24:	00002706 	br	8aec4 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   8ae28:	e0bffb17 	ldw	r2,-20(fp)
   8ae2c:	10c00117 	ldw	r3,4(r2)
   8ae30:	00a00034 	movhi	r2,32768
   8ae34:	10bfffc4 	addi	r2,r2,-1
   8ae38:	18802226 	beq	r3,r2,8aec4 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   8ae3c:	e0bffd17 	ldw	r2,-12(fp)
   8ae40:	10800017 	ldw	r2,0(r2)
   8ae44:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   8ae48:	e0bff917 	ldw	r2,-28(fp)
   8ae4c:	10800090 	cmplti	r2,r2,2
   8ae50:	1000071e 	bne	r2,zero,8ae70 <altera_avalon_jtag_uart_ioctl+0x8c>
   8ae54:	e0fff917 	ldw	r3,-28(fp)
   8ae58:	00a00034 	movhi	r2,32768
   8ae5c:	10bfffc4 	addi	r2,r2,-1
   8ae60:	18800326 	beq	r3,r2,8ae70 <altera_avalon_jtag_uart_ioctl+0x8c>
   8ae64:	e0bff917 	ldw	r2,-28(fp)
   8ae68:	e0bffe15 	stw	r2,-8(fp)
   8ae6c:	00000306 	br	8ae7c <altera_avalon_jtag_uart_ioctl+0x98>
   8ae70:	00e00034 	movhi	r3,32768
   8ae74:	18ffff84 	addi	r3,r3,-2
   8ae78:	e0fffe15 	stw	r3,-8(fp)
   8ae7c:	e0bffb17 	ldw	r2,-20(fp)
   8ae80:	e0fffe17 	ldw	r3,-8(fp)
   8ae84:	10c00115 	stw	r3,4(r2)
      rc = 0;
   8ae88:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   8ae8c:	00000d06 	br	8aec4 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   8ae90:	e0bffb17 	ldw	r2,-20(fp)
   8ae94:	10c00117 	ldw	r3,4(r2)
   8ae98:	00a00034 	movhi	r2,32768
   8ae9c:	10bfffc4 	addi	r2,r2,-1
   8aea0:	18800826 	beq	r3,r2,8aec4 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   8aea4:	e13ffd17 	ldw	r4,-12(fp)
   8aea8:	e0bffb17 	ldw	r2,-20(fp)
   8aeac:	10c00917 	ldw	r3,36(r2)
   8aeb0:	e0bffb17 	ldw	r2,-20(fp)
   8aeb4:	10800117 	ldw	r2,4(r2)
   8aeb8:	1885803a 	cmpltu	r2,r3,r2
   8aebc:	20800015 	stw	r2,0(r4)
      rc = 0;
   8aec0:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   8aec4:	e0bffa17 	ldw	r2,-24(fp)
}
   8aec8:	e037883a 	mov	sp,fp
   8aecc:	df000017 	ldw	fp,0(sp)
   8aed0:	dec00104 	addi	sp,sp,4
   8aed4:	f800283a 	ret

0008aed8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   8aed8:	defff204 	addi	sp,sp,-56
   8aedc:	dfc00d15 	stw	ra,52(sp)
   8aee0:	df000c15 	stw	fp,48(sp)
   8aee4:	df000c04 	addi	fp,sp,48
   8aee8:	e13ffb15 	stw	r4,-20(fp)
   8aeec:	e17ffc15 	stw	r5,-16(fp)
   8aef0:	e1bffd15 	stw	r6,-12(fp)
   8aef4:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   8aef8:	e0bffc17 	ldw	r2,-16(fp)
   8aefc:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8af00:	00004806 	br	8b024 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   8af04:	e0bffb17 	ldw	r2,-20(fp)
   8af08:	10800a17 	ldw	r2,40(r2)
   8af0c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   8af10:	e0bffb17 	ldw	r2,-20(fp)
   8af14:	10800b17 	ldw	r2,44(r2)
   8af18:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   8af1c:	e0fff717 	ldw	r3,-36(fp)
   8af20:	e0bff617 	ldw	r2,-40(fp)
   8af24:	18800536 	bltu	r3,r2,8af3c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   8af28:	e0bff717 	ldw	r2,-36(fp)
   8af2c:	e0fff617 	ldw	r3,-40(fp)
   8af30:	10c5c83a 	sub	r2,r2,r3
   8af34:	e0bff815 	stw	r2,-32(fp)
   8af38:	00000406 	br	8af4c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   8af3c:	00820004 	movi	r2,2048
   8af40:	e0fff617 	ldw	r3,-40(fp)
   8af44:	10c5c83a 	sub	r2,r2,r3
   8af48:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   8af4c:	e0bff817 	ldw	r2,-32(fp)
   8af50:	1005003a 	cmpeq	r2,r2,zero
   8af54:	10001f1e 	bne	r2,zero,8afd4 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   8af58:	e0fffd17 	ldw	r3,-12(fp)
   8af5c:	e0bff817 	ldw	r2,-32(fp)
   8af60:	1880022e 	bgeu	r3,r2,8af6c <altera_avalon_jtag_uart_read+0x94>
        n = space;
   8af64:	e0bffd17 	ldw	r2,-12(fp)
   8af68:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   8af6c:	e0bffb17 	ldw	r2,-20(fp)
   8af70:	10c00e04 	addi	r3,r2,56
   8af74:	e0bff617 	ldw	r2,-40(fp)
   8af78:	1887883a 	add	r3,r3,r2
   8af7c:	e0bffa17 	ldw	r2,-24(fp)
   8af80:	1009883a 	mov	r4,r2
   8af84:	180b883a 	mov	r5,r3
   8af88:	e1bff817 	ldw	r6,-32(fp)
   8af8c:	00856740 	call	85674 <memcpy>
      ptr   += n;
   8af90:	e0fff817 	ldw	r3,-32(fp)
   8af94:	e0bffa17 	ldw	r2,-24(fp)
   8af98:	10c5883a 	add	r2,r2,r3
   8af9c:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   8afa0:	e0fffd17 	ldw	r3,-12(fp)
   8afa4:	e0bff817 	ldw	r2,-32(fp)
   8afa8:	1885c83a 	sub	r2,r3,r2
   8afac:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8afb0:	e0fff617 	ldw	r3,-40(fp)
   8afb4:	e0bff817 	ldw	r2,-32(fp)
   8afb8:	1885883a 	add	r2,r3,r2
   8afbc:	10c1ffcc 	andi	r3,r2,2047
   8afc0:	e0bffb17 	ldw	r2,-20(fp)
   8afc4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   8afc8:	e0bffd17 	ldw	r2,-12(fp)
   8afcc:	10800048 	cmpgei	r2,r2,1
   8afd0:	103fcc1e 	bne	r2,zero,8af04 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   8afd4:	e0fffa17 	ldw	r3,-24(fp)
   8afd8:	e0bffc17 	ldw	r2,-16(fp)
   8afdc:	1880141e 	bne	r3,r2,8b030 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   8afe0:	e0bffe17 	ldw	r2,-8(fp)
   8afe4:	1090000c 	andi	r2,r2,16384
   8afe8:	1004c03a 	cmpne	r2,r2,zero
   8afec:	1000101e 	bne	r2,zero,8b030 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   8aff0:	e0bffb17 	ldw	r2,-20(fp)
   8aff4:	10c00a17 	ldw	r3,40(r2)
   8aff8:	e0bff717 	ldw	r2,-36(fp)
   8affc:	1880051e 	bne	r3,r2,8b014 <altera_avalon_jtag_uart_read+0x13c>
   8b000:	e0bffb17 	ldw	r2,-20(fp)
   8b004:	10c00917 	ldw	r3,36(r2)
   8b008:	e0bffb17 	ldw	r2,-20(fp)
   8b00c:	10800117 	ldw	r2,4(r2)
   8b010:	18bff736 	bltu	r3,r2,8aff0 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   8b014:	e0bffb17 	ldw	r2,-20(fp)
   8b018:	10c00a17 	ldw	r3,40(r2)
   8b01c:	e0bff717 	ldw	r2,-36(fp)
   8b020:	18800326 	beq	r3,r2,8b030 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8b024:	e0bffd17 	ldw	r2,-12(fp)
   8b028:	10800048 	cmpgei	r2,r2,1
   8b02c:	103fb51e 	bne	r2,zero,8af04 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   8b030:	e0fffa17 	ldw	r3,-24(fp)
   8b034:	e0bffc17 	ldw	r2,-16(fp)
   8b038:	18801926 	beq	r3,r2,8b0a0 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8b03c:	0005303a 	rdctl	r2,status
   8b040:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8b044:	e0fff517 	ldw	r3,-44(fp)
   8b048:	00bfff84 	movi	r2,-2
   8b04c:	1884703a 	and	r2,r3,r2
   8b050:	1001703a 	wrctl	status,r2
  
  return context;
   8b054:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   8b058:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8b05c:	e0bffb17 	ldw	r2,-20(fp)
   8b060:	10800817 	ldw	r2,32(r2)
   8b064:	10c00054 	ori	r3,r2,1
   8b068:	e0bffb17 	ldw	r2,-20(fp)
   8b06c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8b070:	e0bffb17 	ldw	r2,-20(fp)
   8b074:	10800017 	ldw	r2,0(r2)
   8b078:	11000104 	addi	r4,r2,4
   8b07c:	e0bffb17 	ldw	r2,-20(fp)
   8b080:	10800817 	ldw	r2,32(r2)
   8b084:	1007883a 	mov	r3,r2
   8b088:	2005883a 	mov	r2,r4
   8b08c:	10c00035 	stwio	r3,0(r2)
   8b090:	e0bff917 	ldw	r2,-28(fp)
   8b094:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8b098:	e0bff417 	ldw	r2,-48(fp)
   8b09c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   8b0a0:	e0fffa17 	ldw	r3,-24(fp)
   8b0a4:	e0bffc17 	ldw	r2,-16(fp)
   8b0a8:	18800526 	beq	r3,r2,8b0c0 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   8b0ac:	e0fffa17 	ldw	r3,-24(fp)
   8b0b0:	e0bffc17 	ldw	r2,-16(fp)
   8b0b4:	1887c83a 	sub	r3,r3,r2
   8b0b8:	e0ffff15 	stw	r3,-4(fp)
   8b0bc:	00000906 	br	8b0e4 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   8b0c0:	e0bffe17 	ldw	r2,-8(fp)
   8b0c4:	1090000c 	andi	r2,r2,16384
   8b0c8:	1005003a 	cmpeq	r2,r2,zero
   8b0cc:	1000031e 	bne	r2,zero,8b0dc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   8b0d0:	00bffd44 	movi	r2,-11
   8b0d4:	e0bfff15 	stw	r2,-4(fp)
   8b0d8:	00000206 	br	8b0e4 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   8b0dc:	00bffec4 	movi	r2,-5
   8b0e0:	e0bfff15 	stw	r2,-4(fp)
   8b0e4:	e0bfff17 	ldw	r2,-4(fp)
}
   8b0e8:	e037883a 	mov	sp,fp
   8b0ec:	dfc00117 	ldw	ra,4(sp)
   8b0f0:	df000017 	ldw	fp,0(sp)
   8b0f4:	dec00204 	addi	sp,sp,8
   8b0f8:	f800283a 	ret

0008b0fc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   8b0fc:	defff204 	addi	sp,sp,-56
   8b100:	dfc00d15 	stw	ra,52(sp)
   8b104:	df000c15 	stw	fp,48(sp)
   8b108:	df000c04 	addi	fp,sp,48
   8b10c:	e13ffb15 	stw	r4,-20(fp)
   8b110:	e17ffc15 	stw	r5,-16(fp)
   8b114:	e1bffd15 	stw	r6,-12(fp)
   8b118:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   8b11c:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   8b120:	e0bffc17 	ldw	r2,-16(fp)
   8b124:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8b128:	00003a06 	br	8b214 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   8b12c:	e0bffb17 	ldw	r2,-20(fp)
   8b130:	10800c17 	ldw	r2,48(r2)
   8b134:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   8b138:	e0bffb17 	ldw	r2,-20(fp)
   8b13c:	10800d17 	ldw	r2,52(r2)
   8b140:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   8b144:	e0fffa17 	ldw	r3,-24(fp)
   8b148:	e0bff917 	ldw	r2,-28(fp)
   8b14c:	1880062e 	bgeu	r3,r2,8b168 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   8b150:	e0fff917 	ldw	r3,-28(fp)
   8b154:	e0bffa17 	ldw	r2,-24(fp)
   8b158:	1885c83a 	sub	r2,r3,r2
   8b15c:	10bfffc4 	addi	r2,r2,-1
   8b160:	e0bff815 	stw	r2,-32(fp)
   8b164:	00000c06 	br	8b198 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   8b168:	e0bff917 	ldw	r2,-28(fp)
   8b16c:	1005003a 	cmpeq	r2,r2,zero
   8b170:	1000051e 	bne	r2,zero,8b188 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   8b174:	00820004 	movi	r2,2048
   8b178:	e0fffa17 	ldw	r3,-24(fp)
   8b17c:	10c5c83a 	sub	r2,r2,r3
   8b180:	e0bff815 	stw	r2,-32(fp)
   8b184:	00000406 	br	8b198 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   8b188:	0081ffc4 	movi	r2,2047
   8b18c:	e0fffa17 	ldw	r3,-24(fp)
   8b190:	10c5c83a 	sub	r2,r2,r3
   8b194:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   8b198:	e0bff817 	ldw	r2,-32(fp)
   8b19c:	1005003a 	cmpeq	r2,r2,zero
   8b1a0:	10001f1e 	bne	r2,zero,8b220 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   8b1a4:	e0fffd17 	ldw	r3,-12(fp)
   8b1a8:	e0bff817 	ldw	r2,-32(fp)
   8b1ac:	1880022e 	bgeu	r3,r2,8b1b8 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   8b1b0:	e0bffd17 	ldw	r2,-12(fp)
   8b1b4:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   8b1b8:	e0bffb17 	ldw	r2,-20(fp)
   8b1bc:	10c20e04 	addi	r3,r2,2104
   8b1c0:	e0bffa17 	ldw	r2,-24(fp)
   8b1c4:	1885883a 	add	r2,r3,r2
   8b1c8:	e0fffc17 	ldw	r3,-16(fp)
   8b1cc:	1009883a 	mov	r4,r2
   8b1d0:	180b883a 	mov	r5,r3
   8b1d4:	e1bff817 	ldw	r6,-32(fp)
   8b1d8:	00856740 	call	85674 <memcpy>
      ptr   += n;
   8b1dc:	e0fff817 	ldw	r3,-32(fp)
   8b1e0:	e0bffc17 	ldw	r2,-16(fp)
   8b1e4:	10c5883a 	add	r2,r2,r3
   8b1e8:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   8b1ec:	e0fffd17 	ldw	r3,-12(fp)
   8b1f0:	e0bff817 	ldw	r2,-32(fp)
   8b1f4:	1885c83a 	sub	r2,r3,r2
   8b1f8:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8b1fc:	e0fffa17 	ldw	r3,-24(fp)
   8b200:	e0bff817 	ldw	r2,-32(fp)
   8b204:	1885883a 	add	r2,r3,r2
   8b208:	10c1ffcc 	andi	r3,r2,2047
   8b20c:	e0bffb17 	ldw	r2,-20(fp)
   8b210:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8b214:	e0bffd17 	ldw	r2,-12(fp)
   8b218:	10800048 	cmpgei	r2,r2,1
   8b21c:	103fc31e 	bne	r2,zero,8b12c <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8b220:	0005303a 	rdctl	r2,status
   8b224:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8b228:	e0fff517 	ldw	r3,-44(fp)
   8b22c:	00bfff84 	movi	r2,-2
   8b230:	1884703a 	and	r2,r3,r2
   8b234:	1001703a 	wrctl	status,r2
  
  return context;
   8b238:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   8b23c:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8b240:	e0bffb17 	ldw	r2,-20(fp)
   8b244:	10800817 	ldw	r2,32(r2)
   8b248:	10c00094 	ori	r3,r2,2
   8b24c:	e0bffb17 	ldw	r2,-20(fp)
   8b250:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8b254:	e0bffb17 	ldw	r2,-20(fp)
   8b258:	10800017 	ldw	r2,0(r2)
   8b25c:	11000104 	addi	r4,r2,4
   8b260:	e0bffb17 	ldw	r2,-20(fp)
   8b264:	10800817 	ldw	r2,32(r2)
   8b268:	1007883a 	mov	r3,r2
   8b26c:	2005883a 	mov	r2,r4
   8b270:	10c00035 	stwio	r3,0(r2)
   8b274:	e0bff717 	ldw	r2,-36(fp)
   8b278:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8b27c:	e0bff417 	ldw	r2,-48(fp)
   8b280:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   8b284:	e0bffd17 	ldw	r2,-12(fp)
   8b288:	10800050 	cmplti	r2,r2,1
   8b28c:	1000111e 	bne	r2,zero,8b2d4 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   8b290:	e0bffe17 	ldw	r2,-8(fp)
   8b294:	1090000c 	andi	r2,r2,16384
   8b298:	1004c03a 	cmpne	r2,r2,zero
   8b29c:	1000101e 	bne	r2,zero,8b2e0 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   8b2a0:	e0bffb17 	ldw	r2,-20(fp)
   8b2a4:	10c00d17 	ldw	r3,52(r2)
   8b2a8:	e0bff917 	ldw	r2,-28(fp)
   8b2ac:	1880051e 	bne	r3,r2,8b2c4 <altera_avalon_jtag_uart_write+0x1c8>
   8b2b0:	e0bffb17 	ldw	r2,-20(fp)
   8b2b4:	10c00917 	ldw	r3,36(r2)
   8b2b8:	e0bffb17 	ldw	r2,-20(fp)
   8b2bc:	10800117 	ldw	r2,4(r2)
   8b2c0:	18bff736 	bltu	r3,r2,8b2a0 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   8b2c4:	e0bffb17 	ldw	r2,-20(fp)
   8b2c8:	10c00d17 	ldw	r3,52(r2)
   8b2cc:	e0bff917 	ldw	r2,-28(fp)
   8b2d0:	18800326 	beq	r3,r2,8b2e0 <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
   8b2d4:	e0bffd17 	ldw	r2,-12(fp)
   8b2d8:	10800048 	cmpgei	r2,r2,1
   8b2dc:	103fcd1e 	bne	r2,zero,8b214 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   8b2e0:	e0fffc17 	ldw	r3,-16(fp)
   8b2e4:	e0bff617 	ldw	r2,-40(fp)
   8b2e8:	18800526 	beq	r3,r2,8b300 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   8b2ec:	e0fffc17 	ldw	r3,-16(fp)
   8b2f0:	e0bff617 	ldw	r2,-40(fp)
   8b2f4:	1887c83a 	sub	r3,r3,r2
   8b2f8:	e0ffff15 	stw	r3,-4(fp)
   8b2fc:	00000906 	br	8b324 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   8b300:	e0bffe17 	ldw	r2,-8(fp)
   8b304:	1090000c 	andi	r2,r2,16384
   8b308:	1005003a 	cmpeq	r2,r2,zero
   8b30c:	1000031e 	bne	r2,zero,8b31c <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   8b310:	00bffd44 	movi	r2,-11
   8b314:	e0bfff15 	stw	r2,-4(fp)
   8b318:	00000206 	br	8b324 <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
   8b31c:	00bffec4 	movi	r2,-5
   8b320:	e0bfff15 	stw	r2,-4(fp)
   8b324:	e0bfff17 	ldw	r2,-4(fp)
}
   8b328:	e037883a 	mov	sp,fp
   8b32c:	dfc00117 	ldw	ra,4(sp)
   8b330:	df000017 	ldw	fp,0(sp)
   8b334:	dec00204 	addi	sp,sp,8
   8b338:	f800283a 	ret

0008b33c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   8b33c:	defff404 	addi	sp,sp,-48
   8b340:	df000b15 	stw	fp,44(sp)
   8b344:	df000b04 	addi	fp,sp,44
   8b348:	e13ffb15 	stw	r4,-20(fp)
   8b34c:	e17ffc15 	stw	r5,-16(fp)
   8b350:	e1bffd15 	stw	r6,-12(fp)
   8b354:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   8b358:	e03ff915 	stw	zero,-28(fp)
   8b35c:	00800274 	movhi	r2,9
   8b360:	10bf9204 	addi	r2,r2,-440
   8b364:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   8b368:	1005003a 	cmpeq	r2,r2,zero
   8b36c:	1000411e 	bne	r2,zero,8b474 <alt_alarm_start+0x138>
  {
    if (alarm)
   8b370:	e0bffb17 	ldw	r2,-20(fp)
   8b374:	1005003a 	cmpeq	r2,r2,zero
   8b378:	10003b1e 	bne	r2,zero,8b468 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   8b37c:	e0fffb17 	ldw	r3,-20(fp)
   8b380:	e0bffd17 	ldw	r2,-12(fp)
   8b384:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   8b388:	e0fffb17 	ldw	r3,-20(fp)
   8b38c:	e0bffe17 	ldw	r2,-8(fp)
   8b390:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8b394:	0005303a 	rdctl	r2,status
   8b398:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8b39c:	e0fff817 	ldw	r3,-32(fp)
   8b3a0:	00bfff84 	movi	r2,-2
   8b3a4:	1884703a 	and	r2,r3,r2
   8b3a8:	1001703a 	wrctl	status,r2
  
  return context;
   8b3ac:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   8b3b0:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   8b3b4:	00800274 	movhi	r2,9
   8b3b8:	10bf9304 	addi	r2,r2,-436
   8b3bc:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   8b3c0:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   8b3c4:	e0fffc17 	ldw	r3,-16(fp)
   8b3c8:	e0bff917 	ldw	r2,-28(fp)
   8b3cc:	1885883a 	add	r2,r3,r2
   8b3d0:	10c00044 	addi	r3,r2,1
   8b3d4:	e0bffb17 	ldw	r2,-20(fp)
   8b3d8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   8b3dc:	e0bffb17 	ldw	r2,-20(fp)
   8b3e0:	10c00217 	ldw	r3,8(r2)
   8b3e4:	e0bff917 	ldw	r2,-28(fp)
   8b3e8:	1880042e 	bgeu	r3,r2,8b3fc <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   8b3ec:	e0fffb17 	ldw	r3,-20(fp)
   8b3f0:	00800044 	movi	r2,1
   8b3f4:	18800405 	stb	r2,16(r3)
   8b3f8:	00000206 	br	8b404 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   8b3fc:	e0bffb17 	ldw	r2,-20(fp)
   8b400:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   8b404:	e0fffb17 	ldw	r3,-20(fp)
   8b408:	00800274 	movhi	r2,9
   8b40c:	10b8ee04 	addi	r2,r2,-7240
   8b410:	e0bff615 	stw	r2,-40(fp)
   8b414:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8b418:	e0fff717 	ldw	r3,-36(fp)
   8b41c:	e0bff617 	ldw	r2,-40(fp)
   8b420:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   8b424:	e0bff617 	ldw	r2,-40(fp)
   8b428:	10c00017 	ldw	r3,0(r2)
   8b42c:	e0bff717 	ldw	r2,-36(fp)
   8b430:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8b434:	e0bff617 	ldw	r2,-40(fp)
   8b438:	10c00017 	ldw	r3,0(r2)
   8b43c:	e0bff717 	ldw	r2,-36(fp)
   8b440:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   8b444:	e0fff617 	ldw	r3,-40(fp)
   8b448:	e0bff717 	ldw	r2,-36(fp)
   8b44c:	18800015 	stw	r2,0(r3)
   8b450:	e0bffa17 	ldw	r2,-24(fp)
   8b454:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8b458:	e0bff517 	ldw	r2,-44(fp)
   8b45c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   8b460:	e03fff15 	stw	zero,-4(fp)
   8b464:	00000506 	br	8b47c <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   8b468:	00bffa84 	movi	r2,-22
   8b46c:	e0bfff15 	stw	r2,-4(fp)
   8b470:	00000206 	br	8b47c <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   8b474:	00bfde84 	movi	r2,-134
   8b478:	e0bfff15 	stw	r2,-4(fp)
   8b47c:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   8b480:	e037883a 	mov	sp,fp
   8b484:	df000017 	ldw	fp,0(sp)
   8b488:	dec00104 	addi	sp,sp,4
   8b48c:	f800283a 	ret

0008b490 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   8b490:	deffff04 	addi	sp,sp,-4
   8b494:	df000015 	stw	fp,0(sp)
   8b498:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   8b49c:	e037883a 	mov	sp,fp
   8b4a0:	df000017 	ldw	fp,0(sp)
   8b4a4:	dec00104 	addi	sp,sp,4
   8b4a8:	f800283a 	ret

0008b4ac <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   8b4ac:	defff904 	addi	sp,sp,-28
   8b4b0:	dfc00615 	stw	ra,24(sp)
   8b4b4:	df000515 	stw	fp,20(sp)
   8b4b8:	df000504 	addi	fp,sp,20
   8b4bc:	e13ffd15 	stw	r4,-12(fp)
   8b4c0:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   8b4c4:	e0bffd17 	ldw	r2,-12(fp)
   8b4c8:	1005003a 	cmpeq	r2,r2,zero
   8b4cc:	1000041e 	bne	r2,zero,8b4e0 <alt_dev_llist_insert+0x34>
   8b4d0:	e0bffd17 	ldw	r2,-12(fp)
   8b4d4:	10800217 	ldw	r2,8(r2)
   8b4d8:	1004c03a 	cmpne	r2,r2,zero
   8b4dc:	1000071e 	bne	r2,zero,8b4fc <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   8b4e0:	008b5600 	call	8b560 <alt_get_errno>
   8b4e4:	1007883a 	mov	r3,r2
   8b4e8:	00800584 	movi	r2,22
   8b4ec:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   8b4f0:	00bffa84 	movi	r2,-22
   8b4f4:	e0bfff15 	stw	r2,-4(fp)
   8b4f8:	00001306 	br	8b548 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   8b4fc:	e0fffd17 	ldw	r3,-12(fp)
   8b500:	e0bffe17 	ldw	r2,-8(fp)
   8b504:	e0bffb15 	stw	r2,-20(fp)
   8b508:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8b50c:	e0fffc17 	ldw	r3,-16(fp)
   8b510:	e0bffb17 	ldw	r2,-20(fp)
   8b514:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   8b518:	e0bffb17 	ldw	r2,-20(fp)
   8b51c:	10c00017 	ldw	r3,0(r2)
   8b520:	e0bffc17 	ldw	r2,-16(fp)
   8b524:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8b528:	e0bffb17 	ldw	r2,-20(fp)
   8b52c:	10c00017 	ldw	r3,0(r2)
   8b530:	e0bffc17 	ldw	r2,-16(fp)
   8b534:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   8b538:	e0fffb17 	ldw	r3,-20(fp)
   8b53c:	e0bffc17 	ldw	r2,-16(fp)
   8b540:	18800015 	stw	r2,0(r3)

  return 0;  
   8b544:	e03fff15 	stw	zero,-4(fp)
   8b548:	e0bfff17 	ldw	r2,-4(fp)
}
   8b54c:	e037883a 	mov	sp,fp
   8b550:	dfc00117 	ldw	ra,4(sp)
   8b554:	df000017 	ldw	fp,0(sp)
   8b558:	dec00204 	addi	sp,sp,8
   8b55c:	f800283a 	ret

0008b560 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8b560:	defffd04 	addi	sp,sp,-12
   8b564:	dfc00215 	stw	ra,8(sp)
   8b568:	df000115 	stw	fp,4(sp)
   8b56c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8b570:	00800274 	movhi	r2,9
   8b574:	10b8eb04 	addi	r2,r2,-7252
   8b578:	10800017 	ldw	r2,0(r2)
   8b57c:	1005003a 	cmpeq	r2,r2,zero
   8b580:	1000061e 	bne	r2,zero,8b59c <alt_get_errno+0x3c>
   8b584:	00800274 	movhi	r2,9
   8b588:	10b8eb04 	addi	r2,r2,-7252
   8b58c:	10800017 	ldw	r2,0(r2)
   8b590:	103ee83a 	callr	r2
   8b594:	e0bfff15 	stw	r2,-4(fp)
   8b598:	00000306 	br	8b5a8 <alt_get_errno+0x48>
   8b59c:	00800274 	movhi	r2,9
   8b5a0:	10bf8d04 	addi	r2,r2,-460
   8b5a4:	e0bfff15 	stw	r2,-4(fp)
   8b5a8:	e0bfff17 	ldw	r2,-4(fp)
}
   8b5ac:	e037883a 	mov	sp,fp
   8b5b0:	dfc00117 	ldw	ra,4(sp)
   8b5b4:	df000017 	ldw	fp,0(sp)
   8b5b8:	dec00204 	addi	sp,sp,8
   8b5bc:	f800283a 	ret

0008b5c0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   8b5c0:	defffd04 	addi	sp,sp,-12
   8b5c4:	dfc00215 	stw	ra,8(sp)
   8b5c8:	df000115 	stw	fp,4(sp)
   8b5cc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8b5d0:	00bfff04 	movi	r2,-4
   8b5d4:	00c00274 	movhi	r3,9
   8b5d8:	18f17e04 	addi	r3,r3,-14856
   8b5dc:	1885883a 	add	r2,r3,r2
   8b5e0:	e0bfff15 	stw	r2,-4(fp)
   8b5e4:	00000606 	br	8b600 <_do_ctors+0x40>
        (*ctor) (); 
   8b5e8:	e0bfff17 	ldw	r2,-4(fp)
   8b5ec:	10800017 	ldw	r2,0(r2)
   8b5f0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8b5f4:	e0bfff17 	ldw	r2,-4(fp)
   8b5f8:	10bfff04 	addi	r2,r2,-4
   8b5fc:	e0bfff15 	stw	r2,-4(fp)
   8b600:	e0ffff17 	ldw	r3,-4(fp)
   8b604:	00800274 	movhi	r2,9
   8b608:	10b17d04 	addi	r2,r2,-14860
   8b60c:	18bff62e 	bgeu	r3,r2,8b5e8 <_do_ctors+0x28>
        (*ctor) (); 
}
   8b610:	e037883a 	mov	sp,fp
   8b614:	dfc00117 	ldw	ra,4(sp)
   8b618:	df000017 	ldw	fp,0(sp)
   8b61c:	dec00204 	addi	sp,sp,8
   8b620:	f800283a 	ret

0008b624 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   8b624:	defffd04 	addi	sp,sp,-12
   8b628:	dfc00215 	stw	ra,8(sp)
   8b62c:	df000115 	stw	fp,4(sp)
   8b630:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8b634:	00bfff04 	movi	r2,-4
   8b638:	00c00274 	movhi	r3,9
   8b63c:	18f17e04 	addi	r3,r3,-14856
   8b640:	1885883a 	add	r2,r3,r2
   8b644:	e0bfff15 	stw	r2,-4(fp)
   8b648:	00000606 	br	8b664 <_do_dtors+0x40>
        (*dtor) (); 
   8b64c:	e0bfff17 	ldw	r2,-4(fp)
   8b650:	10800017 	ldw	r2,0(r2)
   8b654:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8b658:	e0bfff17 	ldw	r2,-4(fp)
   8b65c:	10bfff04 	addi	r2,r2,-4
   8b660:	e0bfff15 	stw	r2,-4(fp)
   8b664:	e0ffff17 	ldw	r3,-4(fp)
   8b668:	00800274 	movhi	r2,9
   8b66c:	10b17e04 	addi	r2,r2,-14856
   8b670:	18bff62e 	bgeu	r3,r2,8b64c <_do_dtors+0x28>
        (*dtor) (); 
}
   8b674:	e037883a 	mov	sp,fp
   8b678:	dfc00117 	ldw	ra,4(sp)
   8b67c:	df000017 	ldw	fp,0(sp)
   8b680:	dec00204 	addi	sp,sp,8
   8b684:	f800283a 	ret

0008b688 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   8b688:	deffff04 	addi	sp,sp,-4
   8b68c:	df000015 	stw	fp,0(sp)
   8b690:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   8b694:	e037883a 	mov	sp,fp
   8b698:	df000017 	ldw	fp,0(sp)
   8b69c:	dec00104 	addi	sp,sp,4
   8b6a0:	f800283a 	ret

0008b6a4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8b6a4:	defff904 	addi	sp,sp,-28
   8b6a8:	dfc00615 	stw	ra,24(sp)
   8b6ac:	df000515 	stw	fp,20(sp)
   8b6b0:	df000504 	addi	fp,sp,20
   8b6b4:	e13ffc15 	stw	r4,-16(fp)
   8b6b8:	e17ffd15 	stw	r5,-12(fp)
   8b6bc:	e1bffe15 	stw	r6,-8(fp)
   8b6c0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   8b6c4:	e0800217 	ldw	r2,8(fp)
   8b6c8:	d8800015 	stw	r2,0(sp)
   8b6cc:	e13ffc17 	ldw	r4,-16(fp)
   8b6d0:	e17ffd17 	ldw	r5,-12(fp)
   8b6d4:	e1bffe17 	ldw	r6,-8(fp)
   8b6d8:	e1ffff17 	ldw	r7,-4(fp)
   8b6dc:	008b8780 	call	8b878 <alt_iic_isr_register>
}  
   8b6e0:	e037883a 	mov	sp,fp
   8b6e4:	dfc00117 	ldw	ra,4(sp)
   8b6e8:	df000017 	ldw	fp,0(sp)
   8b6ec:	dec00204 	addi	sp,sp,8
   8b6f0:	f800283a 	ret

0008b6f4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   8b6f4:	defff904 	addi	sp,sp,-28
   8b6f8:	df000615 	stw	fp,24(sp)
   8b6fc:	df000604 	addi	fp,sp,24
   8b700:	e13ffe15 	stw	r4,-8(fp)
   8b704:	e17fff15 	stw	r5,-4(fp)
   8b708:	e0bfff17 	ldw	r2,-4(fp)
   8b70c:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8b710:	0005303a 	rdctl	r2,status
   8b714:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8b718:	e0fffb17 	ldw	r3,-20(fp)
   8b71c:	00bfff84 	movi	r2,-2
   8b720:	1884703a 	and	r2,r3,r2
   8b724:	1001703a 	wrctl	status,r2
  
  return context;
   8b728:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8b72c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   8b730:	e0fffc17 	ldw	r3,-16(fp)
   8b734:	00800044 	movi	r2,1
   8b738:	10c4983a 	sll	r2,r2,r3
   8b73c:	1007883a 	mov	r3,r2
   8b740:	00800274 	movhi	r2,9
   8b744:	10bf9104 	addi	r2,r2,-444
   8b748:	10800017 	ldw	r2,0(r2)
   8b74c:	1886b03a 	or	r3,r3,r2
   8b750:	00800274 	movhi	r2,9
   8b754:	10bf9104 	addi	r2,r2,-444
   8b758:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8b75c:	00800274 	movhi	r2,9
   8b760:	10bf9104 	addi	r2,r2,-444
   8b764:	10800017 	ldw	r2,0(r2)
   8b768:	100170fa 	wrctl	ienable,r2
   8b76c:	e0bffd17 	ldw	r2,-12(fp)
   8b770:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8b774:	e0bffa17 	ldw	r2,-24(fp)
   8b778:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8b77c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   8b780:	e037883a 	mov	sp,fp
   8b784:	df000017 	ldw	fp,0(sp)
   8b788:	dec00104 	addi	sp,sp,4
   8b78c:	f800283a 	ret

0008b790 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   8b790:	defff904 	addi	sp,sp,-28
   8b794:	df000615 	stw	fp,24(sp)
   8b798:	df000604 	addi	fp,sp,24
   8b79c:	e13ffe15 	stw	r4,-8(fp)
   8b7a0:	e17fff15 	stw	r5,-4(fp)
   8b7a4:	e0bfff17 	ldw	r2,-4(fp)
   8b7a8:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8b7ac:	0005303a 	rdctl	r2,status
   8b7b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8b7b4:	e0fffb17 	ldw	r3,-20(fp)
   8b7b8:	00bfff84 	movi	r2,-2
   8b7bc:	1884703a 	and	r2,r3,r2
   8b7c0:	1001703a 	wrctl	status,r2
  
  return context;
   8b7c4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8b7c8:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   8b7cc:	e0fffc17 	ldw	r3,-16(fp)
   8b7d0:	00800044 	movi	r2,1
   8b7d4:	10c4983a 	sll	r2,r2,r3
   8b7d8:	0084303a 	nor	r2,zero,r2
   8b7dc:	1007883a 	mov	r3,r2
   8b7e0:	00800274 	movhi	r2,9
   8b7e4:	10bf9104 	addi	r2,r2,-444
   8b7e8:	10800017 	ldw	r2,0(r2)
   8b7ec:	1886703a 	and	r3,r3,r2
   8b7f0:	00800274 	movhi	r2,9
   8b7f4:	10bf9104 	addi	r2,r2,-444
   8b7f8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8b7fc:	00800274 	movhi	r2,9
   8b800:	10bf9104 	addi	r2,r2,-444
   8b804:	10800017 	ldw	r2,0(r2)
   8b808:	100170fa 	wrctl	ienable,r2
   8b80c:	e0bffd17 	ldw	r2,-12(fp)
   8b810:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8b814:	e0bffa17 	ldw	r2,-24(fp)
   8b818:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8b81c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   8b820:	e037883a 	mov	sp,fp
   8b824:	df000017 	ldw	fp,0(sp)
   8b828:	dec00104 	addi	sp,sp,4
   8b82c:	f800283a 	ret

0008b830 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   8b830:	defffc04 	addi	sp,sp,-16
   8b834:	df000315 	stw	fp,12(sp)
   8b838:	df000304 	addi	fp,sp,12
   8b83c:	e13ffe15 	stw	r4,-8(fp)
   8b840:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   8b844:	000530fa 	rdctl	r2,ienable
   8b848:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   8b84c:	e0ffff17 	ldw	r3,-4(fp)
   8b850:	00800044 	movi	r2,1
   8b854:	10c4983a 	sll	r2,r2,r3
   8b858:	1007883a 	mov	r3,r2
   8b85c:	e0bffd17 	ldw	r2,-12(fp)
   8b860:	1884703a 	and	r2,r3,r2
   8b864:	1004c03a 	cmpne	r2,r2,zero
}
   8b868:	e037883a 	mov	sp,fp
   8b86c:	df000017 	ldw	fp,0(sp)
   8b870:	dec00104 	addi	sp,sp,4
   8b874:	f800283a 	ret

0008b878 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8b878:	defff404 	addi	sp,sp,-48
   8b87c:	dfc00b15 	stw	ra,44(sp)
   8b880:	df000a15 	stw	fp,40(sp)
   8b884:	df000a04 	addi	fp,sp,40
   8b888:	e13ffb15 	stw	r4,-20(fp)
   8b88c:	e17ffc15 	stw	r5,-16(fp)
   8b890:	e1bffd15 	stw	r6,-12(fp)
   8b894:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   8b898:	00bffa84 	movi	r2,-22
   8b89c:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   8b8a0:	e0bffc17 	ldw	r2,-16(fp)
   8b8a4:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8b8a8:	e0bff917 	ldw	r2,-28(fp)
   8b8ac:	10800808 	cmpgei	r2,r2,32
   8b8b0:	1000291e 	bne	r2,zero,8b958 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8b8b4:	0005303a 	rdctl	r2,status
   8b8b8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8b8bc:	e0fff717 	ldw	r3,-36(fp)
   8b8c0:	00bfff84 	movi	r2,-2
   8b8c4:	1884703a 	and	r2,r3,r2
   8b8c8:	1001703a 	wrctl	status,r2
  
  return context;
   8b8cc:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   8b8d0:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   8b8d4:	e0bff917 	ldw	r2,-28(fp)
   8b8d8:	00c00274 	movhi	r3,9
   8b8dc:	18ff9e04 	addi	r3,r3,-392
   8b8e0:	100490fa 	slli	r2,r2,3
   8b8e4:	10c7883a 	add	r3,r2,r3
   8b8e8:	e0bffd17 	ldw	r2,-12(fp)
   8b8ec:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   8b8f0:	e0bff917 	ldw	r2,-28(fp)
   8b8f4:	00c00274 	movhi	r3,9
   8b8f8:	18ff9e04 	addi	r3,r3,-392
   8b8fc:	100490fa 	slli	r2,r2,3
   8b900:	10c5883a 	add	r2,r2,r3
   8b904:	10c00104 	addi	r3,r2,4
   8b908:	e0bffe17 	ldw	r2,-8(fp)
   8b90c:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   8b910:	e0bffd17 	ldw	r2,-12(fp)
   8b914:	1005003a 	cmpeq	r2,r2,zero
   8b918:	1000051e 	bne	r2,zero,8b930 <alt_iic_isr_register+0xb8>
   8b91c:	e17ff917 	ldw	r5,-28(fp)
   8b920:	e13ffb17 	ldw	r4,-20(fp)
   8b924:	008b6f40 	call	8b6f4 <alt_ic_irq_enable>
   8b928:	e0bfff15 	stw	r2,-4(fp)
   8b92c:	00000406 	br	8b940 <alt_iic_isr_register+0xc8>
   8b930:	e17ff917 	ldw	r5,-28(fp)
   8b934:	e13ffb17 	ldw	r4,-20(fp)
   8b938:	008b7900 	call	8b790 <alt_ic_irq_disable>
   8b93c:	e0bfff15 	stw	r2,-4(fp)
   8b940:	e0bfff17 	ldw	r2,-4(fp)
   8b944:	e0bffa15 	stw	r2,-24(fp)
   8b948:	e0bff817 	ldw	r2,-32(fp)
   8b94c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8b950:	e0bff617 	ldw	r2,-40(fp)
   8b954:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   8b958:	e0bffa17 	ldw	r2,-24(fp)
}
   8b95c:	e037883a 	mov	sp,fp
   8b960:	dfc00117 	ldw	ra,4(sp)
   8b964:	df000017 	ldw	fp,0(sp)
   8b968:	dec00204 	addi	sp,sp,8
   8b96c:	f800283a 	ret

0008b970 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   8b970:	defff804 	addi	sp,sp,-32
   8b974:	dfc00715 	stw	ra,28(sp)
   8b978:	df000615 	stw	fp,24(sp)
   8b97c:	dc000515 	stw	r16,20(sp)
   8b980:	df000504 	addi	fp,sp,20
   8b984:	e13ffc15 	stw	r4,-16(fp)
   8b988:	e17ffd15 	stw	r5,-12(fp)
   8b98c:	e1bffe15 	stw	r6,-8(fp)
   8b990:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   8b994:	e13ffd17 	ldw	r4,-12(fp)
   8b998:	e17ffe17 	ldw	r5,-8(fp)
   8b99c:	e1bfff17 	ldw	r6,-4(fp)
   8b9a0:	008bbb80 	call	8bbb8 <open>
   8b9a4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   8b9a8:	e0bffb17 	ldw	r2,-20(fp)
   8b9ac:	1004803a 	cmplt	r2,r2,zero
   8b9b0:	10001f1e 	bne	r2,zero,8ba30 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
   8b9b4:	e13ffb17 	ldw	r4,-20(fp)
   8b9b8:	04000274 	movhi	r16,9
   8b9bc:	84346804 	addi	r16,r16,-11872
   8b9c0:	01400304 	movi	r5,12
   8b9c4:	00895e00 	call	895e0 <__mulsi3>
   8b9c8:	1405883a 	add	r2,r2,r16
   8b9cc:	10c00017 	ldw	r3,0(r2)
   8b9d0:	e0bffc17 	ldw	r2,-16(fp)
   8b9d4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   8b9d8:	e13ffb17 	ldw	r4,-20(fp)
   8b9dc:	04000274 	movhi	r16,9
   8b9e0:	84346804 	addi	r16,r16,-11872
   8b9e4:	01400304 	movi	r5,12
   8b9e8:	00895e00 	call	895e0 <__mulsi3>
   8b9ec:	1405883a 	add	r2,r2,r16
   8b9f0:	10800104 	addi	r2,r2,4
   8b9f4:	10c00017 	ldw	r3,0(r2)
   8b9f8:	e0bffc17 	ldw	r2,-16(fp)
   8b9fc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   8ba00:	e13ffb17 	ldw	r4,-20(fp)
   8ba04:	04000274 	movhi	r16,9
   8ba08:	84346804 	addi	r16,r16,-11872
   8ba0c:	01400304 	movi	r5,12
   8ba10:	00895e00 	call	895e0 <__mulsi3>
   8ba14:	1405883a 	add	r2,r2,r16
   8ba18:	10800204 	addi	r2,r2,8
   8ba1c:	10c00017 	ldw	r3,0(r2)
   8ba20:	e0bffc17 	ldw	r2,-16(fp)
   8ba24:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   8ba28:	e13ffb17 	ldw	r4,-20(fp)
   8ba2c:	008a5280 	call	8a528 <alt_release_fd>
  }
} 
   8ba30:	e037883a 	mov	sp,fp
   8ba34:	dfc00217 	ldw	ra,8(sp)
   8ba38:	df000117 	ldw	fp,4(sp)
   8ba3c:	dc000017 	ldw	r16,0(sp)
   8ba40:	dec00304 	addi	sp,sp,12
   8ba44:	f800283a 	ret

0008ba48 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   8ba48:	defffb04 	addi	sp,sp,-20
   8ba4c:	dfc00415 	stw	ra,16(sp)
   8ba50:	df000315 	stw	fp,12(sp)
   8ba54:	df000304 	addi	fp,sp,12
   8ba58:	e13ffd15 	stw	r4,-12(fp)
   8ba5c:	e17ffe15 	stw	r5,-8(fp)
   8ba60:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   8ba64:	01000274 	movhi	r4,9
   8ba68:	21346b04 	addi	r4,r4,-11860
   8ba6c:	e17ffd17 	ldw	r5,-12(fp)
   8ba70:	01800044 	movi	r6,1
   8ba74:	01c07fc4 	movi	r7,511
   8ba78:	008b9700 	call	8b970 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   8ba7c:	01000274 	movhi	r4,9
   8ba80:	21346804 	addi	r4,r4,-11872
   8ba84:	e17ffe17 	ldw	r5,-8(fp)
   8ba88:	000d883a 	mov	r6,zero
   8ba8c:	01c07fc4 	movi	r7,511
   8ba90:	008b9700 	call	8b970 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   8ba94:	01000274 	movhi	r4,9
   8ba98:	21346e04 	addi	r4,r4,-11848
   8ba9c:	e17fff17 	ldw	r5,-4(fp)
   8baa0:	01800044 	movi	r6,1
   8baa4:	01c07fc4 	movi	r7,511
   8baa8:	008b9700 	call	8b970 <alt_open_fd>
}  
   8baac:	e037883a 	mov	sp,fp
   8bab0:	dfc00117 	ldw	ra,4(sp)
   8bab4:	df000017 	ldw	fp,0(sp)
   8bab8:	dec00204 	addi	sp,sp,8
   8babc:	f800283a 	ret

0008bac0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   8bac0:	defffa04 	addi	sp,sp,-24
   8bac4:	dfc00515 	stw	ra,20(sp)
   8bac8:	df000415 	stw	fp,16(sp)
   8bacc:	dc000315 	stw	r16,12(sp)
   8bad0:	df000304 	addi	fp,sp,12
   8bad4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   8bad8:	e0bffe17 	ldw	r2,-8(fp)
   8badc:	10800217 	ldw	r2,8(r2)
   8bae0:	10d00034 	orhi	r3,r2,16384
   8bae4:	e0bffe17 	ldw	r2,-8(fp)
   8bae8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8baec:	e03ffd15 	stw	zero,-12(fp)
   8baf0:	00002306 	br	8bb80 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8baf4:	e13ffd17 	ldw	r4,-12(fp)
   8baf8:	04000274 	movhi	r16,9
   8bafc:	84346804 	addi	r16,r16,-11872
   8bb00:	01400304 	movi	r5,12
   8bb04:	00895e00 	call	895e0 <__mulsi3>
   8bb08:	1405883a 	add	r2,r2,r16
   8bb0c:	10c00017 	ldw	r3,0(r2)
   8bb10:	e0bffe17 	ldw	r2,-8(fp)
   8bb14:	10800017 	ldw	r2,0(r2)
   8bb18:	1880161e 	bne	r3,r2,8bb74 <alt_file_locked+0xb4>
   8bb1c:	e13ffd17 	ldw	r4,-12(fp)
   8bb20:	04000274 	movhi	r16,9
   8bb24:	84346804 	addi	r16,r16,-11872
   8bb28:	01400304 	movi	r5,12
   8bb2c:	00895e00 	call	895e0 <__mulsi3>
   8bb30:	1405883a 	add	r2,r2,r16
   8bb34:	10800204 	addi	r2,r2,8
   8bb38:	10800017 	ldw	r2,0(r2)
   8bb3c:	1004403a 	cmpge	r2,r2,zero
   8bb40:	10000c1e 	bne	r2,zero,8bb74 <alt_file_locked+0xb4>
   8bb44:	e13ffd17 	ldw	r4,-12(fp)
   8bb48:	01400304 	movi	r5,12
   8bb4c:	00895e00 	call	895e0 <__mulsi3>
   8bb50:	1007883a 	mov	r3,r2
   8bb54:	00800274 	movhi	r2,9
   8bb58:	10b46804 	addi	r2,r2,-11872
   8bb5c:	1887883a 	add	r3,r3,r2
   8bb60:	e0bffe17 	ldw	r2,-8(fp)
   8bb64:	18800326 	beq	r3,r2,8bb74 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   8bb68:	00bffcc4 	movi	r2,-13
   8bb6c:	e0bfff15 	stw	r2,-4(fp)
   8bb70:	00000a06 	br	8bb9c <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8bb74:	e0bffd17 	ldw	r2,-12(fp)
   8bb78:	10800044 	addi	r2,r2,1
   8bb7c:	e0bffd15 	stw	r2,-12(fp)
   8bb80:	00800274 	movhi	r2,9
   8bb84:	10b8ea04 	addi	r2,r2,-7256
   8bb88:	10800017 	ldw	r2,0(r2)
   8bb8c:	1007883a 	mov	r3,r2
   8bb90:	e0bffd17 	ldw	r2,-12(fp)
   8bb94:	18bfd72e 	bgeu	r3,r2,8baf4 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   8bb98:	e03fff15 	stw	zero,-4(fp)
   8bb9c:	e0bfff17 	ldw	r2,-4(fp)
}
   8bba0:	e037883a 	mov	sp,fp
   8bba4:	dfc00217 	ldw	ra,8(sp)
   8bba8:	df000117 	ldw	fp,4(sp)
   8bbac:	dc000017 	ldw	r16,0(sp)
   8bbb0:	dec00304 	addi	sp,sp,12
   8bbb4:	f800283a 	ret

0008bbb8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   8bbb8:	defff404 	addi	sp,sp,-48
   8bbbc:	dfc00b15 	stw	ra,44(sp)
   8bbc0:	df000a15 	stw	fp,40(sp)
   8bbc4:	df000a04 	addi	fp,sp,40
   8bbc8:	e13ffb15 	stw	r4,-20(fp)
   8bbcc:	e17ffc15 	stw	r5,-16(fp)
   8bbd0:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   8bbd4:	00bfffc4 	movi	r2,-1
   8bbd8:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   8bbdc:	00bffb44 	movi	r2,-19
   8bbe0:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   8bbe4:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   8bbe8:	e13ffb17 	ldw	r4,-20(fp)
   8bbec:	01400274 	movhi	r5,9
   8bbf0:	2978e804 	addi	r5,r5,-7264
   8bbf4:	008bf680 	call	8bf68 <alt_find_dev>
   8bbf8:	e0bffa15 	stw	r2,-24(fp)
   8bbfc:	e0bffa17 	ldw	r2,-24(fp)
   8bc00:	1004c03a 	cmpne	r2,r2,zero
   8bc04:	1000051e 	bne	r2,zero,8bc1c <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   8bc08:	e13ffb17 	ldw	r4,-20(fp)
   8bc0c:	008bffc0 	call	8bffc <alt_find_file>
   8bc10:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   8bc14:	00800044 	movi	r2,1
   8bc18:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   8bc1c:	e0bffa17 	ldw	r2,-24(fp)
   8bc20:	1005003a 	cmpeq	r2,r2,zero
   8bc24:	1000311e 	bne	r2,zero,8bcec <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
   8bc28:	e13ffa17 	ldw	r4,-24(fp)
   8bc2c:	008c11c0 	call	8c11c <alt_get_fd>
   8bc30:	e0bff815 	stw	r2,-32(fp)
   8bc34:	e0bff817 	ldw	r2,-32(fp)
   8bc38:	1004403a 	cmpge	r2,r2,zero
   8bc3c:	1000031e 	bne	r2,zero,8bc4c <open+0x94>
    {
      status = index;
   8bc40:	e0bff817 	ldw	r2,-32(fp)
   8bc44:	e0bff715 	stw	r2,-36(fp)
   8bc48:	00002a06 	br	8bcf4 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
   8bc4c:	e13ff817 	ldw	r4,-32(fp)
   8bc50:	01400304 	movi	r5,12
   8bc54:	00895e00 	call	895e0 <__mulsi3>
   8bc58:	1007883a 	mov	r3,r2
   8bc5c:	00800274 	movhi	r2,9
   8bc60:	10b46804 	addi	r2,r2,-11872
   8bc64:	1885883a 	add	r2,r3,r2
   8bc68:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   8bc6c:	e0fffc17 	ldw	r3,-16(fp)
   8bc70:	00900034 	movhi	r2,16384
   8bc74:	10bfffc4 	addi	r2,r2,-1
   8bc78:	1886703a 	and	r3,r3,r2
   8bc7c:	e0bff917 	ldw	r2,-28(fp)
   8bc80:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   8bc84:	e0bff617 	ldw	r2,-40(fp)
   8bc88:	1004c03a 	cmpne	r2,r2,zero
   8bc8c:	1000061e 	bne	r2,zero,8bca8 <open+0xf0>
   8bc90:	e13ff917 	ldw	r4,-28(fp)
   8bc94:	008bac00 	call	8bac0 <alt_file_locked>
   8bc98:	e0bff715 	stw	r2,-36(fp)
   8bc9c:	e0bff717 	ldw	r2,-36(fp)
   8bca0:	1004803a 	cmplt	r2,r2,zero
   8bca4:	1000131e 	bne	r2,zero,8bcf4 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   8bca8:	e0bffa17 	ldw	r2,-24(fp)
   8bcac:	10800317 	ldw	r2,12(r2)
   8bcb0:	1005003a 	cmpeq	r2,r2,zero
   8bcb4:	1000091e 	bne	r2,zero,8bcdc <open+0x124>
   8bcb8:	e0bffa17 	ldw	r2,-24(fp)
   8bcbc:	10800317 	ldw	r2,12(r2)
   8bcc0:	e13ff917 	ldw	r4,-28(fp)
   8bcc4:	e17ffb17 	ldw	r5,-20(fp)
   8bcc8:	e1bffc17 	ldw	r6,-16(fp)
   8bccc:	e1fffd17 	ldw	r7,-12(fp)
   8bcd0:	103ee83a 	callr	r2
   8bcd4:	e0bfff15 	stw	r2,-4(fp)
   8bcd8:	00000106 	br	8bce0 <open+0x128>
   8bcdc:	e03fff15 	stw	zero,-4(fp)
   8bce0:	e0bfff17 	ldw	r2,-4(fp)
   8bce4:	e0bff715 	stw	r2,-36(fp)
   8bce8:	00000206 	br	8bcf4 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   8bcec:	00bffb44 	movi	r2,-19
   8bcf0:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   8bcf4:	e0bff717 	ldw	r2,-36(fp)
   8bcf8:	1004403a 	cmpge	r2,r2,zero
   8bcfc:	1000091e 	bne	r2,zero,8bd24 <open+0x16c>
  {
    alt_release_fd (index);  
   8bd00:	e13ff817 	ldw	r4,-32(fp)
   8bd04:	008a5280 	call	8a528 <alt_release_fd>
    ALT_ERRNO = -status;
   8bd08:	008bd440 	call	8bd44 <alt_get_errno>
   8bd0c:	e0fff717 	ldw	r3,-36(fp)
   8bd10:	00c7c83a 	sub	r3,zero,r3
   8bd14:	10c00015 	stw	r3,0(r2)
    return -1;
   8bd18:	00bfffc4 	movi	r2,-1
   8bd1c:	e0bffe15 	stw	r2,-8(fp)
   8bd20:	00000206 	br	8bd2c <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
   8bd24:	e0bff817 	ldw	r2,-32(fp)
   8bd28:	e0bffe15 	stw	r2,-8(fp)
   8bd2c:	e0bffe17 	ldw	r2,-8(fp)
}
   8bd30:	e037883a 	mov	sp,fp
   8bd34:	dfc00117 	ldw	ra,4(sp)
   8bd38:	df000017 	ldw	fp,0(sp)
   8bd3c:	dec00204 	addi	sp,sp,8
   8bd40:	f800283a 	ret

0008bd44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8bd44:	defffd04 	addi	sp,sp,-12
   8bd48:	dfc00215 	stw	ra,8(sp)
   8bd4c:	df000115 	stw	fp,4(sp)
   8bd50:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8bd54:	00800274 	movhi	r2,9
   8bd58:	10b8eb04 	addi	r2,r2,-7252
   8bd5c:	10800017 	ldw	r2,0(r2)
   8bd60:	1005003a 	cmpeq	r2,r2,zero
   8bd64:	1000061e 	bne	r2,zero,8bd80 <alt_get_errno+0x3c>
   8bd68:	00800274 	movhi	r2,9
   8bd6c:	10b8eb04 	addi	r2,r2,-7252
   8bd70:	10800017 	ldw	r2,0(r2)
   8bd74:	103ee83a 	callr	r2
   8bd78:	e0bfff15 	stw	r2,-4(fp)
   8bd7c:	00000306 	br	8bd8c <alt_get_errno+0x48>
   8bd80:	00800274 	movhi	r2,9
   8bd84:	10bf8d04 	addi	r2,r2,-460
   8bd88:	e0bfff15 	stw	r2,-4(fp)
   8bd8c:	e0bfff17 	ldw	r2,-4(fp)
}
   8bd90:	e037883a 	mov	sp,fp
   8bd94:	dfc00117 	ldw	ra,4(sp)
   8bd98:	df000017 	ldw	fp,0(sp)
   8bd9c:	dec00204 	addi	sp,sp,8
   8bda0:	f800283a 	ret

0008bda4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   8bda4:	defffa04 	addi	sp,sp,-24
   8bda8:	df000515 	stw	fp,20(sp)
   8bdac:	df000504 	addi	fp,sp,20
   8bdb0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8bdb4:	0005303a 	rdctl	r2,status
   8bdb8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8bdbc:	e0fffd17 	ldw	r3,-12(fp)
   8bdc0:	00bfff84 	movi	r2,-2
   8bdc4:	1884703a 	and	r2,r3,r2
   8bdc8:	1001703a 	wrctl	status,r2
  
  return context;
   8bdcc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   8bdd0:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   8bdd4:	e0bfff17 	ldw	r2,-4(fp)
   8bdd8:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   8bddc:	e0bffc17 	ldw	r2,-16(fp)
   8bde0:	10c00017 	ldw	r3,0(r2)
   8bde4:	e0bffc17 	ldw	r2,-16(fp)
   8bde8:	10800117 	ldw	r2,4(r2)
   8bdec:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   8bdf0:	e0bffc17 	ldw	r2,-16(fp)
   8bdf4:	10c00117 	ldw	r3,4(r2)
   8bdf8:	e0bffc17 	ldw	r2,-16(fp)
   8bdfc:	10800017 	ldw	r2,0(r2)
   8be00:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   8be04:	e0fffc17 	ldw	r3,-16(fp)
   8be08:	e0bffc17 	ldw	r2,-16(fp)
   8be0c:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   8be10:	e0fffc17 	ldw	r3,-16(fp)
   8be14:	e0bffc17 	ldw	r2,-16(fp)
   8be18:	18800015 	stw	r2,0(r3)
   8be1c:	e0bffe17 	ldw	r2,-8(fp)
   8be20:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8be24:	e0bffb17 	ldw	r2,-20(fp)
   8be28:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   8be2c:	e037883a 	mov	sp,fp
   8be30:	df000017 	ldw	fp,0(sp)
   8be34:	dec00104 	addi	sp,sp,4
   8be38:	f800283a 	ret

0008be3c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   8be3c:	defffb04 	addi	sp,sp,-20
   8be40:	dfc00415 	stw	ra,16(sp)
   8be44:	df000315 	stw	fp,12(sp)
   8be48:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   8be4c:	d0a00e17 	ldw	r2,-32712(gp)
   8be50:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   8be54:	d0a6b317 	ldw	r2,-25908(gp)
   8be58:	10800044 	addi	r2,r2,1
   8be5c:	d0a6b315 	stw	r2,-25908(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8be60:	00003106 	br	8bf28 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   8be64:	e0bffe17 	ldw	r2,-8(fp)
   8be68:	10800017 	ldw	r2,0(r2)
   8be6c:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   8be70:	e0bffe17 	ldw	r2,-8(fp)
   8be74:	10800403 	ldbu	r2,16(r2)
   8be78:	10803fcc 	andi	r2,r2,255
   8be7c:	1005003a 	cmpeq	r2,r2,zero
   8be80:	1000051e 	bne	r2,zero,8be98 <alt_tick+0x5c>
   8be84:	d0a6b317 	ldw	r2,-25908(gp)
   8be88:	1004c03a 	cmpne	r2,r2,zero
   8be8c:	1000021e 	bne	r2,zero,8be98 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   8be90:	e0bffe17 	ldw	r2,-8(fp)
   8be94:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   8be98:	e0bffe17 	ldw	r2,-8(fp)
   8be9c:	10c00217 	ldw	r3,8(r2)
   8bea0:	d0a6b317 	ldw	r2,-25908(gp)
   8bea4:	10c01e36 	bltu	r2,r3,8bf20 <alt_tick+0xe4>
   8bea8:	e0bffe17 	ldw	r2,-8(fp)
   8beac:	10800403 	ldbu	r2,16(r2)
   8beb0:	10803fcc 	andi	r2,r2,255
   8beb4:	1004c03a 	cmpne	r2,r2,zero
   8beb8:	1000191e 	bne	r2,zero,8bf20 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   8bebc:	e0bffe17 	ldw	r2,-8(fp)
   8bec0:	10c00317 	ldw	r3,12(r2)
   8bec4:	e0bffe17 	ldw	r2,-8(fp)
   8bec8:	11000517 	ldw	r4,20(r2)
   8becc:	183ee83a 	callr	r3
   8bed0:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   8bed4:	e0bffd17 	ldw	r2,-12(fp)
   8bed8:	1004c03a 	cmpne	r2,r2,zero
   8bedc:	1000031e 	bne	r2,zero,8beec <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   8bee0:	e13ffe17 	ldw	r4,-8(fp)
   8bee4:	008bda40 	call	8bda4 <alt_alarm_stop>
   8bee8:	00000d06 	br	8bf20 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   8beec:	e0bffe17 	ldw	r2,-8(fp)
   8bef0:	10c00217 	ldw	r3,8(r2)
   8bef4:	e0bffd17 	ldw	r2,-12(fp)
   8bef8:	1887883a 	add	r3,r3,r2
   8befc:	e0bffe17 	ldw	r2,-8(fp)
   8bf00:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   8bf04:	e0bffe17 	ldw	r2,-8(fp)
   8bf08:	10c00217 	ldw	r3,8(r2)
   8bf0c:	d0a6b317 	ldw	r2,-25908(gp)
   8bf10:	1880032e 	bgeu	r3,r2,8bf20 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   8bf14:	e0fffe17 	ldw	r3,-8(fp)
   8bf18:	00800044 	movi	r2,1
   8bf1c:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   8bf20:	e0bfff17 	ldw	r2,-4(fp)
   8bf24:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8bf28:	d0e00e04 	addi	r3,gp,-32712
   8bf2c:	e0bffe17 	ldw	r2,-8(fp)
   8bf30:	10ffcc1e 	bne	r2,r3,8be64 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   8bf34:	e037883a 	mov	sp,fp
   8bf38:	dfc00117 	ldw	ra,4(sp)
   8bf3c:	df000017 	ldw	fp,0(sp)
   8bf40:	dec00204 	addi	sp,sp,8
   8bf44:	f800283a 	ret

0008bf48 <altera_nios2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_irq_init(void) 
{
   8bf48:	deffff04 	addi	sp,sp,-4
   8bf4c:	df000015 	stw	fp,0(sp)
   8bf50:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   8bf54:	000170fa 	wrctl	ienable,zero
}
   8bf58:	e037883a 	mov	sp,fp
   8bf5c:	df000017 	ldw	fp,0(sp)
   8bf60:	dec00104 	addi	sp,sp,4
   8bf64:	f800283a 	ret

0008bf68 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   8bf68:	defff904 	addi	sp,sp,-28
   8bf6c:	dfc00615 	stw	ra,24(sp)
   8bf70:	df000515 	stw	fp,20(sp)
   8bf74:	df000504 	addi	fp,sp,20
   8bf78:	e13ffd15 	stw	r4,-12(fp)
   8bf7c:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   8bf80:	e0bffe17 	ldw	r2,-8(fp)
   8bf84:	10800017 	ldw	r2,0(r2)
   8bf88:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   8bf8c:	e13ffd17 	ldw	r4,-12(fp)
   8bf90:	00803900 	call	80390 <strlen>
   8bf94:	10800044 	addi	r2,r2,1
   8bf98:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8bf9c:	00000d06 	br	8bfd4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   8bfa0:	e0bffc17 	ldw	r2,-16(fp)
   8bfa4:	11000217 	ldw	r4,8(r2)
   8bfa8:	e1bffb17 	ldw	r6,-20(fp)
   8bfac:	e17ffd17 	ldw	r5,-12(fp)
   8bfb0:	008c2380 	call	8c238 <memcmp>
   8bfb4:	1004c03a 	cmpne	r2,r2,zero
   8bfb8:	1000031e 	bne	r2,zero,8bfc8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   8bfbc:	e0bffc17 	ldw	r2,-16(fp)
   8bfc0:	e0bfff15 	stw	r2,-4(fp)
   8bfc4:	00000706 	br	8bfe4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   8bfc8:	e0bffc17 	ldw	r2,-16(fp)
   8bfcc:	10800017 	ldw	r2,0(r2)
   8bfd0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8bfd4:	e0fffe17 	ldw	r3,-8(fp)
   8bfd8:	e0bffc17 	ldw	r2,-16(fp)
   8bfdc:	10fff01e 	bne	r2,r3,8bfa0 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   8bfe0:	e03fff15 	stw	zero,-4(fp)
   8bfe4:	e0bfff17 	ldw	r2,-4(fp)
}
   8bfe8:	e037883a 	mov	sp,fp
   8bfec:	dfc00117 	ldw	ra,4(sp)
   8bff0:	df000017 	ldw	fp,0(sp)
   8bff4:	dec00204 	addi	sp,sp,8
   8bff8:	f800283a 	ret

0008bffc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   8bffc:	defffa04 	addi	sp,sp,-24
   8c000:	dfc00515 	stw	ra,20(sp)
   8c004:	df000415 	stw	fp,16(sp)
   8c008:	df000404 	addi	fp,sp,16
   8c00c:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   8c010:	00800274 	movhi	r2,9
   8c014:	10b8e604 	addi	r2,r2,-7272
   8c018:	10800017 	ldw	r2,0(r2)
   8c01c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8c020:	00003306 	br	8c0f0 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   8c024:	e0bffd17 	ldw	r2,-12(fp)
   8c028:	11000217 	ldw	r4,8(r2)
   8c02c:	00803900 	call	80390 <strlen>
   8c030:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   8c034:	e0bffd17 	ldw	r2,-12(fp)
   8c038:	10c00217 	ldw	r3,8(r2)
   8c03c:	e0bffc17 	ldw	r2,-16(fp)
   8c040:	1885883a 	add	r2,r3,r2
   8c044:	10bfffc4 	addi	r2,r2,-1
   8c048:	10800003 	ldbu	r2,0(r2)
   8c04c:	10803fcc 	andi	r2,r2,255
   8c050:	1080201c 	xori	r2,r2,128
   8c054:	10bfe004 	addi	r2,r2,-128
   8c058:	10800bd8 	cmpnei	r2,r2,47
   8c05c:	1000031e 	bne	r2,zero,8c06c <alt_find_file+0x70>
    {
      len -= 1;
   8c060:	e0bffc17 	ldw	r2,-16(fp)
   8c064:	10bfffc4 	addi	r2,r2,-1
   8c068:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8c06c:	e0bffc17 	ldw	r2,-16(fp)
   8c070:	1007883a 	mov	r3,r2
   8c074:	e0bffe17 	ldw	r2,-8(fp)
   8c078:	1885883a 	add	r2,r3,r2
   8c07c:	10800003 	ldbu	r2,0(r2)
   8c080:	10803fcc 	andi	r2,r2,255
   8c084:	1080201c 	xori	r2,r2,128
   8c088:	10bfe004 	addi	r2,r2,-128
   8c08c:	10800be0 	cmpeqi	r2,r2,47
   8c090:	10000a1e 	bne	r2,zero,8c0bc <alt_find_file+0xc0>
   8c094:	e0bffc17 	ldw	r2,-16(fp)
   8c098:	1007883a 	mov	r3,r2
   8c09c:	e0bffe17 	ldw	r2,-8(fp)
   8c0a0:	1885883a 	add	r2,r3,r2
   8c0a4:	10800003 	ldbu	r2,0(r2)
   8c0a8:	10803fcc 	andi	r2,r2,255
   8c0ac:	1080201c 	xori	r2,r2,128
   8c0b0:	10bfe004 	addi	r2,r2,-128
   8c0b4:	1004c03a 	cmpne	r2,r2,zero
   8c0b8:	10000a1e 	bne	r2,zero,8c0e4 <alt_find_file+0xe8>
   8c0bc:	e0bffd17 	ldw	r2,-12(fp)
   8c0c0:	11000217 	ldw	r4,8(r2)
   8c0c4:	e1bffc17 	ldw	r6,-16(fp)
   8c0c8:	e17ffe17 	ldw	r5,-8(fp)
   8c0cc:	008c2380 	call	8c238 <memcmp>
   8c0d0:	1004c03a 	cmpne	r2,r2,zero
   8c0d4:	1000031e 	bne	r2,zero,8c0e4 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   8c0d8:	e0bffd17 	ldw	r2,-12(fp)
   8c0dc:	e0bfff15 	stw	r2,-4(fp)
   8c0e0:	00000806 	br	8c104 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   8c0e4:	e0bffd17 	ldw	r2,-12(fp)
   8c0e8:	10800017 	ldw	r2,0(r2)
   8c0ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8c0f0:	00c00274 	movhi	r3,9
   8c0f4:	18f8e604 	addi	r3,r3,-7272
   8c0f8:	e0bffd17 	ldw	r2,-12(fp)
   8c0fc:	10ffc91e 	bne	r2,r3,8c024 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   8c100:	e03fff15 	stw	zero,-4(fp)
   8c104:	e0bfff17 	ldw	r2,-4(fp)
}
   8c108:	e037883a 	mov	sp,fp
   8c10c:	dfc00117 	ldw	ra,4(sp)
   8c110:	df000017 	ldw	fp,0(sp)
   8c114:	dec00204 	addi	sp,sp,8
   8c118:	f800283a 	ret

0008c11c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   8c11c:	defffa04 	addi	sp,sp,-24
   8c120:	dfc00515 	stw	ra,20(sp)
   8c124:	df000415 	stw	fp,16(sp)
   8c128:	dc000315 	stw	r16,12(sp)
   8c12c:	df000304 	addi	fp,sp,12
   8c130:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   8c134:	00bffa04 	movi	r2,-24
   8c138:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8c13c:	e03ffe15 	stw	zero,-8(fp)
   8c140:	00002006 	br	8c1c4 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
   8c144:	e13ffe17 	ldw	r4,-8(fp)
   8c148:	04000274 	movhi	r16,9
   8c14c:	84346804 	addi	r16,r16,-11872
   8c150:	01400304 	movi	r5,12
   8c154:	00895e00 	call	895e0 <__mulsi3>
   8c158:	1405883a 	add	r2,r2,r16
   8c15c:	10800017 	ldw	r2,0(r2)
   8c160:	1004c03a 	cmpne	r2,r2,zero
   8c164:	1000141e 	bne	r2,zero,8c1b8 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
   8c168:	e13ffe17 	ldw	r4,-8(fp)
   8c16c:	04000274 	movhi	r16,9
   8c170:	84346804 	addi	r16,r16,-11872
   8c174:	01400304 	movi	r5,12
   8c178:	00895e00 	call	895e0 <__mulsi3>
   8c17c:	1407883a 	add	r3,r2,r16
   8c180:	e0bfff17 	ldw	r2,-4(fp)
   8c184:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   8c188:	00800274 	movhi	r2,9
   8c18c:	10b8ea04 	addi	r2,r2,-7256
   8c190:	10c00017 	ldw	r3,0(r2)
   8c194:	e0bffe17 	ldw	r2,-8(fp)
   8c198:	1880040e 	bge	r3,r2,8c1ac <alt_get_fd+0x90>
      {
        alt_max_fd = i;
   8c19c:	00c00274 	movhi	r3,9
   8c1a0:	18f8ea04 	addi	r3,r3,-7256
   8c1a4:	e0bffe17 	ldw	r2,-8(fp)
   8c1a8:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   8c1ac:	e0bffe17 	ldw	r2,-8(fp)
   8c1b0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   8c1b4:	00000606 	br	8c1d0 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8c1b8:	e0bffe17 	ldw	r2,-8(fp)
   8c1bc:	10800044 	addi	r2,r2,1
   8c1c0:	e0bffe15 	stw	r2,-8(fp)
   8c1c4:	e0bffe17 	ldw	r2,-8(fp)
   8c1c8:	10800810 	cmplti	r2,r2,32
   8c1cc:	103fdd1e 	bne	r2,zero,8c144 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   8c1d0:	e0bffd17 	ldw	r2,-12(fp)
}
   8c1d4:	e037883a 	mov	sp,fp
   8c1d8:	dfc00217 	ldw	ra,8(sp)
   8c1dc:	df000117 	ldw	fp,4(sp)
   8c1e0:	dc000017 	ldw	r16,0(sp)
   8c1e4:	dec00304 	addi	sp,sp,12
   8c1e8:	f800283a 	ret

0008c1ec <atexit>:
   8c1ec:	200b883a 	mov	r5,r4
   8c1f0:	000d883a 	mov	r6,zero
   8c1f4:	0009883a 	mov	r4,zero
   8c1f8:	000f883a 	mov	r7,zero
   8c1fc:	008c2ac1 	jmpi	8c2ac <__register_exitproc>

0008c200 <exit>:
   8c200:	defffe04 	addi	sp,sp,-8
   8c204:	000b883a 	mov	r5,zero
   8c208:	dc000015 	stw	r16,0(sp)
   8c20c:	dfc00115 	stw	ra,4(sp)
   8c210:	2021883a 	mov	r16,r4
   8c214:	008c3e40 	call	8c3e4 <__call_exitprocs>
   8c218:	00800274 	movhi	r2,9
   8c21c:	10b8e104 	addi	r2,r2,-7292
   8c220:	11000017 	ldw	r4,0(r2)
   8c224:	20800f17 	ldw	r2,60(r4)
   8c228:	10000126 	beq	r2,zero,8c230 <exit+0x30>
   8c22c:	103ee83a 	callr	r2
   8c230:	8009883a 	mov	r4,r16
   8c234:	008c5d40 	call	8c5d4 <_exit>

0008c238 <memcmp>:
   8c238:	00c000c4 	movi	r3,3
   8c23c:	1980032e 	bgeu	r3,r6,8c24c <memcmp+0x14>
   8c240:	2144b03a 	or	r2,r4,r5
   8c244:	10c4703a 	and	r2,r2,r3
   8c248:	10000f26 	beq	r2,zero,8c288 <memcmp+0x50>
   8c24c:	31ffffc4 	addi	r7,r6,-1
   8c250:	3000061e 	bne	r6,zero,8c26c <memcmp+0x34>
   8c254:	00000a06 	br	8c280 <memcmp+0x48>
   8c258:	39ffffc4 	addi	r7,r7,-1
   8c25c:	00bfffc4 	movi	r2,-1
   8c260:	21000044 	addi	r4,r4,1
   8c264:	29400044 	addi	r5,r5,1
   8c268:	38800526 	beq	r7,r2,8c280 <memcmp+0x48>
   8c26c:	20c00003 	ldbu	r3,0(r4)
   8c270:	28800003 	ldbu	r2,0(r5)
   8c274:	18bff826 	beq	r3,r2,8c258 <memcmp+0x20>
   8c278:	1885c83a 	sub	r2,r3,r2
   8c27c:	f800283a 	ret
   8c280:	0005883a 	mov	r2,zero
   8c284:	f800283a 	ret
   8c288:	180f883a 	mov	r7,r3
   8c28c:	20c00017 	ldw	r3,0(r4)
   8c290:	28800017 	ldw	r2,0(r5)
   8c294:	18bfed1e 	bne	r3,r2,8c24c <memcmp+0x14>
   8c298:	31bfff04 	addi	r6,r6,-4
   8c29c:	21000104 	addi	r4,r4,4
   8c2a0:	29400104 	addi	r5,r5,4
   8c2a4:	39bff936 	bltu	r7,r6,8c28c <memcmp+0x54>
   8c2a8:	003fe806 	br	8c24c <memcmp+0x14>

0008c2ac <__register_exitproc>:
   8c2ac:	defffa04 	addi	sp,sp,-24
   8c2b0:	00800274 	movhi	r2,9
   8c2b4:	10b8e104 	addi	r2,r2,-7292
   8c2b8:	dc000015 	stw	r16,0(sp)
   8c2bc:	14000017 	ldw	r16,0(r2)
   8c2c0:	dd000415 	stw	r20,16(sp)
   8c2c4:	2829883a 	mov	r20,r5
   8c2c8:	81405217 	ldw	r5,328(r16)
   8c2cc:	dcc00315 	stw	r19,12(sp)
   8c2d0:	dc800215 	stw	r18,8(sp)
   8c2d4:	dc400115 	stw	r17,4(sp)
   8c2d8:	dfc00515 	stw	ra,20(sp)
   8c2dc:	2023883a 	mov	r17,r4
   8c2e0:	3027883a 	mov	r19,r6
   8c2e4:	3825883a 	mov	r18,r7
   8c2e8:	28002526 	beq	r5,zero,8c380 <__register_exitproc+0xd4>
   8c2ec:	29000117 	ldw	r4,4(r5)
   8c2f0:	008007c4 	movi	r2,31
   8c2f4:	11002716 	blt	r2,r4,8c394 <__register_exitproc+0xe8>
   8c2f8:	8800101e 	bne	r17,zero,8c33c <__register_exitproc+0x90>
   8c2fc:	2105883a 	add	r2,r4,r4
   8c300:	1085883a 	add	r2,r2,r2
   8c304:	20c00044 	addi	r3,r4,1
   8c308:	1145883a 	add	r2,r2,r5
   8c30c:	0009883a 	mov	r4,zero
   8c310:	15000215 	stw	r20,8(r2)
   8c314:	28c00115 	stw	r3,4(r5)
   8c318:	2005883a 	mov	r2,r4
   8c31c:	dfc00517 	ldw	ra,20(sp)
   8c320:	dd000417 	ldw	r20,16(sp)
   8c324:	dcc00317 	ldw	r19,12(sp)
   8c328:	dc800217 	ldw	r18,8(sp)
   8c32c:	dc400117 	ldw	r17,4(sp)
   8c330:	dc000017 	ldw	r16,0(sp)
   8c334:	dec00604 	addi	sp,sp,24
   8c338:	f800283a 	ret
   8c33c:	29802204 	addi	r6,r5,136
   8c340:	00800044 	movi	r2,1
   8c344:	110e983a 	sll	r7,r2,r4
   8c348:	30c04017 	ldw	r3,256(r6)
   8c34c:	2105883a 	add	r2,r4,r4
   8c350:	1085883a 	add	r2,r2,r2
   8c354:	1185883a 	add	r2,r2,r6
   8c358:	19c6b03a 	or	r3,r3,r7
   8c35c:	14802015 	stw	r18,128(r2)
   8c360:	14c00015 	stw	r19,0(r2)
   8c364:	00800084 	movi	r2,2
   8c368:	30c04015 	stw	r3,256(r6)
   8c36c:	88bfe31e 	bne	r17,r2,8c2fc <__register_exitproc+0x50>
   8c370:	30804117 	ldw	r2,260(r6)
   8c374:	11c4b03a 	or	r2,r2,r7
   8c378:	30804115 	stw	r2,260(r6)
   8c37c:	003fdf06 	br	8c2fc <__register_exitproc+0x50>
   8c380:	00800274 	movhi	r2,9
   8c384:	10bfde04 	addi	r2,r2,-136
   8c388:	100b883a 	mov	r5,r2
   8c38c:	80805215 	stw	r2,328(r16)
   8c390:	003fd606 	br	8c2ec <__register_exitproc+0x40>
   8c394:	00800034 	movhi	r2,0
   8c398:	10800004 	addi	r2,r2,0
   8c39c:	1000021e 	bne	r2,zero,8c3a8 <__register_exitproc+0xfc>
   8c3a0:	013fffc4 	movi	r4,-1
   8c3a4:	003fdc06 	br	8c318 <__register_exitproc+0x6c>
   8c3a8:	01006404 	movi	r4,400
   8c3ac:	103ee83a 	callr	r2
   8c3b0:	1007883a 	mov	r3,r2
   8c3b4:	103ffa26 	beq	r2,zero,8c3a0 <__register_exitproc+0xf4>
   8c3b8:	80805217 	ldw	r2,328(r16)
   8c3bc:	180b883a 	mov	r5,r3
   8c3c0:	18000115 	stw	zero,4(r3)
   8c3c4:	18800015 	stw	r2,0(r3)
   8c3c8:	80c05215 	stw	r3,328(r16)
   8c3cc:	18006215 	stw	zero,392(r3)
   8c3d0:	18006315 	stw	zero,396(r3)
   8c3d4:	0009883a 	mov	r4,zero
   8c3d8:	883fc826 	beq	r17,zero,8c2fc <__register_exitproc+0x50>
   8c3dc:	003fd706 	br	8c33c <__register_exitproc+0x90>

0008c3e0 <register_fini>:
   8c3e0:	f800283a 	ret

0008c3e4 <__call_exitprocs>:
   8c3e4:	00800274 	movhi	r2,9
   8c3e8:	10b8e104 	addi	r2,r2,-7292
   8c3ec:	10800017 	ldw	r2,0(r2)
   8c3f0:	defff304 	addi	sp,sp,-52
   8c3f4:	df000b15 	stw	fp,44(sp)
   8c3f8:	d8800115 	stw	r2,4(sp)
   8c3fc:	00800034 	movhi	r2,0
   8c400:	10800004 	addi	r2,r2,0
   8c404:	1005003a 	cmpeq	r2,r2,zero
   8c408:	d8800215 	stw	r2,8(sp)
   8c40c:	d8800117 	ldw	r2,4(sp)
   8c410:	dd400815 	stw	r21,32(sp)
   8c414:	dd000715 	stw	r20,28(sp)
   8c418:	10805204 	addi	r2,r2,328
   8c41c:	dfc00c15 	stw	ra,48(sp)
   8c420:	ddc00a15 	stw	r23,40(sp)
   8c424:	dd800915 	stw	r22,36(sp)
   8c428:	dcc00615 	stw	r19,24(sp)
   8c42c:	dc800515 	stw	r18,20(sp)
   8c430:	dc400415 	stw	r17,16(sp)
   8c434:	dc000315 	stw	r16,12(sp)
   8c438:	282b883a 	mov	r21,r5
   8c43c:	2039883a 	mov	fp,r4
   8c440:	d8800015 	stw	r2,0(sp)
   8c444:	2829003a 	cmpeq	r20,r5,zero
   8c448:	d8800117 	ldw	r2,4(sp)
   8c44c:	14405217 	ldw	r17,328(r2)
   8c450:	88001026 	beq	r17,zero,8c494 <__call_exitprocs+0xb0>
   8c454:	ddc00017 	ldw	r23,0(sp)
   8c458:	88800117 	ldw	r2,4(r17)
   8c45c:	8c802204 	addi	r18,r17,136
   8c460:	143fffc4 	addi	r16,r2,-1
   8c464:	80000916 	blt	r16,zero,8c48c <__call_exitprocs+0xa8>
   8c468:	05bfffc4 	movi	r22,-1
   8c46c:	a000151e 	bne	r20,zero,8c4c4 <__call_exitprocs+0xe0>
   8c470:	8409883a 	add	r4,r16,r16
   8c474:	2105883a 	add	r2,r4,r4
   8c478:	1485883a 	add	r2,r2,r18
   8c47c:	10c02017 	ldw	r3,128(r2)
   8c480:	a8c01126 	beq	r21,r3,8c4c8 <__call_exitprocs+0xe4>
   8c484:	843fffc4 	addi	r16,r16,-1
   8c488:	85bff81e 	bne	r16,r22,8c46c <__call_exitprocs+0x88>
   8c48c:	d8800217 	ldw	r2,8(sp)
   8c490:	10003126 	beq	r2,zero,8c558 <__call_exitprocs+0x174>
   8c494:	dfc00c17 	ldw	ra,48(sp)
   8c498:	df000b17 	ldw	fp,44(sp)
   8c49c:	ddc00a17 	ldw	r23,40(sp)
   8c4a0:	dd800917 	ldw	r22,36(sp)
   8c4a4:	dd400817 	ldw	r21,32(sp)
   8c4a8:	dd000717 	ldw	r20,28(sp)
   8c4ac:	dcc00617 	ldw	r19,24(sp)
   8c4b0:	dc800517 	ldw	r18,20(sp)
   8c4b4:	dc400417 	ldw	r17,16(sp)
   8c4b8:	dc000317 	ldw	r16,12(sp)
   8c4bc:	dec00d04 	addi	sp,sp,52
   8c4c0:	f800283a 	ret
   8c4c4:	8409883a 	add	r4,r16,r16
   8c4c8:	88c00117 	ldw	r3,4(r17)
   8c4cc:	2105883a 	add	r2,r4,r4
   8c4d0:	1445883a 	add	r2,r2,r17
   8c4d4:	18ffffc4 	addi	r3,r3,-1
   8c4d8:	11800217 	ldw	r6,8(r2)
   8c4dc:	1c001526 	beq	r3,r16,8c534 <__call_exitprocs+0x150>
   8c4e0:	10000215 	stw	zero,8(r2)
   8c4e4:	303fe726 	beq	r6,zero,8c484 <__call_exitprocs+0xa0>
   8c4e8:	00c00044 	movi	r3,1
   8c4ec:	1c06983a 	sll	r3,r3,r16
   8c4f0:	90804017 	ldw	r2,256(r18)
   8c4f4:	8cc00117 	ldw	r19,4(r17)
   8c4f8:	1884703a 	and	r2,r3,r2
   8c4fc:	10001426 	beq	r2,zero,8c550 <__call_exitprocs+0x16c>
   8c500:	90804117 	ldw	r2,260(r18)
   8c504:	1884703a 	and	r2,r3,r2
   8c508:	10000c1e 	bne	r2,zero,8c53c <__call_exitprocs+0x158>
   8c50c:	2105883a 	add	r2,r4,r4
   8c510:	1485883a 	add	r2,r2,r18
   8c514:	11400017 	ldw	r5,0(r2)
   8c518:	e009883a 	mov	r4,fp
   8c51c:	303ee83a 	callr	r6
   8c520:	88800117 	ldw	r2,4(r17)
   8c524:	98bfc81e 	bne	r19,r2,8c448 <__call_exitprocs+0x64>
   8c528:	b8800017 	ldw	r2,0(r23)
   8c52c:	147fd526 	beq	r2,r17,8c484 <__call_exitprocs+0xa0>
   8c530:	003fc506 	br	8c448 <__call_exitprocs+0x64>
   8c534:	8c000115 	stw	r16,4(r17)
   8c538:	003fea06 	br	8c4e4 <__call_exitprocs+0x100>
   8c53c:	2105883a 	add	r2,r4,r4
   8c540:	1485883a 	add	r2,r2,r18
   8c544:	11000017 	ldw	r4,0(r2)
   8c548:	303ee83a 	callr	r6
   8c54c:	003ff406 	br	8c520 <__call_exitprocs+0x13c>
   8c550:	303ee83a 	callr	r6
   8c554:	003ff206 	br	8c520 <__call_exitprocs+0x13c>
   8c558:	88800117 	ldw	r2,4(r17)
   8c55c:	1000081e 	bne	r2,zero,8c580 <__call_exitprocs+0x19c>
   8c560:	89000017 	ldw	r4,0(r17)
   8c564:	20000726 	beq	r4,zero,8c584 <__call_exitprocs+0x1a0>
   8c568:	b9000015 	stw	r4,0(r23)
   8c56c:	8809883a 	mov	r4,r17
   8c570:	00000000 	call	0 <__alt_mem_sram-0x80000>
   8c574:	bc400017 	ldw	r17,0(r23)
   8c578:	883fb71e 	bne	r17,zero,8c458 <__call_exitprocs+0x74>
   8c57c:	003fc506 	br	8c494 <__call_exitprocs+0xb0>
   8c580:	89000017 	ldw	r4,0(r17)
   8c584:	882f883a 	mov	r23,r17
   8c588:	2023883a 	mov	r17,r4
   8c58c:	883fb21e 	bne	r17,zero,8c458 <__call_exitprocs+0x74>
   8c590:	003fc006 	br	8c494 <__call_exitprocs+0xb0>

0008c594 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   8c594:	defffd04 	addi	sp,sp,-12
   8c598:	df000215 	stw	fp,8(sp)
   8c59c:	df000204 	addi	fp,sp,8
   8c5a0:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   8c5a4:	e0bfff17 	ldw	r2,-4(fp)
   8c5a8:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   8c5ac:	e0bffe17 	ldw	r2,-8(fp)
   8c5b0:	1005003a 	cmpeq	r2,r2,zero
   8c5b4:	1000021e 	bne	r2,zero,8c5c0 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   8c5b8:	002af070 	cmpltui	zero,zero,43969
   8c5bc:	00000106 	br	8c5c4 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   8c5c0:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   8c5c4:	e037883a 	mov	sp,fp
   8c5c8:	df000017 	ldw	fp,0(sp)
   8c5cc:	dec00104 	addi	sp,sp,4
   8c5d0:	f800283a 	ret

0008c5d4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   8c5d4:	defffd04 	addi	sp,sp,-12
   8c5d8:	dfc00215 	stw	ra,8(sp)
   8c5dc:	df000115 	stw	fp,4(sp)
   8c5e0:	df000104 	addi	fp,sp,4
   8c5e4:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   8c5e8:	e13fff17 	ldw	r4,-4(fp)
   8c5ec:	008c5940 	call	8c594 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   8c5f0:	003fff06 	br	8c5f0 <_exit+0x1c>
   8c5f4:	0008c3e0 	cmpeqi	zero,zero,8975
